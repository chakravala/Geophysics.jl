var documenterSearchIndex = {"docs":
[{"location":"references.html#References-1","page":"References","title":"References","text":"","category":"section"},{"location":"references.html#","page":"References","title":"References","text":"(Image: DOI) (Image: Build Status) (Image: Build status) (Image: Docs Stable) (Image: Docs Dev) (Image: Gitter)","category":"page"},{"location":"references.html#","page":"References","title":"References","text":"R. A. Minzer and W. S. Ripley, The ARDC Model Atmosphere, 1956, ARDC (1956)\nR. A. Minzer, K. S. W. Champion, and H. L. Pond, The ARDC Model Atmosphere, 1959, ARDC (1959)\nNASA, USAF, and USWB, U.S. Standard Atmosphere, 1962, ICAO (1962)\nNOAA, NASA, and USAF, U.S. Standard Atmosphere, 1976, NOAA (1976)","category":"page"},{"location":"library.html#Geophysics.jl-Library-1","page":"Library","title":"Geophysics.jl Library","text":"","category":"section"},{"location":"library.html#","page":"Library","title":"Library","text":"Pages = [\"library.md\"]","category":"page"},{"location":"library.html#","page":"Library","title":"Library","text":"Modules = [Geophysics]\nFilter = t -> typeof(t) != Float64","category":"page"},{"location":"library.html#Geophysics.English","page":"Library","title":"Geophysics.English","text":"English\n\nEngineering UnitSystem historically used by Britain and United States.\n\njulia> newton(English) # ft¬≥‚ãÖslug‚Åª¬π‚ãÖs‚Åª¬≤\n3.439777239861702e-8\n\njulia> avogadro(English) # slug-mol‚Åª¬π\n8.788654166888458e24\n\njulia> boltzmann(English) # ft‚ãÖlb‚ãÖ¬∞R‚Åª¬π\n5.657302466e-24\n\njulia> planck(English) # ft‚ãÖlb‚ãÖs\n4.887138541095963e-34\n\njulia> lightspeed(English) # ft‚ãÖs‚Åª¬π\n9.835695538e8\n\n\n\n\n\n","category":"constant"},{"location":"library.html#Geophysics.Metric","page":"Library","title":"Geophysics.Metric","text":"Metric\n\nSysteme International d'Unites (the SI units) adopted as the preffered UnitSystem.\n\njulia> newton(Metric) # m¬≥‚ãÖkg‚Åª¬π‚ãÖs‚Åª¬≤\n6.6743e-11\n\njulia> avogadro(Metric) # mol‚Åª¬π\n6.02214076e23\n\njulia> boltzmann(Metric) # J‚ãÖK‚Åª¬π\n1.380649e-23\n\njulia> planck(Metric) # J‚ãÖs\n6.62607015e-34\n\njulia> lightspeed(Metric) # m‚ãÖs‚Åª¬π\n2.99792458e8\n\njulia> permeability(Metric) # H‚ãÖm‚Åª¬π\n1.2566370614359173e-6\n\n\n\n\n\n","category":"constant"},{"location":"library.html#Geophysics.AbstractMole","page":"Library","title":"Geophysics.AbstractMole","text":"abstract type AbstractMole{M,U} end\n\nChemical susbtance specified by molarmass M with unit system U. Induces dervived values of molarmass, units, molecularmass, gasconstant,viscosity, conductivity, heatvolume, heatpressure, heatratio, energy, enthalpy, freedom, prandtl, sonicspeed, and constants associated with the UnitSystem values.\n\n\n\n\n\n","category":"type"},{"location":"library.html#Geophysics.Atmosphere","page":"Library","title":"Geophysics.Atmosphere","text":"Atmosphere{f,n}\n\nTemperature column of fluid f at sea level radius r having n thermal layers.\n\n\n\n\n\n","category":"type"},{"location":"library.html#Geophysics.FluidState","page":"Library","title":"Geophysics.FluidState","text":"FluidState{f}\n\nThermodynamic state of fluid f at temperature T and pressure P. Induces derived values fluid, temperature, pressure, density, volume, kinematic, heatcapacity, diffusivity, elasticity, impedance, intensity, and values associated with f::AbstractMole derivations.\n\n\n\n\n\n","category":"type"},{"location":"library.html#Geophysics.MoleGas","page":"Library","title":"Geophysics.MoleGas","text":"abstract type MoleGas{M,Œº,TŒº,k,Tk,U} <: AbstractMole{M,U} end\n\nMolecular gas susbtance specified by molarmass M and Sutherland constants Œº,TŒº,k,Tk with unit system U. Induces additional dervived values if applicable wavenumber, wavelength, frequency, vibration, and inherited constants associated with the AbstractMole values.\n\n\n\n\n\n","category":"type"},{"location":"library.html#Geophysics.UnitSystem","page":"Library","title":"Geophysics.UnitSystem","text":"abstract type UnitSystem{GG,NA,kB,ùò©,ùò§} end\n\nStandardized for engineering based on fundamental constants: GG Newton's gravitational constant, NA Avagadro's number, kB Boltzmann's constant, ùò© Planck's constant, and ùò§ speed of light. Primarily the Metric SI unit system is used in addition to the historic English engineering unit system. These constants induce derived values for newton, avogadro, boltzmann, universal, planck, lightspeed, permeability, permittivity, coulomb, and additional constants atomicmass, stefan, radiationintensity, impedance, elementarycharge, faraday, klitzing, conductance, and R·µ§,m·µ§,œÉ,ƒß,Œº‚ÇÄ,Œµ‚ÇÄ,k‚Çë,ùò¶,ùîâ,RK,Z‚ÇÄ,G‚ÇÄ.\n\n\n\n\n\n","category":"type"},{"location":"library.html#Geophysics.Weather","page":"Library","title":"Geophysics.Weather","text":"Weather{r,g,f,n}\n\nThermodynamic column state of fluid f at sea level radius r and gravitational acceleration g having n thermal Atmosphere layers. Induces derived values fluid, temperature, pressure, density, volume, kinematic, heatcapacity, diffusivity, elasticity, impedance, intensity, weight, potential, and inherited values associated with f::AbstractMole derivations.\n\n\n\n\n\n","category":"type"},{"location":"library.html#Geophysics.atomicmass","page":"Library","title":"Geophysics.atomicmass","text":"atomicmass(U::UnitSystem) = 1/1000avogadro(U)\n\nAtomic mass unit m·µ§ of 1/12 of the C‚ÇÅ‚ÇÇ carbon-12 atom's mass  (kg or slugs).\n\njulia> atomicmass(Metric) # kg\n1.6605390671738466e-27\n\njulia> atomicmass(English) # slugs\n1.1378306405177856e-28\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.avogadro","page":"Library","title":"Geophysics.avogadro","text":"avogadro(x) = universal(x)/boltzmann(x)\n\nAvogadro NA is molarmass(x)/molecularmass(x) number of atoms in a 12 g sample of C‚ÇÅ‚ÇÇ.\n\njulia> avogadro(Metric) # mol‚Åª¬π\n6.02214076e23\n\njulia> avogadro(English) # slug-mol‚Åª¬π\n8.788654166888458e24\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.boltzmann","page":"Library","title":"Geophysics.boltzmann","text":"boltzmann(x) = universal(x)/avogadro(x)\n\nBoltzmann constant kB is the entropy amount of a unit number microstate permutation.\n\npressure*molecularmass == density*boltzmann*temperature\n\nIt satisfies the ideal gas law.\n\njulia> boltzmann(Metric) # J‚ãÖK‚Åª¬π\n1.380649e-23\n\njulia> boltzmann(English) # ft‚ãÖlb‚ãÖ¬∞R‚Åª¬π\n5.657302466e-24\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.conductance","page":"Library","title":"Geophysics.conductance","text":"conductance(U::UnitSystem) = 2elementarycharge(U)^2/ùò©\n\nConductance quantum G‚ÇÄ is a quantized unit of electrical conductance (S).\n\njulia> conductance(Metric) # S\n7.750127677191451e-5\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.conductivity-Tuple{FluidState}","page":"Library","title":"Geophysics.conductivity","text":"conductivity(F::FluidState) = conductivity(temperature(F),fluid(F))\n\nLaminar thermal conductivity k at the temperature F (W‚ãÖm‚Åª¬π‚ãÖK‚Åª¬π or lb‚ãÖs‚Åª¬π‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.conductivity-Tuple{Real,Weather}","page":"Library","title":"Geophysics.conductivity","text":"conductivity(h::Real=0,W::Weather) = conductivity(temperature(h,W),fluid(W))\n\nLaminar thermal conductivity k at altitude h of Weather (W‚ãÖm‚Åª¬π‚ãÖK‚Åª¬π or lb‚ãÖs‚Åª¬π‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.conductivity-Union{Tuple{MoleGas{M,Œº,TŒº,k,Tk,U} where U where Tk}, Tuple{k}, Tuple{TŒº}, Tuple{Œº}, Tuple{M}} where k where TŒº where Œº where M","page":"Library","title":"Geophysics.conductivity","text":"conductivity(T::Real,G::AbstractMole)\n\nLaminar thermal conductivity k of temperature variation (W‚ãÖm‚Åª¬π‚ãÖK‚Åª¬π or lb‚ãÖs‚Åª¬π‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.coulomb","page":"Library","title":"Geophysics.coulomb","text":"coulomb(x) = 1/4œÄ/œµ‚ÇÄ\n\nElectrostatic proportionality constant k‚Çë for the Coulomb's law force (N‚ãÖm¬≤‚ãÖC‚Åª¬≤).\n\njulia> coulomb(Metric) # N‚ãÖm¬≤‚ãÖC‚Åª¬≤\n8.987551787368177e9\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.density","page":"Library","title":"Geophysics.density","text":"density(h::Real=0,W::Weather=Standard) = density(W(h))\n\nInertial mass per volume œÅ at altitude h of Weather location (kg‚ãÖm‚Åª¬≥ or slugs‚ãÖft‚Åª¬≥).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.density-Tuple{FluidState}","page":"Library","title":"Geophysics.density","text":"density(F::FluidState) = pressure(F)/temperature(F)/gasconstant(F)\n\nInertial mass per volume œÅ of at a pressure and temperature (kg‚ãÖm‚Åª¬≥ or slugs‚ãÖft‚Åª¬≥).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.diffusivity","page":"Library","title":"Geophysics.diffusivity","text":"diffusivity(h::Real=0,W::Weather=Standard) = diffusivity(W(h))\n\nThermal diffusivity Œ± at altitude h of Weather location (m¬≤‚ãÖs‚Åª¬π or ft¬≤‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.diffusivity-Tuple{FluidState}","page":"Library","title":"Geophysics.diffusivity","text":"diffusivity(F::FluidState) = conductivity(F)/heatcapacity(F)\n\nThermal diffusivity Œ± at a pressure and temperature (m¬≤‚ãÖs‚Åª¬π or ft¬≤‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.einstein","page":"Library","title":"Geophysics.einstein","text":"einstein(U::UnitSystem) = 8œÄ*newton(U)/lightspeed(U)^4\n\nEinstein's gravitational constant from the Einstein field equations (? or ?).\n\njulia> einstein(Metric) # ?\n1.6605390671738466e-27\n\njulia> einstein(English) # ?\n1.1378306405177856e-28\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.elasticity","page":"Library","title":"Geophysics.elasticity","text":"elasticity(h::Real=0,W::Weather=Standard) = elasticity(W(h))\n\nBulk modulus of elasticity B at altitude h of Weather location (Pa or slug‚ãÖft‚Åª¬π‚ãÖs‚Åª¬≤).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.elasticity-Tuple{FluidState}","page":"Library","title":"Geophysics.elasticity","text":"elasticity(F::FluidState) = heatratio(F)*pressure(F)\n\nBulk modulus of elasticity B at a pressure and temperature (Pa or slug‚ãÖft‚Åª¬π‚ãÖs‚Åª¬≤).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.elementarycharge","page":"Library","title":"Geophysics.elementarycharge","text":"elementarycharge(U::UnitSystem) = sqrt(2ùò©/137impedance(U))\n\nQuantized elementary charge ùò¶ of a proton or electron  (C).\n\njulia> elementarycharge(Metric) # C\n1.6023871202135755e-19\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.energy-Tuple{FluidState}","page":"Library","title":"Geophysics.energy","text":"energy(F::FluidState) = energy(temperature(F),fluid(F))\n\nSpecific energy e at the temperature of F (J‚ãÖkg‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.energy-Tuple{Real,AbstractMole}","page":"Library","title":"Geophysics.energy","text":"energy(T::Real,G::AbstractMole) = heatvolume(T,G)*T\n\nSpecific energy e of ideal gas enthalpy(T,G)-gasconstant(G)*T (J‚ãÖkg‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.energy-Tuple{Real,Weather}","page":"Library","title":"Geophysics.energy","text":"energy(h::Real=0,W::Weather) = energy(temperature(h,W),fluid(W))\n\nSpecific energy e at altitude h of Weather location (J‚ãÖkg‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.enthalpy-Tuple{FluidState}","page":"Library","title":"Geophysics.enthalpy","text":"enthalpy(F::FluidState) = enthalpy(temperature(F),fluid(F))\n\nSpecific enthalpy h at the temperature of F (J‚ãÖkg‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.enthalpy-Tuple{Real,AbstractMole}","page":"Library","title":"Geophysics.enthalpy","text":"enthalpy(T::Real,G::AbstractMole) = heatpressure(T,G)*T\n\nSpecific enthalpy h of ideal gas energy(T,G)+gasconstant(G)*T (J‚ãÖkg‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.enthalpy-Tuple{Real,Weather}","page":"Library","title":"Geophysics.enthalpy","text":"enthalpy(h::Real=0,W::Weather) = enthalpy(temperature(h,W),fluid(W))\n\nSpecific enthalpy h at altitude of Weather location (J‚ãÖkg‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.faraday","page":"Library","title":"Geophysics.faraday","text":"faraday(U::UnitSystem) = elementarycharge(U)*avogadro(U)\n\nElectric charge per mole of electrons ùîâ based on elementary charge (C‚ãÖmol‚Åª¬π).\n\njulia> faraday(Metric) # C‚ãÖmol‚Åª¬π\n1.6023871202135755e-19\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.feet-Tuple{Any}","page":"Library","title":"Geophysics.feet","text":"feet(d) = 3.280834882777471d\n\nConverts distance d from meters to feet (ft).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.fluid-Union{Tuple{FluidState{f}}, Tuple{f}} where f","page":"Library","title":"Geophysics.fluid","text":"fluid(x)\n\nSpecification of an AbstractMole fluid chemical instance.\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.freedom-Tuple{FluidState}","page":"Library","title":"Geophysics.freedom","text":"freedom(F::FluidState) = freedom(temperature(F),fluid(F))\n\nDegrees of freedom f at the temperature of F (dimensionless).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.freedom-Tuple{Real,AbstractMole}","page":"Library","title":"Geophysics.freedom","text":"freedom(T::Real,G::AbstractMole) = 2heatvolume(T,G)/gasconstant(G)\n\nDegrees of freedom f with storage energy per mole gasconstant(G)*T/2 (dimensionless).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.freedom-Tuple{Real,Weather}","page":"Library","title":"Geophysics.freedom","text":"freedom(h::Real=0,W::Weather) = freedom(temperature(h,W),fluid(W))\n\nDegrees of freedom f at altitude h of `Weather location (dimensionless).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.frequency-Tuple{MoleGas}","page":"Library","title":"Geophysics.frequency","text":"frequency(G::MoleGas) = wavenumber(G)*lightspeed(G)\n\nSpectroscopic vibrational frequencies ŒΩ of polyatomic molecules if applicable (Hz or s‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.gasconstant-Tuple{AbstractMole}","page":"Library","title":"Geophysics.gasconstant","text":"gasconstant(x) = universal(x)/molarmass(x)\n\nSpecific gas constant of chemical (J‚ãÖkg‚Åª¬π‚ãÖK‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.gravity","page":"Library","title":"Geophysics.gravity","text":"gravity(h::Real=0,W::Weather=Standard) = gravity(W)*radius(W)^2/altabs(h,W)^2\n\nGravitational acceleration g at altitude h of Weather column (m‚ãÖs‚Åª¬≤ or ft‚ãÖs‚Åª¬≤).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.gravity-Union{Tuple{}, Tuple{Weather{r,g,f,n} where n where f}, Tuple{g}, Tuple{r}} where g where r","page":"Library","title":"Geophysics.gravity","text":"gravity(::Weather)\n\nSea level gravitational acceleration g at Weather column location (m‚ãÖs‚Åª¬≤ or ft‚ãÖs‚Åª¬≤).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.heatcapacity","page":"Library","title":"Geophysics.heatcapacity","text":"heatcapacity(h::Real=0,W::Weather=Standard) = heatcapacity(W(h))\n\nSpecific heat per mass at altitude h of Weather location (J‚ãÖm‚Åª¬≥‚ãÖK‚Åª¬π or lb‚ãÖft‚Åª¬≤‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.heatcapacity-Tuple{FluidState}","page":"Library","title":"Geophysics.heatcapacity","text":"heatcapacity(F::FluidState) = heatpressure(F)*density(F)\n\nSpecific heat per mass at a pressure and temperature (J‚ãÖm‚Åª¬≥‚ãÖK‚Åª¬π or lb‚ãÖft‚Åª¬≤‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.heatpressure-Tuple{FluidState}","page":"Library","title":"Geophysics.heatpressure","text":"heatpressure(F::FluidState) = heatpressure(temperature(F),fluid(F))\n\nSpecific heat c‚Çö at the temperature of F (J‚ãÖkg‚Åª¬π‚ãÖK‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.heatpressure-Tuple{Real,MoleGas}","page":"Library","title":"Geophysics.heatpressure","text":"heatpressure(T::Real,G::AbstractMole) = heatvolume(T,G)+gasconstant(G)\n\nSpecific heat c‚Çö of ideal gas at constant pressure (J‚ãÖkg‚Åª¬π‚ãÖK‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.heatpressure-Tuple{Real,Weather}","page":"Library","title":"Geophysics.heatpressure","text":"heatpressure(h::Real=0,W::Weather) = heatpressure(temperature(h,W),fluid(W))\n\nSpecific heat c‚Çö at atltitude h of Weather column (J‚ãÖkg‚Åª¬π‚ãÖK‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.heatratio-Tuple{FluidState}","page":"Library","title":"Geophysics.heatratio","text":"heatratio(F::FluidState) = heatratio(temperature(F),fluid(F))\n\nSpecific heat ratio Œ≥ at the temperature of F (dimensionless).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.heatratio-Tuple{Real,MoleGas}","page":"Library","title":"Geophysics.heatratio","text":"heatratio(T::Real,G::AbstractMole) = heatpressure(T,G)/heatvolume(T,G)\n\nSpecific heat ratio Œ≥ at constant pressure to constant volume of ideal gas (dimensionless).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.heatratio-Tuple{Real,Weather}","page":"Library","title":"Geophysics.heatratio","text":"heatratio(h::Real=0,W::Weather) = heatratio(temperature(h,W),fluid(W))\n\nSpecific heat ratio Œ≥ at altitude h of Weather location (dimensionless).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.heatvolume-Tuple{FluidState}","page":"Library","title":"Geophysics.heatvolume","text":"heatvolume(F::FluidState) = heatvolume(temperature(F),fluid(F))\n\nSpecific heat c·µ• at the temperature of F (J‚ãÖkg‚Åª¬π‚ãÖK‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.heatvolume-Tuple{Real,AtomicGas}","page":"Library","title":"Geophysics.heatvolume","text":"heatvolume(T::Real,G::AbstractMole) = translation + rotation + vibration\n\nSpecific heat c·µ• of ideal gas at constant volume (J‚ãÖkg‚Åª¬π‚ãÖK‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.heatvolume-Tuple{Real,Weather}","page":"Library","title":"Geophysics.heatvolume","text":"heatvolume(h::Real=0,W::Weather) = heatvolume(temperature(h,W),fluid(W))\n\nSpecific heat c·µ• at altitude h of Weather column (J‚ãÖkg‚Åª¬π‚ãÖK‚Åª¬π or ft‚ãÖlb‚ãÖslug‚Åª¬π‚ãÖ¬∞R‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.impedance","page":"Library","title":"Geophysics.impedance","text":"impedance(U::UnitSystem) = permeability(U)*lightspeed(U)\n\nVacuum impedance of free space Z‚ÇÄ is magnitude ratio of electric to magnetic field (Œ©).\n\njulia> impedance(Metric) # Œ©\n376.73031346177066\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.impedance","page":"Library","title":"Geophysics.impedance","text":"impedance(h::Real=0,W::Weather=Standard) = impedance(W(h))\n\nSpecific acoustic resistance at altitude h of Weather (kg‚ãÖm‚Åª¬≥‚ãÖs‚Åª¬π or slug‚ãÖft‚Åª¬≥‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.impedance-Tuple{FluidState}","page":"Library","title":"Geophysics.impedance","text":"impedance(F::FluidState) = density(F)*sonicspeed(F)\n\nSpecific acoustic resistance at a pressure and temperature (kg‚ãÖm‚Åª¬≥‚ãÖs‚Åª¬π or slug‚ãÖft‚Åª¬≥‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.intensity","page":"Library","title":"Geophysics.intensity","text":"intensity(h::Real=0,W::Weather=Standard) = intensity(W(h))\n\nInstantaneous intensity I at altitude h of Weather at location (W‚ãÖm‚Åª¬≤ or slug‚ãÖs‚Åª¬≥).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.intensity-Tuple{FluidState}","page":"Library","title":"Geophysics.intensity","text":"intensity(F::FluidState) = pressure(F)^2/impedance(F)\n\nInstantaneous acoustic intensity I at a pressure and temperature (W‚ãÖm‚Åª¬≤ or slug‚ãÖs‚Åª¬≥).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.kelvin-Tuple{Any}","page":"Library","title":"Geophysics.kelvin","text":"kelvin(T) = (5/9)T\n\nConverts temperature T from degrees Rankine to Kelvin (K).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.kilograms-Tuple{Real}","page":"Library","title":"Geophysics.kilograms","text":"kilograms(m::Real) = 14.593903591998501m\n\nConverts mass m from slugs to kilogram (kg).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.kinematic","page":"Library","title":"Geophysics.kinematic","text":"kinematic(h::Real=0,W::Weather=Standard) = kinematic(W(h))\n\nKinematic viscosity ratio ŒΩ at altitude h of Weather location (m¬≤‚ãÖs‚Åª¬π or ft¬≤‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.kinematic-Tuple{FluidState}","page":"Library","title":"Geophysics.kinematic","text":"kinematic(F::FluidState) = viscosity(F)/density(F)\n\nKinematic viscosity ratio ŒΩ at a pressure and temperature (m¬≤‚ãÖs‚Åª¬π or ft¬≤‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.klitzing","page":"Library","title":"Geophysics.klitzing","text":"klitzing(U::UnitSystem) = 2/conductance(U)\n\nQuantized Hall resistance RK (Œ©).\n\njulia> klitzing(Metric) # Œ©\n25806.026472131292\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.lightspeed","page":"Library","title":"Geophysics.lightspeed","text":"lightspeed(x) = 1/sqrt(Œº‚ÇÄ*Œµ‚ÇÄ)\n\nSpeed of light in a vacuum ùò§ for massless particles (m‚ãÖs‚Åª¬π or ft‚ãÖs‚Åª¬π).\n\njulia> universal(Metric) # m‚ãÖs‚Åª¬π\n2.99792458e8\n\njulia> universal(English) # ft‚ãÖs‚Åª¬π\n9.835695538e8\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.meters-Tuple{Any}","page":"Library","title":"Geophysics.meters","text":"meters(d) = 0.3048004656526407d\n\nConverts distance d from feet to meters (m).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.molarmass-Union{Tuple{AbstractMole{M,U} where U}, Tuple{M}} where M","page":"Library","title":"Geophysics.molarmass","text":"molarmass(x) = molecularmass(x)*avogadro(x)\n\nMass of 1 mole of a chemical (kg‚ãÖmol‚Åª¬π or slug‚ãÖslug-mol‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.molecularmass-Tuple{AbstractMole}","page":"Library","title":"Geophysics.molecularmass","text":"molecularmass(x) = molarmass(x)/avogadro(x)\n\nMass of 1 molecule of a chemical (kg or slugs).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.molecules","page":"Library","title":"Geophysics.molecules","text":"molecules(n::Real,U::UnitSystem=Metric) = n*avogadro(U)\n\nConverts the number of moles n to number of molecules (dimensionless).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.moles-Tuple{Real,UnitSystem}","page":"Library","title":"Geophysics.moles","text":"moles(N::Real,U::UnitSystem=Metric) = N/avogadro(U)\n\nConverts the number of molecules N to number of moles (mol).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.newton","page":"Library","title":"Geophysics.newton","text":"newton(x)\n\nUniversal gravitational constant GG of Newton's law (m¬≥‚ãÖkg‚Åª¬π‚ãÖs‚Åª¬≤ or ft¬≥‚ãÖslug‚Åª¬π‚ãÖs‚Åª¬≤).\n\njuila> newton(Metric) # m¬≥‚ãÖkg‚Åª¬π‚ãÖs‚Åª¬≤\n6.6743e-11\n\njulia> newton(English) # ft¬≥‚ãÖslug‚Åª¬π‚ãÖs‚Åª¬≤\n3.439777239861702e-8\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.permeability","page":"Library","title":"Geophysics.permeability","text":"permeability(x) = 4œÄ*1e-7\n\nMagnetic permeability in a classical vacuum defined as Œº‚ÇÄ in SI units (H‚ãÖm‚Åª¬π).\n\njulia> permeability(Metric) # H‚ãÖm‚Åª¬π\n1.2566370614359173e-6\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.permittivity","page":"Library","title":"Geophysics.permittivity","text":"permittivity(x) = 1/Œº‚ÇÄ/lightspeed(x)^2\n\nDielectric permittivity constant Œµ‚ÇÄ of a classical vacuum (C¬≤‚ãÖN‚Åª¬π‚ãÖm‚Åª¬≤).\n\njulia> permittivity(Metric) # C¬≤‚ãÖN‚Åª¬π‚ãÖm‚Åª¬≤\n8.854187817620389e-12\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.planck","page":"Library","title":"Geophysics.planck","text":"planck(x) = 2œÄ*planckreduced(x)\n\nPlanck constant ùò© is energy per electromagnetic frequency (J‚ãÖs or ft‚ãÖlb‚ãÖs).\n\njulia> planck(Metric) # J‚ãÖs\n6.62607015e-34\n\njulia> planck(English) # ft‚ãÖlb‚ãÖs\n4.887138541095963e-34\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.planckreduced","page":"Library","title":"Geophysics.planckreduced","text":"planckreduced(x) = planck(x)/2œÄ\n\nReduced Planck constant ƒß is a Planck per radian (J‚ãÖs‚ãÖrad‚Åª¬π or ft‚ãÖlb‚ãÖs‚ãÖrad‚Åª¬π).\n\njulia> planckreduced(Metric) # J‚ãÖs‚ãÖrad‚Åª¬π\n1.0545718176461565e-34\n\njulia> planckreduced(English) # ft‚ãÖlb‚ãÖs‚ãÖrad‚Åª¬π\n7.778122563903365e-35\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.potential","page":"Library","title":"Geophysics.potential","text":"potential(h::Real=0,W::Weather=Standard) = gravity(h,W)*h\n\nSpecifc gravitational potential energy g at altitude h of Weather (m‚ãÖs‚Åª¬≤ or ft‚ãÖs‚Åª¬≤).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.prandtl-Tuple{FluidState}","page":"Library","title":"Geophysics.prandtl","text":"prandtl(F::FluidState) = prandtl(temperature(F),fluid(F))\n\nPrandtl number ratio at the temperature of F (dimensionless).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.prandtl-Tuple{Real,AbstractMole}","page":"Library","title":"Geophysics.prandtl","text":"prandtl(T::Real,G::AbstractMole) = viscosity(T,G)*heatpressure(T,G)/conductivity(T,G)\n\nPrandtl number is the ratio of momentum diffusivity to heat diffusivity (dimensionless).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.prandtl-Tuple{Real,Weather}","page":"Library","title":"Geophysics.prandtl","text":"prandtl(h::Real=0,W::Weather) = prandtl(temperature(h,W),fluid(W))\n\nPrandtl number at altitude h of Weather location (dimensionless).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.pressure","page":"Library","title":"Geophysics.pressure","text":"pressure(h::Real=0,W::Weather=Standard) = pressure(W(h))\n\nAbsolute force per unit area P  at altitude h of Weather column (Pa or slug‚ãÖft‚Åª¬π‚ãÖs‚Åª¬≤).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.pressure-Tuple{FluidState}","page":"Library","title":"Geophysics.pressure","text":"pressure(F::FluidState)\n\nAbsolute force per unit area P exerted by F (Pa or slug‚ãÖft‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.radius-Union{Tuple{}, Tuple{Weather{r,g,f,n} where n where f where g}, Tuple{r}} where r","page":"Library","title":"Geophysics.radius","text":"radius(::Weather)\n\nSea level radius r to planet's center of gravity at Weather column location (m or ft).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.rankine-Tuple{Any}","page":"Library","title":"Geophysics.rankine","text":"rankine(T) = (9/5)T\n\nConverts temperature T from Kelvin to degrees Rankine (¬∞R).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.slugs-Tuple{Real}","page":"Library","title":"Geophysics.slugs","text":"slugs(m::Real) = 0.06852176278239064m\n\nConverts mass m from kilograms to slugs (slug).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.sonicspeed-Tuple{FluidState}","page":"Library","title":"Geophysics.sonicspeed","text":"sonicspeed(F::FluidState) = sonicspeed(temperature(F),fluid(F))\n\nSpeed of sound wave disturbance at the temperature of F (m‚ãÖs‚Åª¬π or ft‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.sonicspeed-Tuple{Real,AbstractMole}","page":"Library","title":"Geophysics.sonicspeed","text":"sonicspeed(T::Real,G::AbstractMole) = sqrt(gasconstant(G)*heatratio(T,G)*T)\n\nSpeed of sound wave disturbance at isentropic conditions in ideal gas (m‚ãÖs‚Åª¬π or ft‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.sonicspeed-Tuple{Real,Weather}","page":"Library","title":"Geophysics.sonicspeed","text":"sonicspeed(h::Real=0,W::Weather) = sonicspeed(temperature(h,W),fluid(W))\n\nSpeed of sound wave disturbance at altitude h of Weather location (m‚ãÖs‚Åª¬π or ft‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.stefan","page":"Library","title":"Geophysics.stefan","text":"stefan(x) = 2œÄ^5*boltzmann(U)^4/(15planck(U)^3*lightspeed(U)^2)\n\nStefan-Boltzmann proportionality œÉ of black body radiation (W‚ãÖm‚Åª¬≤‚ãÖK‚Åª‚Å¥ or ?‚ãÖft‚Åª¬≤‚ãÖ¬∞R‚Åª‚Å¥).\n\njulia> stefan(Metric) # W‚ãÖm‚Åª¬≤‚ãÖK‚Åª‚Å¥\n5.6703744191844314e-8\n\njulia> stefan(English) # lb‚ãÖs‚Åª¬π‚ãÖft‚Åª¬≥‚ãÖ¬∞R‚Åª‚Å¥\n3.701277011123279e-10\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.temperature","page":"Library","title":"Geophysics.temperature","text":"temperature(h::Real=0,::Weather=Standard)\n\nAbsolute temperature T at geometric altitude h of Weather location (K or ¬∞R).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.temperature-Tuple{FluidState}","page":"Library","title":"Geophysics.temperature","text":"temperature(F::FluidState)\n\nAbsolute thermodynamic temperature scale T at F (K or ¬∞R).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.units-Union{Tuple{AbstractMole{M,U}}, Tuple{U}, Tuple{M}} where U where M","page":"Library","title":"Geophysics.units","text":"units(x)::UnitSystem\n\nRepresentation of unit system in terms of foundational constants (Metric or English).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.universal","page":"Library","title":"Geophysics.universal","text":"universal(x) = boltzmann(x)*avogadro(x)\n\nUniversal gas constant R·µ§ is factored into specific gasconstant(x)*molarmass(x) values.\n\npressure*molarmass == density*universal*temperature\n\nIt satisfies the ideal gas law.\n\njulia> universal(Metric) # J‚ãÖK‚Åª¬π‚ãÖmol‚Åª¬π\n8.31446261815324\n\njulia> universal(English) # ft‚ãÖlb‚ãÖ¬∞R‚Åª¬π‚ãÖslug-mol‚Åª¬π\n49.72007489115925\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.vibration-Tuple{MoleGas}","page":"Library","title":"Geophysics.vibration","text":"vibration(G::MoleGas) = frequency(G)*planck(G)/boltzmann(G)\n\nVibrational temperature Œ∏ of polyatomic molecules if applicable (K or ¬∞R).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.viscosity-Tuple{FluidState}","page":"Library","title":"Geophysics.viscosity","text":"viscosity(F::FluidState) = viscosity(temperature(F),fluid(F))\n\nLaminar dynamic vicsosity Œº at the temperature of F (Pa‚ãÖs or slug‚ãÖft‚Åª¬π‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.viscosity-Tuple{Real,Weather}","page":"Library","title":"Geophysics.viscosity","text":"viscosity(h::Real=0,W::Weather) = viscosity(temperature(h,W),fluid(W))\n\nLaminar dynamic vicsosity Œº at altitude h of Weather column (Pa‚ãÖs or slug‚ãÖft‚Åª¬π‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.viscosity-Union{Tuple{MoleGas{M,Œº,TŒº,k,Tk,U} where U where Tk where k where TŒº}, Tuple{Œº}, Tuple{M}} where Œº where M","page":"Library","title":"Geophysics.viscosity","text":"viscosity(T::Real,G::AbstractMole)\n\nLaminar dynamic vicsosity Œº is stress to normal acceleration ratio (Pa‚ãÖs or slug‚ãÖft‚Åª¬π‚ãÖs‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.volume","page":"Library","title":"Geophysics.volume","text":"volume(h::Real=0,W::Weather=Standard) = volume(W(h))\n\nSpecific volume per mass v at altitude h of Weather location (m¬≥‚ãÖkg‚Åª¬π or ft¬≥‚ãÖslug‚Åª¬π).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.volume-Tuple{FluidState}","page":"Library","title":"Geophysics.volume","text":"volume(F::FluidState) = 1/density(F)\n\nSpecific volume per mass v at a pressure and temperature (m¬≥‚ãÖkg‚Åª¬π or ft¬≥‚ãÖslug‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.wavenumber-Union{Tuple{DiatomicGas{M,ŒΩ,Œº,TŒº,k,Tk,U} where U where Tk where k where TŒº where Œº}, Tuple{ŒΩ}, Tuple{M}} where ŒΩ where M","page":"Library","title":"Geophysics.wavenumber","text":"wavenumber(G::MoleGas) = frequency(G)/lightspeed(G)\n\nSpectroscopic vibrational wavenumbers of polyatomic molecules if applicable (m‚Åª¬π or ft‚Åª¬π).\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.weight","page":"Library","title":"Geophysics.weight","text":"weight(h::Real=0,W::Weather=Standard) = density(h,W)*gravity(h,W)\n\nSpecific weight at altitude h of Weather location (kg‚ãÖm‚Åª¬≤‚ãÖs‚Åª¬≤ or slugs‚ãÖft‚Åª¬≤‚ãÖs‚Åª¬≤).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.altabs","page":"Library","title":"Geophysics.altabs","text":"altabs(h::Real,W::Weather=Standard) = radius(W)+h\n\nAbsolute altitude from planet's center of gravity (m or ft).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.altgeometric","page":"Library","title":"Geophysics.altgeometric","text":"altgeometric(hG::Real,W::Weather=Standard) = radius(W)/(radius(W)/hG-1)\n\nGeometric altitude h conversion from geopotential altitude (m or ft).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.altgeopotent","page":"Library","title":"Geophysics.altgeopotent","text":"altgeopotent(h::Real,W::Weather=Standard) = h*radius(W)/altabs(h,W)\n\nGeopotential altitude hG conversion from geometric altitude (m or ft).\n\n\n\n\n\n","category":"function"},{"location":"library.html#Geophysics.radiationdensity-Tuple{UnitSystem}","page":"Library","title":"Geophysics.radiationdensity","text":"radiationdensity(x) = 4stefan(U)/lightspeed(U)\n\nRaditation density constant of black body radiation (J‚ãÖm‚Åª¬≥‚ãÖK‚Åª‚Å¥ or lb‚ãÖft‚Åª¬≤‚ãÖ¬∞R‚Åª‚Å¥).\n\njulia> radiationdensity(Metric) # J‚ãÖm‚Åª¬≥‚ãÖK‚Åª‚Å¥\n7.565733250280007e-16\n\njulia> radiationdensity(English) # lb‚ãÖft‚Åª¬≤‚ãÖ¬∞R‚Åª‚Å¥\n1.5052426122071283e-18\n\n\n\n\n\n","category":"method"},{"location":"library.html#Geophysics.wavelength-Tuple{MoleGas}","page":"Library","title":"Geophysics.wavelength","text":"wavelength(G::MoleGas) = 1/wavenumber(G)\n\nSpectroscopic vibrational wavelength Œª of polyatomic molecules if applicable (m or ft).\n\n\n\n\n\n","category":"method"},{"location":"index.html#Geophysics.jl-1","page":"Home","title":"Geophysics.jl","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Planetary science data for atmospheric geophysical models","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"(Image: DOI) (Image: Build Status) (Image: Build status) (Image: Coverage Status) (Image: codecov.io) (Image: Gitter)","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Provides Atmosphere models based on Air Research and Development Command ARDC and the United States (1922, 1925, 1956, 1959, 1962, 1966, 1976) Standard Atmosphere US22,US25,US56,US59,US62,US66,US76 available also in English units US22E,US25E,US56E,US59E,US62E,US66E,US76E. Provided the local absolute sea level and gravitational acceleration, the Weather can be initialized based on temperature and pressure. Presets for the Standard atmosphere are provided: Earth1922, Earth1925, Earth1956, Earth1959, Earth1962, Earth1966, Earth1976, Earth1922English, Earth1925English, Earth1956English, Earth1959English, Earth1962English, Earth1966English, Earth1976English. By default the 1959 model with metric units is used for Standard atmosphere, although a different year can be specified with environment variable STDATM and the default unit system can be specified with the GEOUNITS environment variable.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"julia> using Geophysics\n\njulia> h = 1000 # altitude, m\n1000\n\njulia> gravity(h)\n9.803565306802405\n\njulia> temperature(h)\n281.66102237169474\n\njulia> pressure(h)\n89876.28158431675\n\njulia> sonicspeed(h)\n336.4347118683662","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Values which can be obtained at geometric altitude include gravity, temperature, pressure, density, sonicspeed, conductivity, viscosity, kinematic, volume, energy, enthalpy, heatcapacity, diffusivity, prandtl, and impedance. In the future, more varieties of atmospheric models will be added for various planets along with winds aloft and turbulent gust distribution data. Weather data from internet sources may be imported in the future.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Pages = [\"library.md\",\"references.md\"]","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"This package is not limited to atmospheric data: other geophysical data features are intended to be added for oceans, temperature and pressure inside the planets, as well as electrical and magnetic properties of planets. In this package, any simple Geophysical properties of planets may be added. Other simple geophysical data about planets, can be added in a collaborative effort. Complicated models will be excluded from this package, as it is only intended to provide a minimal foundation for geophysical data and constants of various planets, more complicated models should be built separately in packages to build on Geophysics. For example, some geographic conditions can be calculated externally, and then Geophysics is used to load that data.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"This Geophysics package for the Julia language was created by github.com/chakravala for research. These projects and repositories were started entirely independently and are available as free software to help spread the ideas to a wider audience. Please consider donating to show your thanks and appreciation to this project at liberapay, GitHub Sponsors, Patreon, Bandcamp or contribute (documentation, tests, examples) in the repositories.","category":"page"}]
}
