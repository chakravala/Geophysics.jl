var documenterSearchIndex = {"docs":
[{"location":"references.html#References-1","page":"References","title":"References","text":"","category":"section"},{"location":"references.html#","page":"References","title":"References","text":"(Image: DOI) (Image: Build Status) (Image: Build status) (Image: Docs Stable) (Image: Docs Dev) (Image: Gitter)","category":"page"},{"location":"references.html#","page":"References","title":"References","text":"R. A. Minzer and W. S. Ripley, The ARDC Model Atmosphere, 1956, ARDC (1956)\nR. A. Minzer, K. S. W. Champion, and H. L. Pond, The ARDC Model Atmosphere, 1959, ARDC (1959)\nNASA, USAF, and USWB, U.S. Standard Atmosphere, 1962, ICAO (1962)\nNOAA, NASA, and USAF, U.S. Standard Atmosphere, 1976, NOAA (1976)","category":"page"},{"location":"units.html#Standard-Units-1","page":"Standard Units","title":"Standard Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"Pages = [\"unitsystems.md\",\"constants.md\",\"convert.md\"]\nDepth = 1","category":"page"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"Pages = [\"units.md\"]\nDepth = 3","category":"page"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"(Image: DOI)","category":"page"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"Similar to how SI defines standardized units of kilogram, meter, second, kelvin, coulomb, candela, and mole; the following is a comprehensive selection of generated standardized physics units defined by UnitSystem defaults useful for scientists and engineers.","category":"page"},{"location":"units.html#Prefix-Units-1","page":"Standard Units","title":"Prefix Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"centi\nkilo\nbyte","category":"page"},{"location":"units.html#MeasureSystems.centi","page":"Standard Units","title":"MeasureSystems.centi","text":"julia> deci\n2⁻¹5⁻¹ = 0.1\n\njulia> centi\n2⁻²5⁻² = 0.01\n\njulia> milli\n2⁻³5⁻³ = 0.001\n\njulia> micro\n2⁻⁶5⁻⁶ = 1.0e-6\n\njulia> nano\n2⁻⁹5⁻⁹ = 1.0e-9\n\njulia> pico\n2⁻¹²5⁻¹² = 1.0e-12\n\njulia> femto\n2⁻¹⁵5⁻¹⁵ = 1.0e-15\n\njulia> atto\n2⁻¹⁸5⁻¹⁸ = 1.0e-18\n\njulia> zepto\n2⁻²¹5⁻²¹ = 1.0000000000000001e-21\n\njulia> yocto\n2⁻²⁴5⁻²⁴ = 1.0000000000000001e-24\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.kilo","page":"Standard Units","title":"MeasureSystems.kilo","text":"julia> deka\n2⋅5 = 10.0\n\njulia> hecto\n2²5² = 100.0\n\njulia> kilo\n2³5³ = 1000.0\n\njulia> mega\n2⁶5⁶ = 1.0e6\n\njulia> giga\n2⁹5⁹ = 1.0e9\n\njulia> tera\n2¹²5¹² = 1.0e12\n\njulia> peta\n2¹⁵5¹⁵ = 1.0e15\n\njulia> exa\n2¹⁸5¹⁸ = 1.0e18\n\njulia> zetta\n2²¹5²¹ = 1.0e21\n\njulia> yotta\n2²⁴5²⁴ = 1.0e24\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.byte","page":"Standard Units","title":"MeasureSystems.byte","text":"julia> byte\n2³ = 8.0\n\njulia> kibi\n2¹⁰ = 1024.0\n\njulia> mebi\n2²⁰ = 1.048576e6\n\njulia> gibi\n2³⁰ = 1.073741824e9\n\njulia> tebi\n2⁴⁰ = 1.099511627776e12\n\njulia> pebi\n2⁵⁰ = 1.125899906842624e15\n\njulia> exbi\n2⁶⁰ = 1.152921504606847e18\n\njulia> zebi\n2⁷⁰ = 1.1805916207174113e21\n\njulia> yobi\n2⁸⁰ = 1.2089258196146292e24\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Mechanics-Units-1","page":"Standard Units","title":"Mechanics Units","text":"","category":"section"},{"location":"units.html#Angle-Units-1","page":"Standard Units","title":"Angle Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"turn\nradian\ngradian\nbradian\ndegree\narcminute\narcsecond","category":"page"},{"location":"units.html#MeasureSystems.turn","page":"Standard Units","title":"MeasureSystems.turn","text":"turn(U::UnitSystem) = 2π/angle(U)\nangle : [A], [𝟙], [𝟙], [𝟙], [𝟙]\n\nComplete rotation angle of revolution from a full circle.\n\njulia> turn(MetricEngineering)\nτ = 6.283185307179586 [rad] MetricEngineering\n\njulia> turn(MetricDegree)\n2³3²5 = 360.0 [deg] MetricDegree\n\njulia> turn(MetricArcminute)\n2⁵3³5² = 21600.0 [amin] MetricArcminute\n\njulia> turn(MetricArcsecond)\n2⁷3⁴5³ = 1.296e6 [asec] MetricArcsecond\n\njulia> turn(MetricGradian)\n2⁴5² = 400.0 [gon] MetricGradian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.radian","page":"Standard Units","title":"MeasureSystems.radian","text":"radian(U::UnitSystem) = angle(𝟏,U,Metric)\nangle : [A], [𝟙], [𝟙], [𝟙], [𝟙]\n\nUnit of angle which is dimensionless (rad).\n\njulia> radian(MetricEngineering) # rad\n𝟏 = 1.0 [rad] MetricEngineering\n\njulia> radian(MetricDegree) # deg\nτ⁻¹2³3²5 = 57.29577951308232 [deg] MetricDegree\n\njulia> radian(MetricArcminute) # amin\nτ⁻¹2⁵3³5² = 3437.7467707849396 [amin] MetricArcminute\n\njulia> radian(MetricArcsecond) # asec\nτ⁻¹2⁷3⁴5³ = 206264.80624709636 [asec] MetricArcsecond\n\njulia> radian(MetricGradian) # gon\nτ⁻¹2⁴5² = 63.66197723675814 [gon] MetricGradian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.gradian","page":"Standard Units","title":"MeasureSystems.gradian","text":"gradian(U::UnitSystem) = angle(𝟏,U,MetricGradian)\nangle : [A], [𝟙], [𝟙], [𝟙], [𝟙]\n\nUnit of angle which divides a turn into 400 parts (rad).\n\njulia> gradian(MetricEngineering) # rad\nτ⋅2⁻⁴5⁻² = 0.015707963267948967 [rad] MetricEngineering\n\njulia> gradian(MetricDegree) # deg\n2⁻¹3²5⁻¹ = 0.9 [deg] MetricDegree\n\njulia> gradian(MetricArcminute) # amin\n2⋅3³ = 54.0 [amin] MetricArcminute\n\njulia> gradian(MetricArcsecond) # asec\n2³3⁴5 = 3240.0 [asec] MetricArcsecond\n\njulia> gradian(MetricGradian) # gon\n𝟏 = 1.0 [gon] MetricGradian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.bradian","page":"Standard Units","title":"MeasureSystems.bradian","text":"bradian(U::UnitSystem) = angle(τ/𝟐^8,U,Metric)\nangle : [A], [𝟙], [𝟙], [𝟙], [𝟙]\n\nUnit of angle which divides a turn into 𝟐^8 or 256 parts (rad).\n\njulia> bradian(MetricEngineering) # rad\nτ⋅2⁻⁸ = 0.02454369260617026 [rad] MetricEngineering\n\njulia> bradian(MetricDegree) # deg\n2⁻⁵3²5 = 1.40625 [deg] MetricDegree\n\njulia> bradian(MetricArcminute) # amin\n2⁻³3³5² = 84.375 [amin] MetricArcminute\n\njulia> bradian(MetricArcsecond) # asec\n2⁻¹3⁴5³ = 5062.5 [asec] MetricArcsecond\n\njulia> bradian(MetricGradian) # gon\n2⁻⁴5² = 1.5625 [gon] MetricGradian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.degree","page":"Standard Units","title":"MeasureSystems.degree","text":"degree(U::UnitSystem) = angle(𝟏,U,MetricDegree)\nangle : [A], [𝟙], [𝟙], [𝟙], [𝟙]\n\nUnit of angle which divides a turn into 360 parts (rad).\n\njulia> degree(MetricEngineering) # rad\nτ⋅2⁻³3⁻²5⁻¹ = 0.017453292519943295 [rad] MetricEngineering\n\njulia> degree(MetricDegree) # deg\n𝟏 = 1.0 [deg] MetricDegree\n\njulia> degree(MetricArcminute) # amin\n2²3⋅5 = 60.0 [amin] MetricArcminute\n\njulia> degree(MetricArcsecond) # asec\n2⁴3²5² = 3600.0 [asec] MetricArcsecond\n\njulia> degree(MetricGradian) # gon\n2⋅3⁻²5 = 1.1111111111111112 [gon] MetricGradian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.arcminute","page":"Standard Units","title":"MeasureSystems.arcminute","text":"arcminute(U::UnitSystem) = angle(𝟏,U,MetricArcminute)\nangle : [A], [𝟙], [𝟙], [𝟙], [𝟙]\n\nUnit of angle which divides a degree into 60 parts (rad).\n\njulia> arcminute(MetricEngineering) # rad\nτ⋅2⁻⁵3⁻³5⁻² = 0.0002908882086657216 [rad] MetricEngineering\n\njulia> arcminute(MetricDegree) # deg\n2⁻²3⁻¹5⁻¹ = 0.016666666666666666 [deg] MetricDegree\n\njulia> arcminute(MetricArcminute) # amin\n𝟏 = 1.0 [amin] MetricArcminute\n\njulia> arcminute(MetricArcsecond) # asec\n2²3⋅5 = 60.0 [asec] MetricArcsecond\n\njulia> arcminute(MetricGradian) # gon\n2⁻¹3⁻³ = 0.018518518518518517 [gon] MetricGradian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.arcsecond","page":"Standard Units","title":"MeasureSystems.arcsecond","text":"arcsecond(U::UnitSystem) = angle(𝟏,U,MetricArcsecond)\nangle : [A], [𝟙], [𝟙], [𝟙], [𝟙]\n\nUnit of angle which divides a arcminute into 60 parts (rad).\n\njulia> arcsecond(MetricEngineering) # rad\nτ⋅2⁻⁷3⁻⁴5⁻³ = 4.84813681109536e-6 [rad] MetricEngineering\n\njulia> arcsecond(MetricDegree) # deg\n2⁻⁴3⁻²5⁻² = 0.0002777777777777778 [deg] MetricDegree\n\njulia> arcsecond(MetricArcminute) # amin\n2⁻²3⁻¹5⁻¹ = 0.016666666666666666 [amin] MetricArcminute\n\njulia> arcsecond(MetricArcsecond) # asec\n𝟏 = 1.0 [asec] MetricArcsecond\n\njulia> arcsecond(MetricGradian) # gon\n2⁻³3⁻⁴5⁻¹ = 0.00030864197530864197 [gon] MetricGradian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Solid-Angle-Units-1","page":"Standard Units","title":"Solid Angle Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"spat\nsteradian\nsquaredegree","category":"page"},{"location":"units.html#MeasureSystems.spat","page":"Standard Units","title":"MeasureSystems.spat","text":"spat(U::UnitSystem) = 4π/solidangle(U)\nsolidangle : [A²], [𝟙], [𝟙], [𝟙], [𝟙]\n\nComplete spherical solidangle around point from a full sphere.\n\njulia> spat(MetricEngineering)\nτ⋅2 = 12.566370614359172 [rad²] MetricEngineering\n\njulia> spat(MetricDegree)\nτ⁻¹2⁷3⁴5² = 41252.96124941928 [deg²] MetricDegree\n\njulia> spat(MetricArcminute)\nτ⁻¹2¹¹3⁶5⁴ = 1.485106604979094e8 [amin²] MetricArcminute\n\njulia> spat(MetricArcsecond)\nτ⁻¹2¹⁵3⁸5⁶ = 5.346383777924738e11 [asec²] MetricArcsecond\n\njulia> spat(MetricGradian)\nτ⁻¹2⁹5⁴ = 50929.58178940651 [gon²] MetricGradian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.steradian","page":"Standard Units","title":"MeasureSystems.steradian","text":"steradian(U::UnitSystem) = solidangle(𝟏,U,Metric)\nsolidangle : [A²], [𝟙], [𝟙], [𝟙], [𝟙]\n\nUnit of solidangle which is dimensionless (rad²).\n\njulia> steradian(MetricEngineering) # rad²\n𝟏 = 1.0 [rad²] MetricEngineering\n\njulia> steradian(MetricDegree) # deg²\nτ⁻²2⁶3⁴5² = 3282.806350011744 [deg²] MetricDegree\n\njulia> steradian(MetricArcminute) # amin²\nτ⁻²2¹⁰3⁶5⁴ = 1.1818102860042278e7 [amin²] MetricArcminute\n\njulia> steradian(MetricArcsecond) # asec²\nτ⁻²2¹⁴3⁸5⁶ = 4.25451702961522e10 [asec²] MetricArcsecond\n\njulia> steradian(MetricGradian) # gon²\nτ⁻²2⁸5⁴ = 4052.847345693511 [gon²] MetricGradian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.squaredegree","page":"Standard Units","title":"MeasureSystems.squaredegree","text":"squaredegree(U::UnitSystem) = solidangle(𝟏,U,MetricDegree)\nsolidangle : [A²], [𝟙], [𝟙], [𝟙], [𝟙]\n\nUnit of solidangle which is a degree squared (rad²).\n\njulia> squaredegree(MetricEngineering) # rad²\nτ²2⁻⁶3⁻⁴5⁻² = 0.00030461741978670857 [rad²] MetricEngineering\n\njulia> squaredegree(MetricDegree) # deg²\n𝟏 = 1.0 [deg²] MetricDegree\n\njulia> squaredegree(MetricArcminute) # amin²\n2⁴3²5² = 3600.0 [amin²] MetricArcminute\n\njulia> squaredegree(MetricArcsecond) # asec²\n2⁸3⁴5⁴ = 1.296e7 [asec²] MetricArcsecond\n\njulia> squaredegree(MetricGradian) # gon²\n2²3⁻⁴5² = 1.2345679012345678 [gon²] MetricGradian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Time-Units-1","page":"Standard Units","title":"Time Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"second\nminute\nhour\nday\nyear","category":"page"},{"location":"units.html#MeasureSystems.second","page":"Standard Units","title":"MeasureSystems.second","text":"second(U::UnitSystem) = time(𝟏,U,Metric)\ntime : [T], [T], [T], [T], [T]\n\nUnit of time defined by hyperfine transition frequency of Cs-133 atom (s).\n\njulia> second(Metric) # s\n𝟏 = 1.0 [s] Metric\n\njulia> second(MPH) # h\n2⁻⁴3⁻²5⁻² = 0.0002777777777777778 [h] MPH\n\njulia> second(IAU) # D\n2⁻⁷3⁻³5⁻² = 1.1574074074074073e-5 [D] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.minute","page":"Standard Units","title":"MeasureSystems.minute","text":"minute(U::UnitSystem) = 𝟐^2*𝟑*𝟓*second(U)\ntime : [T], [T], [T], [T], [T]\n\nUnit of time defined by 60 second intervals (s).\n\njulia> minute(Metric) # s\n2²3⋅5 = 60.0 [s] Metric\n\njulia> minute(MPH) # h\n2⁻²3⁻¹5⁻¹ = 0.016666666666666666 [h] MPH\n\njulia> minute(IAU) # D\n2⁻⁵3⁻²5⁻¹ = 0.0006944444444444445 [D] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.hour","page":"Standard Units","title":"MeasureSystems.hour","text":"hour(U::UnitSystem) = 𝟐^2*𝟑*𝟓*minute(U)\ntime : [T], [T], [T], [T], [T]\n\nUnit of time defined by 60 minute intervals (s).\n\njulia> hour(Metric) # s\n2⁴3²5² = 3600.0 [s] Metric\n\njulia> hour(MPH) # h\n𝟏 = 1.0 [h] MPH\n\njulia> hour(IAU) # D\n2⁻³3⁻¹ = 0.041666666666666664 [D] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.day","page":"Standard Units","title":"MeasureSystems.day","text":"day(U::UnitSystem) = 𝟐^3*𝟑*hour(U)\ntime : [T], [T], [T], [T], [T]\n\nUnit of time defined by 24 hour intervals (s).\n\njulia> day(Metric) # s\n2⁷3³5² = 86400.0 [s] Metric\n\njulia> day(MPH) # h\n2³3 = 24.0 [h] MPH\n\njulia> day(IAU) # D\n𝟏 = 1.0 [D] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.year","page":"Standard Units","title":"MeasureSystems.year","text":"year(U::UnitSystem) = aⱼ*day(U)\ntime : [T], [T], [T], [T], [T]\n\nUnit of time defined by Julian calendar year interval (s).\n\njulia> year(Metric) # s\naⱼ⋅2⁷3³5² = 3.15576e7 [s] Metric\n\njulia> year(MPH) # h\naⱼ⋅2³3 = 8766.0 [h] MPH\n\njulia> year(IAU) # D\naⱼ = 365.25 [D] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Length-Units-1","page":"Standard Units","title":"Length Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"angstrom\ninch\nfoot\nsurveyfoot\nyard\nmeter\nearthmeter\nmile\nstatutemile\nmeridianmile\nadmiraltymile\nnauticalmile\nlunardistance\nastronomicalunit\njupiterdistance\nlightyear\nparsec","category":"page"},{"location":"units.html#MeasureSystems.angstrom","page":"Standard Units","title":"MeasureSystems.angstrom","text":"angstrom(U::UnitSystem) = hecto*pico*meter(U)\nlength : [L], [L], [L], [L], [L]\n\nMetric unit of length (m or ft).\n\njulia> angstrom(CGS) # cm\n2⁻⁸5⁻⁸ = 1.0e-8 [cm] Gauss\n\njulia> angstrom(English) # ft\nft⁻¹2⁻¹⁰5⁻¹⁰ = 3.280839895013123e-10 [ft] English\n\njulia> angstrom(IPS) # in\nft⁻¹2⁻⁸3⋅5⁻¹⁰ = 3.937007874015747e-9 [in] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.inch","page":"Standard Units","title":"MeasureSystems.inch","text":"inch(U::UnitSystem) = length(𝟏,U,IPS)\nlength : [L], [L], [L], [L], [L]\n\nEnglish unit of length (m or ft).\n\njulia> inch(Metric) # m\nft⋅2⁻²3⁻¹ = 0.0254 [m] Metric\n\njulia> inch(English) # ft\n2⁻²3⁻¹ = 0.08333333333333333 [ft] English\n\njulia> inch(IPS) # in\n𝟏 = 1.0 [in] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.foot","page":"Standard Units","title":"MeasureSystems.foot","text":"foot(U::UnitSystem) = length(𝟏,U,English)\nlength : [L], [L], [L], [L], [L]\n\nEnglish unit of length (m or ft).\n\njulia> foot(Metric) # m\nft = 0.3048 [m] Metric\n\njulia> foot(Survey) # ftUS\nft⋅ftUS⁻¹ = 0.9999980000000002 [ft] Survey\n\njulia> foot(IPS) # in\n2²3 = 12.0 [in] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.surveyfoot","page":"Standard Units","title":"MeasureSystems.surveyfoot","text":"surveyfoot(U::UnitSystem) = length(𝟏,U,Survey)\nlength : [L], [L], [L], [L], [L]\n\nSurvey unit of length (m or ft).\n\njulia> surveyfoot(Metric) # m\nftUS = 0.3048006096012192 [m] Metric\n\njulia> surveyfoot(English) # ft\nft⁻¹ftUS = 1.0000020000039997 [ft] English\n\njulia> surveyfoot(IPS) # in\nft⁻¹ftUS⋅2²3 = 12.000024000047997 [in] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.yard","page":"Standard Units","title":"MeasureSystems.yard","text":"yard(U::UnitSystem) = 𝟑*foot(U)\nlength : [L], [L], [L], [L], [L]\n\nEnglish unit of length (m or ft).\n\njulia> yard(Metric) # m\nft⋅3 = 0.9144000000000001 [m] Metric\n\njulia> yard(English) # ft\n3 = 3.0 [ft] English\n\njulia> yard(IPS) # in\n2²3² = 36.0 [in] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.meter","page":"Standard Units","title":"MeasureSystems.meter","text":"meter(U::UnitSystem) = length(𝟏,U,Metric)\nlength : [L], [L], [L], [L], [L]\n\nMetric unit of length (m or ft).\n\njulia> meter(CGS) # cm\n2²5² = 100.0 [cm] Gauss\n\njulia> meter(English) # ft\nft⁻¹ = 3.280839895013123 [ft] English\n\njulia> meter(Meridian) # em\ng₀¹ᐟ²GME⁻¹ᐟ²τ⁻¹2⁹5⁷ = 0.9985540395 ± 1.0e-9 [em] Meridian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.earthmeter","page":"Standard Units","title":"MeasureSystems.earthmeter","text":"earthmeter(U::UnitSystem) = greatcircle(U)/𝟐^9/𝟓^7\nlength : [L], [L], [L], [L], [L]\n\nMeridian unit of length as originally defined in France (m or ft).\n\njulia> earthmeter(CGS) # cm\ng₀⁻¹ᐟ²GME¹ᐟ²τ⋅2⁻⁷5⁻⁵ = 100.14480543 ± 1.0e-7 [cm] Gauss\n\njulia> earthmeter(English) # ft\ng₀⁻¹ᐟ²ft⁻¹GME¹ᐟ²τ⋅2⁻⁹5⁻⁷ = 3.2855907293 ± 3.3e-9 [ft] English\n\njulia> earthmeter(Meridian) # em\n𝟏 = 1.0 [em] Meridian\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.mile","page":"Standard Units","title":"MeasureSystems.mile","text":"mile(U::UnitSystem) = length(𝟏,U,MPH)\nlength : [L], [L], [L], [L], [L]\n\nStatute English mile (m or ft).\n\njulia> mile(Metric) # m\nft⋅2⁵3⋅5⋅11 = 1609.344 [m] Metric\n\njulia> mile(English) # ft\n2⁵3⋅5⋅11 = 5280.0 [ft] English\n\njulia> mile(Nautical) # nm\nft⋅ftUS⁻¹2⁵3⋅5⋅11 = 5279.989440000001 [ft] Survey\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.statutemile","page":"Standard Units","title":"MeasureSystems.statutemile","text":"statutemile(U::UnitSystem) = length(𝟐^5*𝟑*𝟓*𝟏𝟏,U,Survey)\nlength : [L], [L], [L], [L], [L]\n\nStatute Survey mile (m or ft).\n\njulia> statutemile(Metric) # m\nftUS⋅2⁵3⋅5⋅11 = 1609.3472186944373 [m] Metric\n\njulia> statutemile(English) # ft\nft⁻¹ftUS⋅2⁵3⋅5⋅11 = 5280.010560021119 [ft] English\n\njulia> statutemile(Survey) # ftUS\n2⁵3⋅5⋅11 = 5280.0 [ft] Survey\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.meridianmile","page":"Standard Units","title":"MeasureSystems.meridianmile","text":"meridianmile(U::UnitSystem) = length(𝟐^4*𝟓^5/𝟑^3,U,Metric)\nlength : [L], [L], [L], [L], [L]\n\nHistoric nautical mile as defined by naive meridian assumption (m or ft).\n\njulia> meridianmile(Metric) # m\n2⁴3⁻³5⁵ = 1851.8518518518517 [m] Metric\n\njulia> meridianmile(English) # ft\nft⁻¹2⁴3⁻³5⁵ = 6075.6294352094865 [ft] English\n\njulia> meridianmile(Nautical) # nm\ng₀¹ᐟ²GME⁻¹ᐟ²τ⁻¹2⁹5⁷ = 0.9985540395 ± 1.0e-9 [nm] Nautical\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.admiraltymile","page":"Standard Units","title":"MeasureSystems.admiraltymile","text":"admiraltymile(U::UnitSystem) = length(𝟐^6*𝟓*𝟏𝟗,U,English)\nlength : [L], [L], [L], [L], [L]\n\nHistoric nautical mile as defined by the Clarke authalic radius (m or ft).\n\njulia> admiraltymile(Metric) # m\nft⋅2⁶5⋅19 = 1853.1840000000002 [m] Metric\n\njulia> admiraltymile(English) # ft\n2⁶5⋅19 = 6080.0 [ft] English\n\njulia> admiraltymile(Nautical) # nm\ng₀¹ᐟ²ft⋅GME⁻¹ᐟ²τ⁻¹2¹¹3³5³19 = 0.9992723594 ± 1.0e-9 [nm] Nautical\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.nauticalmile","page":"Standard Units","title":"MeasureSystems.nauticalmile","text":"nauticalmile(U::UnitSystem) = greatcircle(U)/𝟐^5/𝟑^3/𝟓^2\nlength : [L], [L], [L], [L], [L]\n\nStandard nauticalmile as defined by earthradius (m or ft).\n\njulia> nauticalmile(Metric) # m\ng₀⁻¹ᐟ²GME¹ᐟ²τ⋅2⁻⁵3⁻³5⁻² = 1854.5334339 ± 1.9e-6 [m] Metric\n\njulia> nauticalmile(Meridian) # em\n2⁴3⁻³5⁵ = 1851.8518518518517 [em] Meridian\n\njulia> nauticalmile(English) # ft\ng₀⁻¹ᐟ²ft⁻¹GME¹ᐟ²τ⋅2⁻⁵3⁻³5⁻² = 6084.4272766 ± 6.1e-6 [ft] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.lunardistance","page":"Standard Units","title":"MeasureSystems.lunardistance","text":"lunardistance(U::UnitSystem) = length(𝟏,U,IAUE)\nlength : [L], [L], [L], [L], [L]\n\nStandard distance between the Earth and the Moon (m or ft).\n\njulia> lunardistance(Metric) # m\n2³3³5³⋅14237 = 3.84399e8 [m] Metric\n\njulia> lunardistance(Nautical) # nm\ng₀¹ᐟ²GME⁻¹ᐟ²τ⁻¹2⁸3⁶5⁵⋅14237 = 207275.31409 ± 0.00021 [nm] Nautical\n\njulia> lunardistance(Metric)/lightspeed(Metric) # s\n𝘤⁻¹2³3³5³⋅14237 = 1.2822170463007445 [s] Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.astronomicalunit","page":"Standard Units","title":"MeasureSystems.astronomicalunit","text":"astronomicalunit(U::UnitSystem) = length(𝟏,U,IAU)\nlength : [L], [L], [L], [L], [L]\n\nStandard astronomical unit from the International Astronomical Union (m or ft).\n\njulia> astronomicalunit(Metric) # m\nau = 1.495978707e11 ± 3.0 [m] Metric\n\njulia> astronomicalunit(English) # ft\nau⋅ft⁻¹ = 4.908066624016e11 ± 9.8 [ft] English\n\njulia> astronomicalunit(Metric)/lightspeed(Metric) # s\n𝘤⁻¹au = 499.004783836 ± 1.0e-8 [s] Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.jupiterdistance","page":"Standard Units","title":"MeasureSystems.jupiterdistance","text":"jupiterdistance(U::UnitSystem) = length(𝟏,U,IAUJ)\nlength : [L], [L], [L], [L], [L]\n\nStandard distance between the Sun and the planet Jupiter (m or ft).\n\njulia> jupiterdistance(Metric) # m\n2⁶3⋅5⁶⋅259493 = 7.78479e11 [m] Metric\n\njulia> jupiterdistance(IAU) # au\nau⁻¹2⁶3⋅5⁶⋅259493 = 5.20381069836 ± 1.0e-10 [au] IAU☉\n\njulia> jupiterdistance(Metric)/lightspeed(Metric) # s\n𝘤⁻¹2⁶3⋅5⁶⋅259493 = 2596.726432657622 [s] Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.lightyear","page":"Standard Units","title":"MeasureSystems.lightyear","text":"lightyear(U::UnitSystem) = year(U)*lightspeed(U)\nlength : [L], [L], [L], [L], [L]\n\nUnit of length defined by distance traveled by light in 1 year unit.\n\njulia> lightyear(Metric) # m\n𝘤⋅aⱼ⋅2⁷3³5² = 9.4607304725808e15 [m] Metric\n\njulia> lightyear(English) # ft\n𝘤⋅aⱼ⋅ft⁻¹2⁷3³5² = 3.103914197040945e16 [ft] English\n\njulia> lightyear(IAU) # au\n𝘤⋅aⱼ⋅au⁻¹2⁷3³5² = 63241.0770843 ± 1.3e-6 [au] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.parsec","page":"Standard Units","title":"MeasureSystems.parsec","text":"parsec(U::UnitSystem) = astronomicalunit(U)*𝟐^2*𝟑^4*𝟓^3/τ\nlength : [L], [L], [L], [L], [L]\n\nUnit of length defined at which 1 astronomicalunit subtends an angle of 1 arcsecond.\n\njulia> parsec(Metric) # m\nau⋅τ⁻¹2⁷3⁴5³ = 3.085677581491e16 ± 620000.0 [m] Metric\n\njulia> parsec(English) # ft\nau⋅ft⁻¹τ⁻¹2⁷3⁴5³ = 1.01236141125e17 ± 2.0e6 [ft] English\n\njulia> parsec(IAU) # au\nτ⁻¹2⁷3⁴5³ = 206264.80624709636 [au] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Speed-Units-1","page":"Standard Units","title":"Speed Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"bubnoff\nfpm\nips\nkmh\nfps\nmph\nknot\nms\nmps","category":"page"},{"location":"units.html#MeasureSystems.bubnoff","page":"Standard Units","title":"MeasureSystems.bubnoff","text":"bubnoff(U::UnitSystem) = meter(U)/year(U)\nspeed : [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹]\n\nReference unit of erosion speed (m⋅s⁻¹ or ft⋅s⁻¹).\n\njulia> bubnoff(CGS) # cm⋅s⁻¹\naⱼ⁻¹2⁻⁵3⁻³ = 3.1688087814028946e-6 [cm⋅s⁻¹] Gauss\n\njulia> bubnoff(English) # ft⋅s⁻¹\naⱼ⁻¹ft⁻¹2⁻⁷3⁻³5⁻² = 1.0396354269694535e-7 [ft⋅s⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.fpm","page":"Standard Units","title":"MeasureSystems.fpm","text":"fpm(U::UnitSystem) = feet(U)/minute(U)\nspeed : [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹]\n\nFeet per minute unit of speed (m⋅s⁻¹ or ft⋅s⁻¹).\n\njulia> fpm(CGS) # cm⋅s⁻¹\nft⋅3⁻¹5 = 0.508 [cm⋅s⁻¹] Gauss\n\njulia> fpm(IPS) # in⋅s⁻¹\n5⁻¹ = 0.2 [in⋅s⁻¹] IPS\n\njulia> fpm(English) # ft⋅s⁻¹\n2⁻²3⁻¹5⁻¹ = 0.016666666666666666 [ft⋅s⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.ips","page":"Standard Units","title":"MeasureSystems.ips","text":"ips(U::UnitSystem) = inch(U)/second(U)\nspeed : [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹]\n\nInch per second unit of speed (m⋅s⁻¹ or ft⋅s⁻¹).\n\njulia> ips(CGS) # cm⋅s⁻¹\nft⋅3⁻¹5² = 2.5399999999999996 [cm⋅s⁻¹] Gauss\n\njulia> ips(English) # ft⋅s⁻¹\n2⁻²3⁻¹ = 0.08333333333333333 [ft⋅s⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.kmh","page":"Standard Units","title":"MeasureSystems.kmh","text":"kmh(U::UnitSystem) = kilo(U)*meter(U)/hour(U)\nspeed : [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹]\n\nKilometers per hour unit of speed (m⋅s⁻¹ or ft⋅s⁻¹).\n\njulia> kmh(Metric) # m⋅s⁻¹\n2⁻¹3⁻²5 = 0.2777777777777778 [m⋅s⁻¹] Metric\n\njulia> kmh(MPH) # mi⋅h⁻¹\nft⁻¹2⁻²3⁻¹5²11⁻¹ = 0.6213711922373338 [mi⋅h⁻¹] MPH\n\njulia> kmh(Nautical) # nm⋅h⁻¹\ng₀¹ᐟ²GME⁻¹ᐟ²τ⁻¹2⁸3³5⁵ = 0.53921918134 ± 5.4e-10 [nm⋅h⁻¹] Nautical\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.fps","page":"Standard Units","title":"MeasureSystems.fps","text":"fps(U::UnitSystem) = feet(U)/second(U)\nspeed : [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹]\n\nFeet per second unit of speed (m⋅s⁻¹ or ft⋅s⁻¹).\n\njulia> fps(Metric) # m⋅s⁻¹\nft = 0.3048 [m⋅s⁻¹] Metric\n\njulia> fps(KKH) # km⋅h⁻¹\nft⋅2⋅3²5⁻¹ = 1.09728 [km⋅h⁻¹] KKH\n\njulia> fps(MPH) # mi⋅h⁻¹\n2⁻¹3⋅5⋅11⁻¹ = 0.6818181818181819 [mi⋅h⁻¹] MPH\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.mph","page":"Standard Units","title":"MeasureSystems.mph","text":"mph(U::UnitSystem) = mile(U)/hour(U)\nspeed : [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹]\n\nMiles per hour unit of speed (m⋅s⁻¹ or ft⋅s⁻¹).\n\njulia> mph(Metric) # m⋅s⁻¹\nft⋅2⋅3⁻¹5⁻¹11 = 0.44704 [m⋅s⁻¹] Metric\n\njulia> mph(KKH) # km⋅h⁻¹\nft⋅2²3⋅5⁻²11 = 1.6093439999999999 [km⋅h⁻¹] KKH\n\njulia> mph(Nautical) # nm⋅h⁻¹\ng₀¹ᐟ²ft⋅GME⁻¹ᐟ²τ⁻¹2¹⁰3⁴5³11 = 0.86778915418 ± 8.7e-10 [nm⋅h⁻¹] Nautical\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.knot","page":"Standard Units","title":"MeasureSystems.knot","text":"knot(U::UnitSystem) = nauticalmile(U)/hour(U)\nspeed : [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹]\n\nNautical miles per hour unit of speed (m⋅s⁻¹ or ft⋅s⁻¹).\n\njulia> knot(Metric) # m⋅s⁻¹\ng₀⁻¹ᐟ²GME¹ᐟ²τ⋅2⁻⁹3⁻⁵5⁻⁴ = 0.51514817608 ± 5.2e-10 [m⋅s⁻¹] Metric\n\njulia> knot(KKH) # km⋅h⁻¹\ng₀⁻¹ᐟ²GME¹ᐟ²τ⋅2⁻⁸3⁻³5⁻⁵ = 1.8545334339 ± 1.9e-9 [km⋅h⁻¹] KKH\n\njulia> knot(MPH) # mi⋅h⁻¹\ng₀⁻¹ᐟ²ft⁻¹GME¹ᐟ²τ⋅2⁻¹⁰3⁻⁴5⁻³11⁻¹ = 1.1523536509 ± 1.2e-9 [mi⋅h⁻¹] MPH\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.ms","page":"Standard Units","title":"MeasureSystems.ms","text":"ms(U::UnitSystem) = meter(U)/second(U)\nspeed : [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹]\n\nMeters per second unit of speed (m⋅s⁻¹ or ft⋅s⁻¹).\n\njulia> ms(KKH) # km⋅h⁻¹\n2⋅3²5⁻¹ = 3.6 [km⋅h⁻¹] KKH\n\njulia> ms(MPH) # mi⋅h⁻¹\nft⁻¹2⁻¹3⋅5⋅11⁻¹ = 2.236936292054402 [mi⋅h⁻¹] MPH\n\njulia> ms(Nautical) # nm⋅h⁻¹\ng₀¹ᐟ²GME⁻¹ᐟ²τ⁻¹2⁹3⁵5⁴ = 1.9411890528 ± 1.9e-9 [nm⋅h⁻¹] Nautical\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.mps","page":"Standard Units","title":"MeasureSystems.mps","text":"mps(U::UnitSystem) = mile(U)/second(U)\nspeed : [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹]\n\nMiles per second unit of speed (m⋅s⁻¹ or ft⋅s⁻¹).\n\njulia> mps(KKH) # km⋅h⁻¹\nft⋅2⁶3³11 = 5793.638400000001 [km⋅h⁻¹] KKH\n\njulia> mps(MPH) # mi⋅h⁻¹\n2⁴3²5² = 3600.0 [mi⋅h⁻¹] MPH\n\njulia> mps(Nautical) # nm⋅h⁻¹\ng₀¹ᐟ²ft⋅GME⁻¹ᐟ²τ⁻¹2¹⁴3⁶5⁵11 = 3124.040955 ± 3.1e-6 [nm⋅h⁻¹] Nautical\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Area-Units-1","page":"Standard Units","title":"Area Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"barn\nhectare\nacre\nsurveyacre","category":"page"},{"location":"units.html#MeasureSystems.barn","page":"Standard Units","title":"MeasureSystems.barn","text":"barn(U::UnitSystem) = area((𝟐*𝟓)^-28,U,Metric)\narea : [L²], [L²], [L²], [L²], [L²]\n\nUnit of area defined by 100 square femto-meters (m² or ft²).\n\njulia> barn(Metric) # m²\n2⁻²⁸5⁻²⁸ = 1.0e-28 [m²] Metric\n\njulia> barn(CGS) # cm²\n2⁻²⁴5⁻²⁴ = 1.0000000000000001e-24 [cm²] Gauss\n\njulia> barn(English) # ft²\nft⁻²2⁻²⁸5⁻²⁸ = 1.076391041670972e-27 [ft²] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.hectare","page":"Standard Units","title":"MeasureSystems.hectare","text":"hectare(U::UnitSystem) = area(hecto^2,U,Metric)\narea : [L²], [L²], [L²], [L²], [L²]\n\nMetric unit of land area defined by 100 square meters (m² or ft²).\n\njulia> hectare(Metric) # m²\n2⁴5⁴ = 10000.0 [m²] Metric\n\njulia> hectare(English) # ft²\nft⁻²2⁴5⁴ = 107639.1041670972 [ft²] English\n\njulia> hectare(Survey) # ftUS²\nftUS⁻²2⁴5⁴ = 107638.67361111112 [ft²] Survey\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.acre","page":"Standard Units","title":"MeasureSystems.acre","text":"acre(U::UnitSystem) = area(𝟐^4*𝟓^4,U,Metric)\narea : [L²], [L²], [L²], [L²], [L²]\n\nEnglish unit of land area (m² or ft²).\n\njulia> acre(Metric) # m²\nft²2³3²5⋅11² = 4046.8564224 [m²] Metric\n\njulia> acre(English) # ft²\n2³3²5⋅11² = 43560.0 [ft²] English\n\njulia> acre(Survey) # ftUS²\nft²ftUS⁻²2³3²5⋅11² = 43559.825760174244 [ft²] Survey\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.surveyacre","page":"Standard Units","title":"MeasureSystems.surveyacre","text":"surveyacre(U::UnitSystem) = area(𝟐^3*𝟑^2*𝟓*𝟏𝟏^2,U,Survey)\narea : [L²], [L²], [L²], [L²], [L²]\n\nSurvey unit of land area (m² or ft²).\n\njulia> surveyacre(Metric) # m²\nftUS²2³3²5⋅11² = 4046.8726098742513 [m²] Metric\n\njulia> surveyacre(English) # ft²\nft⁻²ftUS²2³3²5⋅11² = 43560.174240522705 [ft²] English\n\njulia> surveyacre(Survey) # ftUS²\n2³3²5⋅11² = 43560.0 [ft²] Survey\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Volume-Units-1","page":"Standard Units","title":"Volume Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"liter\ngallon\nquart\npint\ncup\nfluidounce\nteaspoon\ntablespoon","category":"page"},{"location":"units.html#MeasureSystems.liter","page":"Standard Units","title":"MeasureSystems.liter","text":"liter(U::UnitSystem) = volume(𝟏𝟎^-3,U,Metric)\nvolume : [L³], [L³], [L³], [L³], [L³]\n\nUnit of volume derived from 1 cubic decimeter (m³ or ft³).\n\njulia> liter(Metric) # m³\n2⁻³5⁻³ = 0.001 [m³] Metric\n\njulia> liter(CGS) # cm³\n2³5³ = 1000.0 [cm³] Gauss\n\njulia> liter(IPS) # in³\nft⁻³2³3³5⁻³ = 61.02374409473227 [in³] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.gallon","page":"Standard Units","title":"MeasureSystems.gallon","text":"gallon(U::UnitSystem) = volume(𝟕*𝟏𝟏/𝟐^2,U,English)\nvolume : [L³], [L³], [L³], [L³], [L³]\n\nUnit of volume derived from the US liquid gallon in cubic inches (m³ or ft³).\n\njulia> gallon(Metric) # m³\nft³2⁻⁶3⁻²7⋅11 = 0.0037854117839999997 [m³] Metric\n\njulia> gallon(CGS) # cm³\nft³3⁻²5⁶7⋅11 = 3785.411784000001 [cm³] Gauss\n\njulia> gallon(IPS) # in³\n3⋅7⋅11 = 231.0 [in³] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.quart","page":"Standard Units","title":"MeasureSystems.quart","text":"quart(U::UnitSystem) = gallon(U)/𝟐^2\nvolume : [L³], [L³], [L³], [L³], [L³]\n\nEnglish unit of volume (m³ or ft³).\n\njulia> quart(Metric) # m³\nft³2⁻⁸3⁻²7⋅11 = 0.0009463529459999999 [m³] Metric\n\njulia> quart(CGS) # cm³\nft³2⁻²3⁻²5⁶7⋅11 = 946.3529460000002 [cm³] Gauss\n\njulia> quart(IPS) # in³\n2⁻²3⋅7⋅11 = 57.75 [in³] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.pint","page":"Standard Units","title":"MeasureSystems.pint","text":"pint(U::UnitSystem) = quart(U)/𝟐\nvolume : [L³], [L³], [L³], [L³], [L³]\n\nEnglish unit of volume (m³ or ft³).\n\njulia> pint(Metric) # m³\nft³2⁻⁹3⁻²7⋅11 = 0.00047317647299999996 [m³] Metric\n\njulia> pint(CGS) # cm³\nft³2⁻³3⁻²5⁶7⋅11 = 473.1764730000001 [cm³] Gauss\n\njulia> pint(IPS) # in³\n2⁻³3⋅7⋅11 = 28.875 [in³] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.cup","page":"Standard Units","title":"MeasureSystems.cup","text":"cup(U::UnitSystem) = pint(U)/𝟐\nvolume : [L³], [L³], [L³], [L³], [L³]\n\nEnglish unit of volume (m³ or ft³).\n\njulia> cup(Metric) # m³\nft³2⁻¹⁰3⁻²7⋅11 = 0.00023658823649999998 [m³] Metric\n\njulia> cup(CGS) # cm³\nft³2⁻⁴3⁻²5⁶7⋅11 = 236.58823650000005 [cm³] Gauss\n\njulia> cup(IPS) # in³\n2⁻⁴3⋅7⋅11 = 14.4375 [in³] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.fluidounce","page":"Standard Units","title":"MeasureSystems.fluidounce","text":"fluidounce(U::UnitSystem) = cup(U)/𝟐^3\nvolume : [L³], [L³], [L³], [L³], [L³]\n\nEnglish unit of volume (m³ or ft³).\n\njulia> fluidounce(Metric) # m³\nft³2⁻¹³3⁻²7⋅11 = 2.9573529562499998e-5 [m³] Metric\n\njulia> fluidounce(CGS) # cm³\nft³2⁻⁷3⁻²5⁶7⋅11 = 29.573529562500006 [cm³] Gauss\n\njulia> fluidounce(IPS) # in³\n2⁻⁷3⋅7⋅11 = 1.8046875 [in³] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.teaspoon","page":"Standard Units","title":"MeasureSystems.teaspoon","text":"teaspoon(U::UnitSystem) = 𝟓*milli*liter(U)\nvolume : [L³], [L³], [L³], [L³], [L³]\n\nMeasuring teaspoon unit of volume (m³ or ft³).\n\njulia> teaspoon(Metric) # m³\n2⁻⁶5⁻⁵ = 4.9999999999999996e-6 [m³] Metric\n\njulia> teaspoon(CGS) # cm³\n5 = 5.0 [cm³] Gauss\n\njulia> teaspoon(IPS) # in³\nft⁻³3³5⁻⁵ = 0.30511872047366134 [in³] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.tablespoon","page":"Standard Units","title":"MeasureSystems.tablespoon","text":"tablespoon(U::UnitSystem) = 𝟑*teaspoon(U)\nvolume : [L³], [L³], [L³], [L³], [L³]\n\nMeasuring tablespoon unit of volume (m³ or ft³).\n\njulia> tablespoon(Metric) # m³\n2⁻⁶3⋅5⁻⁵ = 1.4999999999999999e-5 [m³] Metric\n\njulia> tablespoon(CGS) # cm³\n3⋅5 = 15.0 [cm³] Gauss\n\njulia> tablespoon(IPS) # in³\nft⁻³3⁴5⁻⁵ = 0.9153561614209841 [in³] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Mass-Units-1","page":"Standard Units","title":"Mass Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"gram\nearthgram\nkilogram\ntonne\nton\npound\nounce\ngrain\nslug\nslinch\nhyl","category":"page"},{"location":"units.html#MeasureSystems.gram","page":"Standard Units","title":"MeasureSystems.gram","text":"gram(U::UnitSystem) = mass(𝟏,U,Gauss)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nMetric gram unit of mass (kg or lb).\n\njulia> gram(Metric) # kg\n2⁻³5⁻³ = 0.001 [kg] Metric\n\njulia> gram(CGS) # g\n𝟏 = 1.0 [g] Gauss\n\njulia> gram(English) # lb\nlb⁻¹2⁻³5⁻³ = 0.002204622621848776 [lbm] English\n\njulia> gram(British) # slug\ng₀⁻¹ft⋅lb⁻¹2⁻³5⁻³ = 6.852176585679177e-5 [slug] British\n\njulia> gram(GravitationalMetric) # hyl\ng₀⁻¹2⁻³5⁻³ = 0.00010197162129779284 [hyl] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.earthgram","page":"Standard Units","title":"MeasureSystems.earthgram","text":"earthgram(U::UnitSystem) = mass(milli,U,Meridian)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nMeridian gram unit of mass based on earthmeter (kg or lb).\n\njulia> earthgram(Meridian) # keg\n2⁻³5⁻³ = 0.001 [keg] Meridian\n\njulia> earthgram(CGS) # g\ng₀⁻³ᐟ²GME³ᐟ²τ³2⁻²⁷5⁻²¹ = 1.0043504565 ± 3.0e-9 [g] Gauss\n\njulia> earthgram(English) # lb\ng₀⁻³ᐟ²lb⁻¹GME³ᐟ²τ³2⁻³⁰5⁻²⁴ = 0.0022142137367 ± 6.7e-12 [lbm] English\n\njulia> earthgram(British) # slug\ng₀⁻⁵ᐟ²ft⋅lb⁻¹GME³ᐟ²τ³2⁻³⁰5⁻²⁴ = 6.881986682e-5 ± 2.1e-13 [slug] British\n\njulia> earthgram(GravitationalMetric) # hyl\ng₀⁻⁵ᐟ²GME³ᐟ²τ³2⁻³⁰5⁻²⁴ = 0.0001024152444 ± 3.1e-13 [hyl] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.kilogram","page":"Standard Units","title":"MeasureSystems.kilogram","text":"kilogram(U::UnitSystem) = mass(𝟏,U,Metric)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nMetric kilogram unit of mass (kg or lb).\n\njulia> kilogram(Metric) # kg\n𝟏 = 1.0 [kg] Metric\n\njulia> kilogram(CGS) # g\n2³5³ = 1000.0 [g] Gauss\n\njulia> kilogram(English) # lb\nlb⁻¹ = 2.2046226218487757 [lbm] English\n\njulia> kilogram(British) # slug\ng₀⁻¹ft⋅lb⁻¹ = 0.06852176585679176 [slug] British\n\njulia> kilogram(GravitationalMetric) # hyl\ng₀⁻¹ = 0.10197162129779283 [hyl] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.tonne","page":"Standard Units","title":"MeasureSystems.tonne","text":"tonne(U::UnitSystem) = mass(𝟏,U,MTS)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nMetric tonne unit of mass (kg or lb).\n\njulia> tonne(Metric) # kg\n2³5³ = 1000.0 [kg] Metric\n\njulia> tonne(MTS) # t\n𝟏 = 1.0 [t] MTS\n\njulia> tonne(English) # lb\nlb⁻¹2³5³ = 2204.6226218487755 [lbm] English\n\njulia> tonne(British) # slug\ng₀⁻¹ft⋅lb⁻¹2³5³ = 68.52176585679176 [slug] British\n\njulia> tonne(GravitationalMetric) # hyl\ng₀⁻¹2³5³ = 101.97162129779284 [hyl] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.ton","page":"Standard Units","title":"MeasureSystems.ton","text":"ton(U::UnitSystem) = mass(𝟐*kilo,U,English)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nEnglish ton unit of mass (kg or lb).\n\njulia> ton(Metric) # kg\nlb⋅2⁴5³ = 907.18474 [kg] Metric\n\njulia> ton(MTS) # t\nlb⋅2 = 0.90718474 [t] MTS\n\njulia> ton(English) # lb\n2⁴5³ = 2000.0 [lbm] English\n\njulia> ton(British) # slug\ng₀⁻¹ft⋅2⁴5³ = 62.16190034313451 [slug] British\n\njulia> ton(GravitationalMetric) # hyl\ng₀⁻¹lb⋅2⁴5³ = 92.50709875441665 [hyl] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.pound","page":"Standard Units","title":"MeasureSystems.pound","text":"pound(U::UnitSystem) = mass(𝟏,U,English)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nEnglish pound unit of mass (kg or lb).\n\njulia> pound(Metric) # kg\nlb = 0.45359237 [kg] Metric\n\njulia> pound(CGS) # g\nlb⋅2³5³ = 453.59237 [g] Gauss\n\njulia> pound(English) # lb\n𝟏 = 1.0 [lbm] English\n\njulia> pound(British) # slug\ng₀⁻¹ft = 0.031080950171567256 [slug] British\n\njulia> pound(GravitationalMetric) # hyl\ng₀⁻¹lb = 0.046253549377208325 [hyl] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.ounce","page":"Standard Units","title":"MeasureSystems.ounce","text":"ounce(U::UnitSystem) = pound(U)/𝟐^4\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nEnglish ounce unit of mass (kg or lb).\n\njulia> ounce(Metric) # kg\nlb⋅2⁻⁴ = 0.028349523125 [kg] Metric\n\njulia> ounce(CGS) # g\nlb⋅2⁻¹5³ = 28.349523125 [g] Gauss\n\njulia> ounce(English) # lb\n2⁻⁴ = 0.0625 [lbm] English\n\njulia> ounce(British) # slug\ng₀⁻¹ft⋅2⁻⁴ = 0.0019425593857229535 [slug] British\n\njulia> ounce(GravitationalMetric) # hyl\ng₀⁻¹lb⋅2⁻⁴ = 0.0028908468360755203 [hyl] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.grain","page":"Standard Units","title":"MeasureSystems.grain","text":"grain(U::UnitSystem) = milli(U)*pound(U)/𝟕\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nIdeal grain seed of cereal, unit of mass (kg or lb).\n\njulia> grain(Metric) # kg\nlb⋅2⁻³5⁻³7⁻¹ = 6.479891e-5 [kg] Metric\n\njulia> grain(CGS) # g\nlb⋅7⁻¹ = 0.06479891 [g] Gauss\n\njulia> grain(English) # lb\n2⁻³5⁻³7⁻¹ = 0.00014285714285714284 [lbm] English\n\njulia> grain(QCD) # mₚ\n𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅μₚᵤ⁻¹lb⋅2⁻⁴5⁻³7⁻¹ = 3.8740918723e22 ± 1.2e13 [mₚ] QCD\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.slug","page":"Standard Units","title":"MeasureSystems.slug","text":"slug(U::UnitSystem) = mass(𝟏,U,British)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nBritish gravitational slug unit of mass (kg or lb).\n\njulia> slug(Metric) # kg\ng₀⋅ft⁻¹lb = 14.593902937206364 [kg] Metric\n\njulia> slug(CGS) # g\ng₀⋅ft⁻¹lb⋅2³5³ = 14593.902937206363 [g] Gauss\n\njulia> slug(English) # lb\ng₀⋅ft⁻¹ = 32.17404855643044 [lbm] English\n\njulia> slug(British) # slug\n𝟏 = 1.0 [slug] British\n\njulia> slug(GravitationalMetric) # hyl\nft⁻¹lb = 1.4881639435695537 [hyl] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.slinch","page":"Standard Units","title":"MeasureSystems.slinch","text":"slinch(U::UnitSystem) = mass(𝟏,U,IPS)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nBritish gravitational slinch unit of mass (kg or lb).\n\njulia> slinch(Metric) # kg\ng₀⋅ft⁻¹lb⋅2²3 = 175.12683524647636 [kg] Metric\n\njulia> slinch(CGS) # g\ng₀⋅ft⁻¹lb⋅2⁵3⋅5³ = 175126.83524647637 [g] Gauss\n\njulia> slinch(English) # lb\ng₀⋅ft⁻¹2²3 = 386.0885826771653 [lbm] English\n\njulia> slinch(British) # slug\n2²3 = 12.0 [slug] British\n\njulia> slinch(GravitationalMetric) # hyl\nft⁻¹lb⋅2²3 = 17.857967322834646 [hyl] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.hyl","page":"Standard Units","title":"MeasureSystems.hyl","text":"hyl(U::UnitSystem) = mass(𝟏,U,GravitationalMetric)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nGravitational Metric hyl unit of mass (kg or lb).\n\njulia> hyl(Metric) # kg\ng₀ = 9.80665 [kg] Metric\n\njulia> hyl(CGS) # g\ng₀⋅2³5³ = 9806.65 [g] Gauss\n\njulia> hyl(English) # lb\ng₀⋅lb⁻¹ = 21.619962434553294 [lbm] English\n\njulia> hyl(British) # slug\nft⋅lb⁻¹ = 0.6719689751395068 [slug] British\n\njulia> hyl(GravitationalMetric) # hyl\n𝟏 = 1.0 [hyl] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Force-Units-1","page":"Standard Units","title":"Force Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"dyne\nnewton\npoundal\npoundforce\nkilopond","category":"page"},{"location":"units.html#MeasureSystems.dyne","page":"Standard Units","title":"MeasureSystems.dyne","text":"dyne(U::UnitSystem) = force(𝟏,U,Gauss)\nforce : [F], [F], [MLT⁻²], [MLT⁻²], [MLT⁻²]\n\nHistorical dyne unit of force (N or lb).\n\njulia> dyne(Metric) # N\n2⁻⁵5⁻⁵ = 9.999999999999999e-6 [N] Metric\n\njulia> dyne(CGS) # dyn\n𝟏 = 1.0 [dyn] Gauss\n\njulia> dyne(English) # lb\ng₀⁻¹lb⁻¹2⁻⁵5⁻⁵ = 2.2480894309971044e-6 [lbf] English\n\njulia> dyne(FPS) # pdl\nft⁻¹lb⁻¹2⁻⁵5⁻⁵ = 7.233013851209893e-5 [pdl] FPS\n\njulia> dyne(MetricEngineering) # kp\ng₀⁻¹2⁻⁵5⁻⁵ = 1.0197162129779282e-6 [kgf] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.newton","page":"Standard Units","title":"MeasureSystems.newton","text":"newton(U::UnitSystem) = force(𝟏,U,Metric)\nforce : [F], [F], [MLT⁻²], [MLT⁻²], [MLT⁻²]\n\nMetric newton unit of force (N or lb).\n\njulia> newton(Metric) # N\n𝟏 = 1.0 [N] Metric\n\njulia> newton(CGS) # dyn\n2⁵5⁵ = 100000.0 [dyn] Gauss\n\njulia> newton(English) # lb\ng₀⁻¹lb⁻¹ = 0.22480894309971047 [lbf] English\n\njulia> newton(FPS) # pdl\nft⁻¹lb⁻¹ = 7.233013851209893 [pdl] FPS\n\njulia> newton(MetricEngineering) # kp\ng₀⁻¹ = 0.10197162129779283 [kgf] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.poundal","page":"Standard Units","title":"MeasureSystems.poundal","text":"poundal(U::UnitSystem) = force(𝟏,U,FPS)\nforce : [F], [F], [MLT⁻²], [MLT⁻²], [MLT⁻²]\n\nAbsolute English poundal unit of force (N or lb).\n\njulia> poundal(Metric) # N\nft⋅lb = 0.13825495437600002 [N] Metric\n\njulia> poundal(CGS) # dyn\nft⋅lb⋅2⁵5⁵ = 13825.495437600002 [dyn] Gauss\n\njulia> poundal(English) # lb\ng₀⁻¹ft = 0.031080950171567256 [lbf] English\n\njulia> poundal(FPS) # pdl\n𝟏 = 1.0 [pdl] FPS\n\njulia> poundal(MetricEngineering) # kp\ng₀⁻¹ft⋅lb = 0.014098081850173099 [kgf] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.poundforce","page":"Standard Units","title":"MeasureSystems.poundforce","text":"poundforce(U::UnitSystem) = force(𝟏,U,English)\nforce : [F], [F], [MLT⁻²], [MLT⁻²], [MLT⁻²]\n\nEnglish poundforce unit of force used in engineering systems (N or lb).\n\njulia> poundforce(Metric) # N\ng₀⋅lb = 4.4482216152605 [N] Metric\n\njulia> poundforce(CGS) # dyn\ng₀⋅lb⋅2⁵5⁵ = 444822.16152604995 [dyn] Gauss\n\njulia> poundforce(English) # lb\n𝟏 = 1.0 [lbf] English\n\njulia> poundforce(FPS) # pdl\ng₀⋅ft⁻¹ = 32.17404855643044 [pdl] FPS\n\njulia> poundforce(MetricEngineering) # kp\nlb = 0.45359237 [kgf] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.kilopond","page":"Standard Units","title":"MeasureSystems.kilopond","text":"kilopond(U::UnitSystem) = force(𝟏,U,MetricEngineering)\n\nGravitational kilopond unit of force used in engineering systems (N or lb).\n\njulia> kilopond(Metric) # N\ng₀ = 9.80665 [N] Metric\n\njulia> kilopond(CGS) # dyn\ng₀⋅2⁵5⁵ = 980665.0 [dyn] Gauss\n\njulia> kilopond(English) # lb\nlb⁻¹ = 2.2046226218487757 [lbf] English\n\njulia> kilopond(FPS) # pdl\ng₀⋅ft⁻¹lb⁻¹ = 70.9316352839675 [pdl] FPS\n\njulia> kilopond(MetricEngineering) # kp\n𝟏 = 1.0 [kgf] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Pressure-Units-1","page":"Standard Units","title":"Pressure Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"psi\npascal\nbarye\nbar\ntechnicalatmosphere\natmosphere\ninchmercury\ntorr","category":"page"},{"location":"units.html#MeasureSystems.psi","page":"Standard Units","title":"MeasureSystems.psi","text":"psi(U::UnitSystem) = pressure(𝟏,U,IPS)\npressure : [FL⁻²], [FL⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²]\n\nEnglish unit of pressure (Pa or lb⋅ft⁻²).\n\njulia> psi(Metric) # Pa\ng₀⋅ft⁻²lb⋅2⁴3² = 6894.75729316836 [Pa] Metric\n\njulia> psi(English) # lb⋅ft⁻²\n2⁴3² = 144.0 [lbf⋅ft⁻²] English\n\njulia> psi(IPS) # lb⋅in⁻²\n𝟏 = 1.0 [lb⋅in⁻²] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.pascal","page":"Standard Units","title":"MeasureSystems.pascal","text":"pascal(U::UnitSystem) = pressure(𝟏,U,Metric)\npressure : [FL⁻²], [FL⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²]\n\nMetric unit of pressure (Pa or lb⋅ft⁻²).\n\njulia> pascal(Metric) # Pa\n𝟏 = 1.0 [Pa] Metric\n\njulia> pascal(English) # lb⋅ft⁻²\ng₀⁻¹ft²lb⁻¹ = 0.02088543423315013 [lbf⋅ft⁻²] English\n\njulia> pascal(IPS) # lb⋅in⁻²\ng₀⁻¹ft²lb⁻¹2⁻⁴3⁻² = 0.0001450377377302092 [lb⋅in⁻²] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.barye","page":"Standard Units","title":"MeasureSystems.barye","text":"barye(U::UnitSystem) = pressure(𝟏,U,Gauss)\npressure : [FL⁻²], [FL⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²]\n\nHistorical unit of pressure (Pa or lb⋅ft⁻²).\n\njulia> barye(Metric) # Pa\n2⁻¹5⁻¹ = 0.1 [Pa] Metric\n\njulia> barye(English) # lb⋅ft⁻²\ng₀⁻¹ft²lb⁻¹2⁻¹5⁻¹ = 0.002088543423315013 [lbf⋅ft⁻²] English\n\njulia> barye(IPS) # lb⋅in⁻²\ng₀⁻¹ft²lb⁻¹2⁻⁵3⁻²5⁻¹ = 1.4503773773020924e-5 [lb⋅in⁻²] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.bar","page":"Standard Units","title":"MeasureSystems.bar","text":"bar(U::UnitSystem) = pressure(hecto*kilo,U,Metric)\npressure : [FL⁻²], [FL⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²]\n\nReference unit of pressure (Pa or lb⋅ft⁻²).\n\njulia> bar(Metric) # Pa\n2⁵5⁵ = 100000.0 [Pa] Metric\n\njulia> bar(English) # lb⋅ft⁻²\ng₀⁻¹ft²lb⁻¹2⁵5⁵ = 2088.543423315013 [lbf⋅ft⁻²] English\n\njulia> bar(IPS) # lb⋅in⁻²\ng₀⁻¹ft²lb⁻¹2⋅3⁻²5⁵ = 14.503773773020923 [lb⋅in⁻²] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.technicalatmosphere","page":"Standard Units","title":"MeasureSystems.technicalatmosphere","text":"technicalatmosphere(U::UnitSystem) = kilopond(U)/(centi*meter(U))^2\npressure : [FL⁻²], [FL⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²]\n\nGravitational Metric unit of pressure (Pa or lb⋅ft⁻²).\n\njulia> technicalatmosphere(Metric) # Pa\ng₀⋅2⁴5⁴ = 98066.5 [Pa] Metric\n\njulia> technicalatmosphere(English) # lb⋅ft⁻²\nft²lb⁻¹2⁴5⁴ = 2048.161436225217 [lbf⋅ft⁻²] English\n\njulia> technicalatmosphere(IPS) # lb⋅in⁻²\nft²lb⁻¹3⁻²5⁴ = 14.223343307119563 [lb⋅in⁻²] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.atmosphere","page":"Standard Units","title":"MeasureSystems.atmosphere","text":"atmosphere(U::UnitSystem) = pressure(atm = 101325.0,U)\npressure : [FL⁻²], [FL⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²]\n\nStandard pressure reference level of one atmosphere atm (Pa or lb⋅ft⁻²).\n\njulia> atmosphere(Metric) # Pa\natm = 101325.0 [Pa] Metric\n\njulia> atmosphere(English) # lb⋅ft⁻²\ng₀⁻¹ft²lb⁻¹atm = 2116.2166236739367 [lbf⋅ft⁻²] English\n\njulia> atmosphere(IPS) # lb⋅in⁻²\ng₀⁻¹ft²lb⁻¹atm⋅2⁻⁴3⁻² = 14.695948775513449 [lb⋅in⁻²] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.inchmercury","page":"Standard Units","title":"MeasureSystems.inchmercury","text":"inchmercury(U::UnitSystem) = pressure(inHg,U,Metric)\npressure : [FL⁻²], [FL⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²]\n\nUnit of pressure exerted by 1 inch of mercury at standard atmospheric conditions.\n\njuila> inchmercury(Metric) # Pa\ninHg⁻¹ = 3386.3890000000006 [Pa] Metric\n\njulia> inchmercury(English) # lb⋅ft⁻²\ng₀⁻¹ft²lb⁻¹inHg⁻¹ = 70.72620474736304 [lbf⋅ft⁻²] English\n\njulia> inchmercury(IPS) # lb⋅in⁻²\ng₀⁻¹ft²lb⁻¹inHg⁻¹2⁻⁴3⁻² = 0.49115419963446555 [lb⋅in⁻²] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.torr","page":"Standard Units","title":"MeasureSystems.torr","text":"torr(U::UnitSystem) = pressure(atm/𝟐^3/𝟓/𝟏𝟗,U,Metric)\npressure : [FL⁻²], [FL⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²]\n\nUnit of pressure exerted by 1 mm of mercury at standard atmospheric conditions.\n\njuila> torr(Metric) # Pa\natm⋅2⁻³5⁻¹19⁻¹ = 133.32236842105263 [Pa] Metric\n\njulia> torr(English) # lb⋅ft⁻²\ng₀⁻¹ft²lb⁻¹atm⋅2⁻³5⁻¹19⁻¹ = 2.784495557465706 [lbf⋅ft⁻²] English\n\njulia> torr(IPS) # lb⋅in⁻²\ng₀⁻¹ft²lb⁻¹atm⋅2⁻⁷3⁻²5⁻¹19⁻¹ = 0.01933677470462296 [lb⋅in⁻²] IPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Energy-Units-1","page":"Standard Units","title":"Energy Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"erg\njoule\nfootpound\ncalorie\nkilocalorie\nmeancalorie\nearthcalorie\nthermalunit\ngasgallon\ntontnt\nelectronvolt","category":"page"},{"location":"units.html#MeasureSystems.erg","page":"Standard Units","title":"MeasureSystems.erg","text":"erg(U::UnitSystem) = energy(𝟏,U,Gauss)\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nHistorical unit of energy (J or lb⋅ft).\n\njulia> erg(Metric) # J\n2⁻⁷5⁻⁷ = 1.0e-7 [J] Metric\n\njulia> erg(CGS) # erg\n𝟏 = 1.0 [erg] Gauss\n\njulia> erg(British) # lb⋅ft\ng₀⁻¹ft⁻¹lb⁻¹2⁻⁷5⁻⁷ = 7.375621492772652e-8 [lb⋅ft] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.joule","page":"Standard Units","title":"MeasureSystems.joule","text":"joule(U::UnitSystem) = energy(𝟏,U,Metric)\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nMetric unit of energy (J or lb⋅ft).\n\njulia> joule(Metric) # J\n𝟏 = 1.0 [J] Metric\n\njulia> joule(CGS) # erg\n2⁷5⁷ = 1.0e7 [erg] Gauss\n\njulia> joule(British) # lb⋅ft\ng₀⁻¹ft⁻¹lb⁻¹ = 0.7375621492772653 [lb⋅ft] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.footpound","page":"Standard Units","title":"MeasureSystems.footpound","text":"footpound(U::UnitSystem) = poundforce(U)*foot(U)\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nEnglish unit of energy in gravitational and engineering systems (J or lb⋅ft).\n\njulia> footpound(Metric) # J\ng₀⋅ft⋅lb = 1.3558179483314003 [J] Metric\n\njulia> footpound(CGS) # erg\ng₀⋅ft⋅lb⋅2⁷5⁷ = 1.3558179483314004e7 [erg] Gauss\n\njulia> footpound(British) # lb⋅ft\n𝟏 = 1.0 [lb⋅ft] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.calorie","page":"Standard Units","title":"MeasureSystems.calorie","text":"calorie(U::UnitSystem) = kilocalorie(U)/𝟐^3/𝟓^3\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nHeat energy required to raise 1 g of water by 1 Kelvin (cal) in International units.\n\njulia> calorie(International) # J\n2²3²5⋅43⁻¹ = 4.186046511627907 [J] International\n\njulia> calorie(Metric) # J\nΩᵢₜ⁻¹Vᵢₜ²2²3²5⋅43⁻¹ = 4.186737323211057 [J] Metric\n\njulia> calorie(English) # ft⋅lb\ng₀⁻¹ft⁻¹lb⁻¹Ωᵢₜ⁻¹Vᵢₜ²2²3²5⋅43⁻¹ = 3.087978978566891 [lbf⋅ft] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.kilocalorie","page":"Standard Units","title":"MeasureSystems.kilocalorie","text":"kilocalorie(U::UnitSystem) = energy(𝟐^5*𝟓^4*𝟑^2/𝟒𝟑,U,International)\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nHeat energy required to raise 1 kg of water by 1 Kelvin (kcal) in International units.\n\njulia> kilocalorie(International) # J\n2⁵3²5⁴43⁻¹ = 4186.0465116279065 [J] International\n\njulia> kilocalorie(Metric) # J\nΩᵢₜ⁻¹Vᵢₜ²2⁵3²5⁴43⁻¹ = 4186.737323211056 [J] Metric\n\njulia> kilocalorie(English) # ft⋅lb\ng₀⁻¹ft⁻¹lb⁻¹Ωᵢₜ⁻¹Vᵢₜ²2⁵3²5⁴43⁻¹ = 3087.978978566891 [lbf⋅ft] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.meancalorie","page":"Standard Units","title":"MeasureSystems.meancalorie","text":"meancalorie(U::UnitSystem) = energy(𝟐^2*𝟓*𝟑^2/𝟒𝟑,U,InternationalMean)\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nHeat energy required to raise 1 g of water by 1 Kelvin (cal) in InternationalMean units.\n\njulia> meancalorie(InternationalMean) # J\n2²3²5⋅43⁻¹ = 4.186046511627907 [J] InternationalMean\n\njulia> meancalorie(Metric) # J\n2²3²5⋅43⁻¹⋅1.0001900224889804 = 4.186841954605034 [J] Metric\n\njulia> meancalorie(English) # ft⋅lb\ng₀⁻¹ft⁻¹lb⁻¹2²3²5⋅43⁻¹⋅1.0001900224889804 = 3.0880561507227156 [lbf⋅ft] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.earthcalorie","page":"Standard Units","title":"MeasureSystems.earthcalorie","text":"earthcalorie(U::UnitSystem) = calorie(U)*(sqrt(g₀/GME)/τ)^3*𝟐^27*𝟓^21\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nHeat energy required to raise 1 earthgram of water by 1 kelvin in Meridian units.\n\njulia> earthcalorie(Meridian) # J\ng₀⋅Ωᵢₜ⁻¹Vᵢₜ²GME⁻¹τ⁻²2²⁰3²5¹⁵43⁻¹ = 4.1746383635 ± 8.4e-9 [eJ] Meridian\n\njulia> earthcalorie(Metric) # J\ng₀⁻³ᐟ²Ωᵢₜ⁻¹Vᵢₜ²GME³ᐟ²τ³2⁻²⁵3²5⁻²⁰43⁻¹ = 4.204951542 ± 1.3e-8 [J] Metric\n\njulia> earthcalorie(British) # ft⋅lb\ng₀⁻⁵ᐟ²ft⁻¹lb⁻¹Ωᵢₜ⁻¹Vᵢₜ²GME³ᐟ²τ³2⁻²⁵3²5⁻²⁰43⁻¹ = 3.1014130969 ± 9.3e-9 [lb⋅ft] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.thermalunit","page":"Standard Units","title":"MeasureSystems.thermalunit","text":"thermalunit(U::UnitSystem) = kilocalorie(U)*𝟑^2/𝟓/lb\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nHeat energy required to raise 1 lb of water by 1 Rankine (BTU) in International units.\n\njulia> thermalunit(British) # J\ng₀⁻¹ft⁻¹Ωᵢₜ⁻¹Vᵢₜ²2⁵5⁵43⁻¹ = 778.1576129990752 [lb⋅ft] British\n\njulia> thermalunit(International) # J\nlb⋅2⁵5⁵43⁻¹ = 1054.8659767441861 [J] International\n\njulia> thermalunit(Metric) # ft⋅lb\nlb⋅Ωᵢₜ⁻¹Vᵢₜ²2⁵5⁵43⁻¹ = 1055.0400583348662 [J] Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.gasgallon","page":"Standard Units","title":"MeasureSystems.gasgallon","text":"gasgallon(U::UnitSystem) = 𝟐*𝟑*𝟏𝟗*kilo*thermalunit(U)\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nGasoline gallon equivalent reference unit of energy (J or lb⋅ft).\n\njulia> gasgallon(Metric) # J\nlb⋅Ωᵢₜ⁻¹Vᵢₜ²2⁹3⋅5⁸19⋅43⁻¹ = 1.2027456665017475e8 [J] Metric\n\njulia> gasgallon(CGS) # erg\nlb⋅Ωᵢₜ⁻¹Vᵢₜ²2¹⁶3⋅5¹⁵19⋅43⁻¹ = 1.2027456665017475e15 [erg] Gauss\n\njulia> gasgallon(British) # lb⋅ft\ng₀⁻¹ft⁻¹Ωᵢₜ⁻¹Vᵢₜ²2⁹3⋅5⁸19⋅43⁻¹ = 8.870996788189459e7 [lb⋅ft] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.tontnt","page":"Standard Units","title":"MeasureSystems.tontnt","text":"tontnt(U::UnitSystem) = giga*calorie(U)\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nTon TNT equivalent reference unit of energy (J or lb⋅ft).\n\njulia> tontnt(Metric) # J\nΩᵢₜ⁻¹Vᵢₜ²2¹¹3²5¹⁰43⁻¹ = 4.186737323211056e9 [J] Metric\n\njulia> tontnt(CGS) # erg\nΩᵢₜ⁻¹Vᵢₜ²2¹⁸3²5¹⁷43⁻¹ = 4.186737323211057e16 [erg] Gauss\n\njulia> tontnt(British) # lb⋅ft\ng₀⁻¹ft⁻¹lb⁻¹Ωᵢₜ⁻¹Vᵢₜ²2¹¹3²5¹⁰43⁻¹ = 3.087978978566891e9 [lb⋅ft] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.electronvolt","page":"Standard Units","title":"MeasureSystems.electronvolt","text":"electronvolt(U::UnitSystem) = elementarycharge(U)*volt(U)\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nUnit of energy gained by a rest electron accelerated by 1 volt in vacuum (J or lb⋅ft).\n\njulia> electronvolt(SI2019) # J\n𝘦 = 1.602176634e-19 [J] SI2019\n\njulia> electronvolt(SI2019)/lightspeed(SI2019) # kg⋅m⋅s⁻¹\n𝘤⁻¹𝘦 = 5.344285992678308e-28 [N⋅s] SI2019\n\njulia> electronvolt(SI2019)/lightspeed(SI2019)^2 # kg\n𝘤⁻²𝘦 = 1.7826619216278975e-36 [kg] SI2019\n\njulia> electronvolt(SI2019)/planck(SI2019)/lightspeed(SI2019) # m⁻¹\n𝘩⁻¹𝘤⁻¹𝘦 = 806554.393734921 [m⁻¹] SI2019\n\njulia> electronvolt(SI2019)/boltzmann(SI2019) # K\nkB⁻¹𝘦 = 11604.518121550082 [K] SI2019\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Power-Units-1","page":"Standard Units","title":"Power Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"watt\nhorsepowerwatt\nhorsepowermetric\nhorsepower\nelectricalhorsepower\ntonsrefrigeration\nboilerhorsepower","category":"page"},{"location":"units.html#MeasureSystems.watt","page":"Standard Units","title":"MeasureSystems.watt","text":"watt(U::UnitSystem) = power(𝟏,U,Metric)\npower : [FLT⁻¹], [FLT⁻¹], [ML²T⁻³], [ML²T⁻³], [ML²T⁻³]\n\nMetric watt unit of power (W or lb⋅ft⋅s⁻¹).\n\njulia> watt(Metric) # W\n𝟏 = 1.0 [W] Metric\n\njulia> watt(English) # lb⋅ft⋅s⁻¹\ng₀⁻¹ft⁻¹lb⁻¹ = 0.7375621492772653 [lbf⋅ft⋅s⁻¹] English\n\njulia> watt(MetricEngineering) # kgf⋅m⋅s⁻¹\ng₀⁻¹ = 0.10197162129779283 [kgf⋅m⋅s⁻¹] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.horsepowerwatt","page":"Standard Units","title":"MeasureSystems.horsepowerwatt","text":"horsepowerwatt(U::UnitSystem) = power(𝟐^4*𝟑^3/𝟓*τ,U,British)\npower : [FLT⁻¹], [FLT⁻¹], [ML²T⁻³], [ML²T⁻³], [ML²T⁻³]\n\nUnit of power derived from Watt's exact original horse power estimate.\n\njulia> horsepowerwatt(British) # lb⋅ft⋅s⁻¹\nτ⋅2⁴3³5⁻¹ = 542.8672105403163 [lb⋅ft⋅s⁻¹] British\n\njulia> horsepowerwatt(Metric) # W\ng₀⋅ft⋅lb⋅τ⋅2⁴3³5⁻¹ = 736.0291076111621 [W] Metric\n\njulia> horsepowerwatt(MetricEngineering) # kgf⋅m⋅s⁻¹\nft⋅lb⋅τ⋅2⁴3³5⁻¹ = 75.05408142547782 [kgf⋅m⋅s⁻¹] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.horsepowermetric","page":"Standard Units","title":"MeasureSystems.horsepowermetric","text":"horsepowermetric(U::UnitSystem) = power(𝟑*𝟓^2,U,GravitationalMetric)\npower : [FLT⁻¹], [FLT⁻¹], [ML²T⁻³], [ML²T⁻³], [ML²T⁻³]\n\nUnit of power derived from raising 75 kp by 1 m in 1  in 1 s.\n\njulia> horsepowermetric(British) # lb⋅ft⋅s⁻¹\nft⁻¹lb⁻¹3⋅5² = 542.476038840742 [lb⋅ft⋅s⁻¹] British\n\njulia> horsepowermetric(Metric) # W\ng₀⋅3⋅5² = 735.49875 [W] Metric\n\njulia> horsepowermetric(MetricEngineering) # kgf⋅m⋅s⁻¹\n3⋅5² = 75.0 [kgf⋅m⋅s⁻¹] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.horsepower","page":"Standard Units","title":"MeasureSystems.horsepower","text":"horsepower(U::UnitSystem) = power(𝟐*𝟓^2*𝟏𝟏,U,British)\npower : [FLT⁻¹], [FLT⁻¹], [ML²T⁻³], [ML²T⁻³], [ML²T⁻³]\n\nUnit of power derived from raising 550 lb by 1 ft in 1  in 1 s.\n\njulia> horsepower(British) # lb⋅ft⋅s⁻¹\n2⋅5²11 = 550.0 [lb⋅ft⋅s⁻¹] British\n\njulia> horsepower(Metric) # W\ng₀⋅ft⋅lb⋅2⋅5²11 = 745.6998715822701 [W] Metric\n\njulia> horsepower(MetricEngineering) # kgf⋅m⋅s⁻¹\nft⋅lb⋅2⋅5²11 = 76.0402249068 [kgf⋅m⋅s⁻¹] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.electricalhorsepower","page":"Standard Units","title":"MeasureSystems.electricalhorsepower","text":"electricalhorsepower(U::UnitSystem) = power(746,U,Metric)\npower : [FLT⁻¹], [FLT⁻¹], [ML²T⁻³], [ML²T⁻³], [ML²T⁻³]\n\nUnit of power for electrical motors in the United States.\n\njulia> electricalhorsepower(British) # lb⋅ft⋅s⁻¹\ng₀⁻¹ft⁻¹lb⁻¹2⋅373 = 550.2213633608399 [lb⋅ft⋅s⁻¹] British\n\njulia> electricalhorsepower(Metric) # W\n2⋅373 = 746.0 [W] Metric\n\njulia> electricalhorsepower(MetricEngineering) # kgf⋅m⋅s⁻¹\ng₀⁻¹2⋅373 = 76.07082948815345 [kgf⋅m⋅s⁻¹] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.tonsrefrigeration","page":"Standard Units","title":"MeasureSystems.tonsrefrigeration","text":"tonsrefrigeration(U::UnitSystem) = frequency(𝟐*𝟓/𝟑,U,Metric)*thermalunit(U)\npower : [FLT⁻¹], [FLT⁻¹], [ML²T⁻³], [ML²T⁻³], [ML²T⁻³]\n\nUnit of power derived from melting of 1 short ton of ice in 24 hours.\n\njulia> tonsrefrigeration(British) # lb⋅ft⋅s⁻¹\ng₀⁻¹ft⁻¹Ωᵢₜ⁻¹Vᵢₜ²2⁶3⁻¹5⁶43⁻¹ = 2593.8587099969172 [lb⋅ft⋅s⁻¹] British\n\njulia> tonsrefrigeration(Metric) # W\nlb⋅Ωᵢₜ⁻¹Vᵢₜ²2⁶3⁻¹5⁶43⁻¹ = 3516.8001944495536 [W] Metric\n\njulia> tonsrefrigeration(MetricEngineering) # kgf⋅m⋅s⁻¹\ng₀⁻¹lb⋅Ωᵢₜ⁻¹Vᵢₜ²2⁶3⁻¹5⁶43⁻¹ = 358.613817608414 [kgf⋅m⋅s⁻¹] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.boilerhorsepower","page":"Standard Units","title":"MeasureSystems.boilerhorsepower","text":"boilerhorsepower(U::UnitSystem) = frequency(1339/𝟐^4/𝟑^2,U,Metric)*thermalunit(U)\npower : [FLT⁻¹], [FLT⁻¹], [ML²T⁻³], [ML²T⁻³], [ML²T⁻³]\n\nUnit of power derived from evaporating 34.5 lb of boiling water in 1 hour.\n\njulia> boilerhorsepower(British) # lb⋅ft⋅s⁻¹\ng₀⁻¹ft⁻¹Ωᵢₜ⁻¹Vᵢₜ²2⋅3⁻²5⁵43⁻¹⋅1339 = 7235.785026428902 [lb⋅ft⋅s⁻¹] British\n\njulia> boilerhorsepower(Metric) # W\nlb⋅Ωᵢₜ⁻¹Vᵢₜ²2⋅3⁻²5⁵43⁻¹⋅1339 = 9810.407209099902 [W] Metric\n\njulia> boilerhorsepower(MetricEngineering) # kgf⋅m⋅s⁻¹\ng₀⁻¹lb⋅Ωᵢₜ⁻¹Vᵢₜ²2⋅3⁻²5⁵43⁻¹⋅1339 = 1000.3831287034718 [kgf⋅m⋅s⁻¹] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Electromagnetic-Units-1","page":"Standard Units","title":"Electromagnetic Units","text":"","category":"section"},{"location":"units.html#Charge-Units-1","page":"Standard Units","title":"Charge Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"coulomb\nearthcoulomb\nabcoulomb\nstatcoulomb","category":"page"},{"location":"units.html#MeasureSystems.coulomb","page":"Standard Units","title":"MeasureSystems.coulomb","text":"coulomb(U::UnitSystem) = charge(𝟏,U,Metric)\ncharge : [Q], [Q], [Q], [M¹ᐟ²L¹ᐟ²T⁻¹], [M¹ᐟ²L³ᐟ²T⁻²]\n\nMetric unit of charge (C).\n\njulia> coulomb(Metric) # C\n𝟏 = 1.0 [C] Metric\n\njulia> coulomb(EMU) # abC\n2⁻¹5⁻¹ = 0.1 [g¹ᐟ²cm¹ᐟ²s⁻¹] EMU\n\njulia> coulomb(ESU) # statC\n𝘤⋅2⋅5 = 2.99792458e9 [g¹ᐟ²cm³ᐟ²s⁻²] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.earthcoulomb","page":"Standard Units","title":"MeasureSystems.earthcoulomb","text":"earthcoulomb(U::UnitSystem) = charge(𝟏,U,Meridian)\ncharge : [Q], [Q], [Q], [M¹ᐟ²L¹ᐟ²T⁻¹], [M¹ᐟ²L³ᐟ²T⁻²]\n\nMeridian unit of charge (C).\n\njulia> earthcoulomb(Metric) # C\ng₀⁻¹GME⋅τ²2⁻¹⁸5⁻¹⁴ = 1.0028982055 ± 2.0e-9 [C] Metric\n\njulia> earthcoulomb(EMU) # abC\ng₀⁻¹GME⋅τ²2⁻¹⁹5⁻¹⁵ = 0.10028982055 ± 2.0e-10 [g¹ᐟ²cm¹ᐟ²s⁻¹] EMU\n\njulia> earthcoulomb(ESU) # statC\n𝘤⋅g₀⁻¹GME⋅τ²2⁻¹⁷5⁻¹³ = 3.0066131814e9 ± 6.0 [g¹ᐟ²cm³ᐟ²s⁻²] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.abcoulomb","page":"Standard Units","title":"MeasureSystems.abcoulomb","text":"abcoulomb(U::UnitSystem) = charge(𝟏,U,EMU)\ncharge : [Q], [Q], [Q], [M¹ᐟ²L¹ᐟ²T⁻¹], [M¹ᐟ²L³ᐟ²T⁻²]\n\nElectromagnetic unit of charge (C).\n\njulia> abcoulomb(Metric) # C\n2⋅5 = 10.0 [C] Metric\n\njulia> abcoulomb(EMU) # abC\n𝟏 = 1.0 [g¹ᐟ²cm¹ᐟ²s⁻¹] EMU\n\njulia> abcoulomb(ESU) # statC\n𝘤⋅2²5² = 2.99792458e10 [g¹ᐟ²cm³ᐟ²s⁻²] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.statcoulomb","page":"Standard Units","title":"MeasureSystems.statcoulomb","text":"statcoulomb(U::UnitSystem) = charge(𝟏,U,ESU)\ncharge : [Q], [Q], [Q], [M¹ᐟ²L¹ᐟ²T⁻¹], [M¹ᐟ²L³ᐟ²T⁻²]\n\nElectrostatic unit of charge (C).\n\njulia> statcoulomb(Metric) # C\n𝘤⁻¹2⁻¹5⁻¹ = 3.3356409519815207e-10 [C] Metric\n\njulia> statcoulomb(EMU) # abC\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [g¹ᐟ²cm¹ᐟ²s⁻¹] EMU\n\njulia> statcoulomb(ESU) # statC\n𝟏 = 1.0 [g¹ᐟ²cm³ᐟ²s⁻²] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Current-Units-1","page":"Standard Units","title":"Current Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"ampere\nabampere\nstatampere","category":"page"},{"location":"units.html#MeasureSystems.ampere","page":"Standard Units","title":"MeasureSystems.ampere","text":"ampere(U::UnitSystem) = current(𝟏,U,Metric)\ncurrent : [T⁻¹Q], [T⁻¹Q], [T⁻¹Q], [M¹ᐟ²L¹ᐟ²T⁻²], [M¹ᐟ²L³ᐟ²T⁻³]\n\nMetric unit of current (C⋅s⁻¹).\n\njulia> ampere(Metric) # C⋅s⁻¹\n𝟏 = 1.0 [s⁻¹C] Metric\n\njulia> ampere(EMU) # abC⋅s⁻¹\n2⁻¹5⁻¹ = 0.1 [Bi] EMU\n\njulia> ampere(ESU) # statC⋅s⁻¹\n𝘤⋅2⋅5 = 2.99792458e9 [g¹ᐟ²cm³ᐟ²s⁻³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.abampere","page":"Standard Units","title":"MeasureSystems.abampere","text":"abampere(U::UnitSystem) = current(𝟏,U,EMU)\ncurrent : [T⁻¹Q], [T⁻¹Q], [T⁻¹Q], [M¹ᐟ²L¹ᐟ²T⁻²], [M¹ᐟ²L³ᐟ²T⁻³]\n\nElectromagnetic unit of current (C⋅s⁻¹).\n\njulia> abampere(Metric) # C⋅s⁻¹\n2⋅5 = 10.0 [s⁻¹C] Metric\n\njulia> abampere(EMU) # abC⋅s⁻¹\n𝟏 = 1.0 [Bi] EMU\n\njulia> abampere(ESU) # statC⋅s⁻¹\n𝘤⋅2²5² = 2.99792458e10 [g¹ᐟ²cm³ᐟ²s⁻³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.statampere","page":"Standard Units","title":"MeasureSystems.statampere","text":"statampere(U::UnitSystem) = current(𝟏,U,ESU)\ncurrent : [T⁻¹Q], [T⁻¹Q], [T⁻¹Q], [M¹ᐟ²L¹ᐟ²T⁻²], [M¹ᐟ²L³ᐟ²T⁻³]\n\nElectrostatic unit of current (C⋅s⁻¹).\n\njulia> statampere(Metric) # C⋅s⁻¹\n𝘤⁻¹2⁻¹5⁻¹ = 3.3356409519815207e-10 [s⁻¹C] Metric\n\njulia> statampere(EMU) # abC⋅s⁻¹\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [Bi] EMU\n\njulia> statampere(ESU) # statC⋅s⁻¹\n𝟏 = 1.0 [g¹ᐟ²cm³ᐟ²s⁻³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Electromotive-Units-1","page":"Standard Units","title":"Electromotive Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"volt\nabvolt\nstatvolt","category":"page"},{"location":"units.html#MeasureSystems.volt","page":"Standard Units","title":"MeasureSystems.volt","text":"volt(U::UnitSystem) = electricpotential(𝟏,U,Metric)\nelectricpotential : [FLQ⁻¹], [FLQ⁻¹], [ML²T⁻²Q⁻¹], [M¹ᐟ²L³ᐟ²T⁻¹], [M¹ᐟ²L¹ᐟ²]\n\nMetric unit of electricpotential (V).\n\njulia> volt(Metric) # V\n𝟏 = 1.0 [V] Metric\n\njulia> volt(EMU) # abV\n2⁸5⁸ = 1.0e8 [g¹ᐟ²cm³ᐟ²s⁻¹] EMU\n\njulia> volt(ESU) # statV\n𝘤⁻¹2⁶5⁶ = 0.0033356409519815205 [g¹ᐟ²cm¹ᐟ²] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.abvolt","page":"Standard Units","title":"MeasureSystems.abvolt","text":"abvolt(U::UnitSystem) = electricpotential(𝟏,U,EMU)\nelectricpotential : [FLQ⁻¹], [FLQ⁻¹], [ML²T⁻²Q⁻¹], [M¹ᐟ²L³ᐟ²T⁻¹], [M¹ᐟ²L¹ᐟ²]\n\nElectromagnetic unit of electricpotential (V).\n\njulia> abvolt(Metric) # V\n2⁻⁸5⁻⁸ = 1.0e-8 [V] Metric\n\njulia> abvolt(EMU) # abV\n𝟏 = 1.0 [g¹ᐟ²cm³ᐟ²s⁻¹] EMU\n\njulia> abvolt(ESU) # statV\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [g¹ᐟ²cm¹ᐟ²] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.statvolt","page":"Standard Units","title":"MeasureSystems.statvolt","text":"statvolt(U::UnitSystem) = electricpotential(𝟏,U,ESU)\nelectricpotential : [FLQ⁻¹], [FLQ⁻¹], [ML²T⁻²Q⁻¹], [M¹ᐟ²L³ᐟ²T⁻¹], [M¹ᐟ²L¹ᐟ²]\n\nElectrostatic unit of electricpotential (V).\n\njulia> statvolt(Metric) # V\n𝘤⋅2⁻⁶5⁻⁶ = 299.792458 [V] Metric\n\njulia> statvolt(EMU) # abV\n𝘤⋅2²5² = 2.99792458e10 [g¹ᐟ²cm³ᐟ²s⁻¹] EMU\n\njulia> statvolt(ESU) # statV\n𝟏 = 1.0 [g¹ᐟ²cm¹ᐟ²] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Inductance-Units-1","page":"Standard Units","title":"Inductance Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"henry\nabhenry\nstathenry","category":"page"},{"location":"units.html#MeasureSystems.henry","page":"Standard Units","title":"MeasureSystems.henry","text":"henry(U::UnitSystem) = inductance(𝟏,U,Metric)\ninductance : [FLT²Q⁻²], [FLT²Q⁻²], [ML²Q⁻²], [LT²], [L⁻¹T⁴]\n\nMetric unit of inductance (H).\n\njulia> henry(Metric) # H\n𝟏 = 1.0 [H] Metric\n\njulia> henry(EMU) # abH\n2⁹5⁹ = 1.0e9 [cm⋅s²] EMU\n\njulia> henry(ESU) # statH\n𝘤⁻²2⁵5⁵ = 1.1126500560536185e-12 [cm⁻¹s⁴] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.abhenry","page":"Standard Units","title":"MeasureSystems.abhenry","text":"abhenry(U::UnitSystem) = inductance(𝟏,U,EMU)\ninductance : [FLT²Q⁻²], [FLT²Q⁻²], [ML²Q⁻²], [LT²], [L⁻¹T⁴]\n\nElectromagnetic unit of inductance (H).\n\njulia> abhenry(Metric) # H\n2⁻⁹5⁻⁹ = 1.0e-9 [H] Metric\n\njulia> abhenry(EMU) # abH\n𝟏 = 1.0 [cm⋅s²] EMU\n\njulia> abhenry(ESU) # statH\n𝘤⁻²2⁻⁴5⁻⁴ = 1.1126500560536186e-21 [cm⁻¹s⁴] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.stathenry","page":"Standard Units","title":"MeasureSystems.stathenry","text":"stathenry(U::UnitSystem) = inductance(𝟏,U,ESU)\ninductance : [FLT²Q⁻²], [FLT²Q⁻²], [ML²Q⁻²], [LT²], [L⁻¹T⁴]\n\nElectrostatic unit of inductance (H).\n\njulia> stathenry(Metric) # H\n𝘤²2⁻⁵5⁻⁵ = 8.987551787368175e11 [H] Metric\n\njulia> stathenry(EMU) # abH\n𝘤²2⁴5⁴ = 8.987551787368175e20 [cm⋅s²] EMU\n\njulia> stathenry(ESU) # statH\n𝟏 = 1.0 [cm⁻¹s⁴] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Resistance-Units-1","page":"Standard Units","title":"Resistance Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"ohm\nabohm\nstatohm","category":"page"},{"location":"units.html#MeasureSystems.ohm","page":"Standard Units","title":"MeasureSystems.ohm","text":"ohm(U::UnitSystem) = resistance(𝟏,U,Metric)\nresistance : [FLTQ⁻²], [FLTQ⁻²], [ML²T⁻¹Q⁻²], [LT], [L⁻¹T³]\n\nMetric unit of resistance (Ω).\n\njulia> ohm(Metric) # Ω\n𝟏 = 1.0 [Ω] Metric\n\njulia> ohm(EMU) # abΩ\n2⁹5⁹ = 1.0e9 [cm⋅s] EMU\n\njulia> ohm(ESU) # statΩ\n𝘤⁻²2⁵5⁵ = 1.1126500560536185e-12 [cm⁻¹s³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.abohm","page":"Standard Units","title":"MeasureSystems.abohm","text":"abohm(U::UnitSystem) = resistance(𝟏,U,EMU)\nresistance : [FLTQ⁻²], [FLTQ⁻²], [ML²T⁻¹Q⁻²], [LT], [L⁻¹T³]\n\nElectromagnetic unit of resistance (Ω).\n\njulia> abohm(Metric) # Ω\n2⁻⁹5⁻⁹ = 1.0e-9 [Ω] Metric\n\njulia> abohm(EMU) # abΩ\n𝟏 = 1.0 [cm⋅s] EMU\n\njulia> abohm(ESU) # statΩ\n𝘤⁻²2⁻⁴5⁻⁴ = 1.1126500560536186e-21 [cm⁻¹s³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.statohm","page":"Standard Units","title":"MeasureSystems.statohm","text":"statohm(U::UnitSystem) = resistance(𝟏,U,ESU)\nresistance : [FLTQ⁻²], [FLTQ⁻²], [ML²T⁻¹Q⁻²], [LT], [L⁻¹T³]\n\nElectrostatic unit of resistance (Ω).\n\njulia> statohm(Metric) # Ω\n𝘤²2⁻⁵5⁻⁵ = 8.987551787368175e11 [Ω] Metric\n\njulia> statohm(EMU) # abΩ\n𝘤²2⁴5⁴ = 8.987551787368175e20 [cm⋅s] EMU\n\njulia> statohm(ESU) # statΩ\n𝟏 = 1.0 [cm⁻¹s³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Conductance-Units-1","page":"Standard Units","title":"Conductance Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"siemens\nabmho\nstatmho","category":"page"},{"location":"units.html#MeasureSystems.siemens","page":"Standard Units","title":"MeasureSystems.siemens","text":"siemens(U::UnitSystem) = conductance(𝟏,U,Metric)\nconductance : [F⁻¹L⁻¹T⁻¹Q²], [F⁻¹L⁻¹T⁻¹Q²], [M⁻¹L⁻²TQ²], [L⁻¹T⁻¹], [LT⁻³]\n\nMetric unit of conductance (S).\n\njulia> siemens(Metric) # S\n𝟏 = 1.0 [S] Metric\n\njulia> siemens(EMU) # abS\n2⁻⁹5⁻⁹ = 1.0e-9 [cm⁻¹s⁻¹] EMU\n\njulia> siemens(ESU) # statS\n𝘤²2⁻⁵5⁻⁵ = 8.987551787368175e11 [cm⋅s⁻³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.abmho","page":"Standard Units","title":"MeasureSystems.abmho","text":"abmho(U::UnitSystem) = conductance(𝟏,U,EMU)\nconductance : [F⁻¹L⁻¹T⁻¹Q²], [F⁻¹L⁻¹T⁻¹Q²], [M⁻¹L⁻²TQ²], [L⁻¹T⁻¹], [LT⁻³]\n\nElectromagnetic unit of conductance (S).\n\njulia> abmho(Metric) # S\n2⁹5⁹ = 1.0e9 [S] Metric\n\njulia> abmho(EMU) # abS\n𝟏 = 1.0 [cm⁻¹s⁻¹] EMU\n\njulia> abmho(ESU) # statS\n𝘤²2⁴5⁴ = 8.987551787368175e20 [cm⋅s⁻³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.statmho","page":"Standard Units","title":"MeasureSystems.statmho","text":"statmho(U::UnitSystem) = conductance(𝟏,U,ESU)\nconductance : [F⁻¹L⁻¹T⁻¹Q²], [F⁻¹L⁻¹T⁻¹Q²], [M⁻¹L⁻²TQ²], [L⁻¹T⁻¹], [LT⁻³]\n\nElectrostatic unit of conductance (S).\n\njulia> statmho(Metric) # S\n𝘤⁻²2⁵5⁵ = 1.1126500560536185e-12 [S] Metric\n\njulia> statmho(EMU) # abS\n𝘤⁻²2⁻⁴5⁻⁴ = 1.1126500560536186e-21 [cm⁻¹s⁻¹] EMU\n\njulia> statmho(ESU) # statS\n𝟏 = 1.0 [cm⋅s⁻³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Capacitance-Units-1","page":"Standard Units","title":"Capacitance Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"farad\nabfarad\nstatfarad","category":"page"},{"location":"units.html#MeasureSystems.farad","page":"Standard Units","title":"MeasureSystems.farad","text":"farad(U::UnitSystem) = capacitance(𝟏,U,Metric)\ncapacitance : [F⁻¹L⁻¹Q²], [F⁻¹L⁻¹Q²], [M⁻¹L⁻²T²Q²], [L⁻¹], [LT⁻²]\n\nMetric unit of capacitance (F).\n\njulia> farad(Metric) # F\n𝟏 = 1.0 [F] Metric\n\njulia> farad(EMU) # abF\n2⁻⁹5⁻⁹ = 1.0e-9 [cm⁻¹] EMU\n\njulia> farad(ESU) # statF\n𝘤²2⁻⁵5⁻⁵ = 8.987551787368175e11 [gal] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.abfarad","page":"Standard Units","title":"MeasureSystems.abfarad","text":"abfarad(U::UnitSystem) = capacitance(𝟏,U,EMU)\ncapacitance : [F⁻¹L⁻¹Q²], [F⁻¹L⁻¹Q²], [M⁻¹L⁻²T²Q²], [L⁻¹], [LT⁻²]\n\nElectromagnetic unit of capacitance (F).\n\njulia> abfarad(Metric) # F\n2⁹5⁹ = 1.0e9 [F] Metric\n\njulia> abfarad(EMU) # abF\n𝟏 = 1.0 [cm⁻¹] EMU\n\njulia> abfarad(ESU) # statF\n𝘤²2⁴5⁴ = 8.987551787368175e20 [gal] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.statfarad","page":"Standard Units","title":"MeasureSystems.statfarad","text":"statfarad(U::UnitSystem) = capacitance(𝟏,U,ESU)\ncapacitance : [F⁻¹L⁻¹Q²], [F⁻¹L⁻¹Q²], [M⁻¹L⁻²T²Q²], [L⁻¹], [LT⁻²]\n\nElectrostatic unit of capacitance (F).\n\njulia> statfarad(Metric) # F\n𝘤⁻²2⁵5⁵ = 1.1126500560536185e-12 [F] Metric\n\njulia> statfarad(EMU) # abF\n𝘤⁻²2⁻⁴5⁻⁴ = 1.1126500560536186e-21 [cm⁻¹] EMU\n\njulia> statfarad(ESU) # statF\n𝟏 = 1.0 [gal] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Magnetic-Flux-Units-1","page":"Standard Units","title":"Magnetic Flux Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"weber\nmaxwell\nstatweber","category":"page"},{"location":"units.html#MeasureSystems.weber","page":"Standard Units","title":"MeasureSystems.weber","text":"weber(U::UnitSystem) = magneticflux(𝟏,U,Metric)\nmagneticflux : [FLTQ⁻¹C], [FLTQ⁻¹], [ML²T⁻¹Q⁻¹], [M¹ᐟ²L³ᐟ²], [M¹ᐟ²L¹ᐟ²T]\n\nMetric unit of magneticflux (Wb).\n\njulia> weber(Metric) # Wb\n𝟏 = 1.0 [Wb] Metric\n\njulia> weber(EMU) # Mx\n2⁸5⁸ = 1.0e8 [Mx] EMU\n\njulia> weber(ESU) # statWb\n𝘤⁻¹2⁶5⁶ = 0.0033356409519815205 [g¹ᐟ²cm¹ᐟ²s] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.maxwell","page":"Standard Units","title":"MeasureSystems.maxwell","text":"maxwell(U::UnitSystem) = magneticflux(𝟏,U,EMU)\nmagneticflux : [FLTQ⁻¹C], [FLTQ⁻¹], [ML²T⁻¹Q⁻¹], [M¹ᐟ²L³ᐟ²], [M¹ᐟ²L¹ᐟ²T]\n\nElectromagnetic unit of magneticflux (Wb).\n\njulia> maxwell(Metric) # Wb\n2⁻⁸5⁻⁸ = 1.0e-8 [Wb] Metric\n\njulia> maxwell(EMU) # Mx\n𝟏 = 1.0 [Mx] EMU\n\njulia> maxwell(ESU) # statWb\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [g¹ᐟ²cm¹ᐟ²s] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.statweber","page":"Standard Units","title":"MeasureSystems.statweber","text":"statweber(U::UnitSystem) = magneticflux(𝟏,U,ESU)\nmagneticflux : [FLTQ⁻¹C], [FLTQ⁻¹], [ML²T⁻¹Q⁻¹], [M¹ᐟ²L³ᐟ²], [M¹ᐟ²L¹ᐟ²T]\n\nElectrostatic unit of magneticflux (Wb).\n\njulia> statweber(Metric) # Wb\n𝘤⋅2⁻⁶5⁻⁶ = 299.792458 [Wb] Metric\n\njulia> statweber(EMU) # Mx\n𝘤⋅2²5² = 2.99792458e10 [Mx] EMU\n\njulia> statweber(ESU) # statWb\n𝟏 = 1.0 [g¹ᐟ²cm¹ᐟ²s] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Magnetic-Flux-Density-Units-1","page":"Standard Units","title":"Magnetic Flux Density Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"tesla\ngauss\nstattesla","category":"page"},{"location":"units.html#MeasureSystems.tesla","page":"Standard Units","title":"MeasureSystems.tesla","text":"tesla(U::UnitSystem) = magneticfluxdensity(𝟏,U,Metric)\nmagneticfluxdensity : [FL⁻¹TQ⁻¹C], [FL⁻¹TQ⁻¹], [MT⁻¹Q⁻¹], [M¹ᐟ²L⁻¹ᐟ²], [M¹ᐟ²L⁻³ᐟ²T]\n\nMetric unit of magneticfluxdensity (T).\n\njulia> tesla(Metric) # T\n𝟏 = 1.0 [T] Metric\n\njulia> tesla(EMU) # G\n2⁴5⁴ = 10000.0 [G] EMU\n\njulia> tesla(ESU) # statT\n𝘤⁻¹2²5² = 3.3356409519815204e-7 [g¹ᐟ²cm⁻³ᐟ²s] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.gauss","page":"Standard Units","title":"MeasureSystems.gauss","text":"gauss(U::UnitSystem) = magneticfluxdensity(𝟏,U,EMU)\nmagneticfluxdensity : [FL⁻¹TQ⁻¹C], [FL⁻¹TQ⁻¹], [MT⁻¹Q⁻¹], [M¹ᐟ²L⁻¹ᐟ²], [M¹ᐟ²L⁻³ᐟ²T]\n\nElectromagnetic unit of magneticfluxdensity (T).\n\njulia> gauss(Metric) # T\n2⁻⁴5⁻⁴ = 0.0001 [T] Metric\n\njulia> gauss(EMU) # G\n𝟏 = 1.0 [G] EMU\n\njulia> gauss(ESU) # statT\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [g¹ᐟ²cm⁻³ᐟ²s] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.stattesla","page":"Standard Units","title":"MeasureSystems.stattesla","text":"stattesla(U::UnitSystem) = magneticfluxdensity(𝟏,U,ESU)\nmagneticfluxdensity : [FL⁻¹TQ⁻¹C], [FL⁻¹TQ⁻¹], [MT⁻¹Q⁻¹], [M¹ᐟ²L⁻¹ᐟ²], [M¹ᐟ²L⁻³ᐟ²T]\n\nElectrostatic unit of magneticfluxdensity (T).\n\njulia> stattesla(Metric) # T\n𝘤⋅2⁻²5⁻² = 2.99792458e6 [T] Metric\n\njulia> stattesla(EMU) # G\n𝘤⋅2²5² = 2.99792458e10 [G] EMU\n\njulia> stattesla(ESU) # statT\n𝟏 = 1.0 [g¹ᐟ²cm⁻³ᐟ²s] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Magnetic-Specialized-Units-1","page":"Standard Units","title":"Magnetic Specialized Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"oersted\ngilbert","category":"page"},{"location":"units.html#MeasureSystems.oersted","page":"Standard Units","title":"MeasureSystems.oersted","text":"oersted(U::UnitSystem) = magneticfield(𝟏,U,EMU)\nmagneticfield : [L⁻¹T⁻¹QA²ΛC⁻¹], [L⁻¹T⁻¹Q], [L⁻¹T⁻¹Q], [M¹ᐟ²L⁻¹ᐟ²T⁻²], [M¹ᐟ²L¹ᐟ²T⁻³]\n\nElectromagnetic unit of magneticfield (Oe).\n\njulia> oersted(Metric) # A⋅m⁻¹\nτ⁻¹2²5³ = 79.57747154594767 [m⁻¹s⁻¹C] Metric\n\njulia> oersted(EMU) # Oe\n𝟏 = 1.0 [Oe] EMU\n\njulia> oersted(ESU) # statA⋅cm⁻¹\n𝘤⋅2²5² = 2.99792458e10 [g¹ᐟ²cm¹ᐟ²s⁻³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.gilbert","page":"Standard Units","title":"MeasureSystems.gilbert","text":"gilbert(U::UnitSystem) = abampere(U)/𝟐/turn(U)\nnonstandard : [T⁻¹QA⁻¹], [T⁻¹Q], [T⁻¹Q], [M¹ᐟ²L¹ᐟ²T⁻²], [M¹ᐟ²L³ᐟ²T⁻³]\n\nElectromagnetic unit of magnetization (Gb).\n\njulia> gilbert(Metric) # A⋅rad⁻¹\nτ⁻¹5 = 0.7957747154594768 [s⁻¹C] Metric\n\njulia> gilbert(EMU) # Gb\nτ⁻¹2⁻¹ = 0.07957747154594767 [Bi] EMU\n\njulia> gilbert(ESU) # statA⋅rad⁻¹\n𝘤⋅τ⁻¹2⋅5² = 2.385672579618471e9 [g¹ᐟ²cm³ᐟ²s⁻³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Thermodynamic-Units-1","page":"Standard Units","title":"Thermodynamic Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"kelvin\nrankine\ncelsius\nfahrenheit\nsealevel\nboiling\nmole\nearthmole\npoundmole\nslugmole\nslinchmole\nkatal\namagat","category":"page"},{"location":"units.html#MeasureSystems.kelvin","page":"Standard Units","title":"MeasureSystems.kelvin","text":"kelvin(U::UnitSystem) = temperature(𝟏,U,Metric)\ntemperature : [Θ], [Θ], [Θ], [Θ], [Θ]\n\nMetric unit of temperature (K or °R).\n\njulia> kelvin(Metric) # K\n𝟏 = 1.0 [K] Metric\n\njulia> kelvin(SI2019) # K\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³ = 0.99999999966 ± 3.1e-10 [K] SI2019\n\njulia> kelvin(British) # °R\n3²5⁻¹ = 1.8 [°R] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.rankine","page":"Standard Units","title":"MeasureSystems.rankine","text":"rankine(U::UnitSystem) = temperature(𝟏,U,English)\ntemperature : [Θ], [Θ], [Θ], [Θ], [Θ]\n\nEnglish unit of temperature (K or °R).\n\njulia> rankine(Metric) # K\n3⁻²5 = 0.5555555555555556 [K] Metric\n\njulia> rankine(SI2019) # K\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴3⁻²5⁴ = 0.55555555536 ± 1.7e-10 [K] SI2019\n\njulia> rankine(British) # °R\n𝟏 = 1.0 [°R] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.celsius","page":"Standard Units","title":"MeasureSystems.celsius","text":"celsius(U::UnitSystem) = temperature(T₀,U,Metric)\ntemperature : [Θ], [Θ], [Θ], [Θ], [Θ]\n\nMetric unit of temperature (K or °R).\n\njulia> celsius(Metric) # K\nT₀ = 273.15 [K] Metric\n\njulia> celsius(SI2019) # K\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹T₀⋅2⁴5³ = 273.149999906 ± 8.4e-8 [K] SI2019\n\njulia> celsius(British) # °R\nT₀⋅3²5⁻¹ = 491.66999999999996 [°R] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.fahrenheit","page":"Standard Units","title":"MeasureSystems.fahrenheit","text":"fahrenheit(U::UnitSystem) = temperature(Constant(459.67),U,English)\ntemperature : [Θ], [Θ], [Θ], [Θ], [Θ]\n\nEnglish unit of temperature (K or °R).\n\njulia> fahrenheit(Metric) # K\n3⁻²5⋅459.67 = 255.37222222222223 [K] Metric\n\njulia> fahrenheit(SI2019) # K\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴3⁻²5⁴⋅459.67 = 255.372222134 ± 7.9e-8 [K] SI2019\n\njulia> fahrenheit(British) # °R\n459.67 = 459.67 [°R] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.sealevel","page":"Standard Units","title":"MeasureSystems.sealevel","text":"sealevel(U::UnitSystem) = temperature(T₀+𝟑*𝟓,U)\ntemperature : [Θ], [Θ], [Θ], [Θ], [Θ]\n\nStandard temperature reference at sealevel (K or °R).\n\njulia> sealevel(Metric) # K\n288.15 = 288.15 [K] Metric\n\njulia> sealevel(SI2019) # K\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³⋅288.15 = 288.149999901 ± 8.9e-8 [K] SI2019\n\njulia> sealevel(English) # °R\n3²5⁻¹⋅288.15 = 518.67 [°R] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.boiling","page":"Standard Units","title":"MeasureSystems.boiling","text":"boiling(U::UnitSystem) = temperature(T₀+Constant(99.9839),U)\ntemperature : [Θ], [Θ], [Θ], [Θ], [Θ]\n\nStandard temperature reference at boiling point of water (K or °R).\n\njulia> boiling(Metric) # K\n373.1339 = 373.1339 [K] Metric\n\njulia> boiling(SI2019) # K\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³⋅373.1339 = 373.13389987 ± 1.1e-7 [K] SI2019\n\njulia> boiling(English) # °R\n3²5⁻¹⋅373.1339 = 671.64102 [°R] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.mole","page":"Standard Units","title":"MeasureSystems.mole","text":"mole(U::UnitSystem) = molaramount(𝟏,U,Metric)\nmolaramount : [N], [N], [N], [N], [N]\n\nMolecular molaramount unit (mol or lb-mol).\n\njulia> mole(Metric) # mol\n𝟏 = 1.0 [mol] Metric\n\njulia> mole(English) # lb-mol\nlb⁻¹2⁻³5⁻³ = 0.002204622621848776 [lb-mol] English\n\njulia> mole(British) # slug-mol\ng₀⁻¹ft⋅lb⁻¹2⁻³5⁻³ = 6.852176585679177e-5 [slug-mol] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.earthmole","page":"Standard Units","title":"MeasureSystems.earthmole","text":"earthmole(U::UnitSystem) = molaramount(𝟏,U,Meridian)\nmolaramount : [N], [N], [N], [N], [N]\n\nMolecular molaramount unit (mol or lb-mol).\n\njulia> earthmole(Metric) # mol\ng₀⁻³ᐟ²GME³ᐟ²τ³2⁻²⁷5⁻²¹ = 1.0043504565 ± 3.0e-9 [mol] Metric\n\njulia> earthmole(English) # lb-mol\ng₀⁻³ᐟ²lb⁻¹GME³ᐟ²τ³2⁻³⁰5⁻²⁴ = 0.0022142137367 ± 6.7e-12 [lb-mol] English\n\njulia> earthmole(British) # slug-mol\ng₀⁻⁵ᐟ²ft⋅lb⁻¹GME³ᐟ²τ³2⁻³⁰5⁻²⁴ = 6.881986682e-5 ± 2.1e-13 [slug-mol] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.poundmole","page":"Standard Units","title":"MeasureSystems.poundmole","text":"poundmole(U::UnitSystem) = molaramount(𝟏,U,English)\nmolaramount : [N], [N], [N], [N], [N]\n\nMolecular molaramount unit (mol or lb-mol).\n\njulia> poundmole(Metric) # mol\nlb⋅2³5³ = 453.59237 [mol] Metric\n\njulia> poundmole(English) # lb-mol\n𝟏 = 1.0 [lb-mol] English\n\njulia> poundmole(British) # slug-mol\ng₀⁻¹ft = 0.031080950171567256 [slug-mol] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.slugmole","page":"Standard Units","title":"MeasureSystems.slugmole","text":"slugmole(U::UnitSystem) = molaramount(𝟏,U,British)\nmolaramount : [N], [N], [N], [N], [N]\n\nMolecular molaramount unit (mol or lb-mol).\n\njulia> slugmole(Metric) # mol\ng₀⋅ft⁻¹lb⋅2³5³ = 14593.902937206363 [mol] Metric\n\njulia> slugmole(English) # lb-mol\ng₀⋅ft⁻¹ = 32.17404855643044 [lb-mol] English\n\njulia> slugmole(British) # slug-mol\n𝟏 = 1.0 [slug-mol] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.slinchmole","page":"Standard Units","title":"MeasureSystems.slinchmole","text":"slinchmole(U::UnitSystem) = molaramount(𝟏,U,IPS)\nmolaramount : [N], [N], [N], [N], [N]\n\nMolecular molaramount unit (mol or lb-mol).\n\njulia> slinchmole(Metric) # mol\ng₀⋅ft⁻¹lb⋅2⁵3⋅5³ = 175126.83524647637 [mol] Metric\n\njulia> slinchmole(English) # lb-mol\ng₀⋅ft⁻¹2²3 = 386.0885826771653 [lb-mol] English\n\njulia> slinchmole(British) # slug-mol\n2²3 = 12.0 [slug-mol] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.katal","page":"Standard Units","title":"MeasureSystems.katal","text":"katal(U::UnitSystem) = catalysis(𝟏,U,Metric)\ncatalysis : [T⁻¹N], [T⁻¹N], [T⁻¹N], [T⁻¹N], [T⁻¹N]\n\nMetric unit of catalysis (mol⋅s⁻¹ or lb-mol⋅s⁻¹).\n\njulia> katal(Metric) # mol⋅s⁻¹\n𝟏 = 1.0 [kat] Metric\n\njulia> katal(English) # lb-mol⋅s⁻¹\nlb⁻¹2⁻³5⁻³ = 0.002204622621848776 [s⁻¹lb-mol] English\n\njulia> katal(British) # slug-mol⋅s⁻¹\ng₀⁻¹ft⋅lb⁻¹2⁻³5⁻³ = 6.852176585679177e-5 [s⁻¹slug-mol] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.amagat","page":"Standard Units","title":"MeasureSystems.amagat","text":"amagat(U::UnitSystem) = loschmidt(U)/avogadro(U)\nmolarity : [L⁻³N], [L⁻³N], [L⁻³N], [L⁻³N], [L⁻³N]\n\nNumber of moles of an ideal gas in a unit volume (mol⋅m⁻³ or lb-mol⋅ft⁻³).\n\njulia> amagat(Metric) # mol⋅m⁻³\nkB⁻¹𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹T₀⁻¹atm⋅2⁴5³ = 44.61503339 ± 1.4e-8 [m⁻³mol] Metric\n\njulia> amagat(SI2019) # mol⋅m⁻³\nkB⁻¹NA⁻¹T₀⁻¹atm = 44.615033405470314 [m⁻³mol] SI2019\n\njulia> amagat(English) # slug-mol⋅ft⁻³\nkB⁻¹𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹ft³lb⁻¹T₀⁻¹atm⋅2 = 0.00278522554558 ± 8.6e-13 [ft⁻³lb-mol] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Photometric-Units-1","page":"Standard Units","title":"Photometric Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"lumen\ncandela\nlux\nphot\nfootcandle\nnit\napostilb\nstilb\nlambert\nfootlambert\nbril","category":"page"},{"location":"units.html#MeasureSystems.lumen","page":"Standard Units","title":"MeasureSystems.lumen","text":"lumen(U::UnitSystem) = luminousflux(𝟏,U,Metric)\nluminousflux : [J], [J], [J], [J], [J]\n\nCommon unit of luminousflux (lm).\n\njulia> lumen(Metric) # lm\n𝟏 = 1.0 [cd] Metric\n\njulia> lumen(CGS) # lm\n𝟏 = 1.0 [cd] Gauss\n\njulia> lumen(English) # lm\n𝟏 = 1.0 [lm] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.candela","page":"Standard Units","title":"MeasureSystems.candela","text":"candela(U::UnitSystem) = luminousintensity(𝟏,U,Metric)\nluminousintensity : [JA⁻²], [J], [J], [J], [J]\n\nCommon unit of luminousintensity (cd).\n\njulia> candela(MetricEngineering) # lm⋅rad⁻²\n𝟏 = 1.0 [lm⋅rad⁻²] MetricEngineering\n\njulia> candela(MetricDegree) # lm⋅deg⁻²\nτ²2⁻⁶3⁻⁴5⁻² = 0.00030461741978670857 [lm⋅deg⁻²] MetricDegree\n\njulia> candela(MetricGradian) # lm⋅gon⁻²\nτ²2⁻⁸5⁻⁴ = 0.00024674011002723397 [lm⋅gon⁻²] MetricGradian\n\njulia> candela(CGS) # cd\n𝟏 = 1.0 [cd] Gauss\n\njulia> candela(English) # cd\n𝟏 = 1.0 [cd] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.lux","page":"Standard Units","title":"MeasureSystems.lux","text":"lux(U::UnitSystem) = illuminance(𝟏,U,Metric)\nilluminance : [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J]\n\nMetric unit of illuminance (lx).\n\njulia> lux(Metric) # lx\n𝟏 = 1.0 [lx] Metric\n\njulia> lux(CGS) # ph\n2⁻⁴5⁻⁴ = 0.0001 [ph] Gauss\n\njulia> lux(English) # fc\nft² = 0.09290304 [fc] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.phot","page":"Standard Units","title":"MeasureSystems.phot","text":"phot(U::UnitSystem) = illuminance(𝟏,U,Gauss)\nilluminance : [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J]\n\nHistoric unit of illuminance (lx).\n\njulia> phot(Metric) # lx\n2⁴5⁴ = 10000.0 [lx] Metric\n\njulia> phot(CGS) # ph\n𝟏 = 1.0 [ph] Gauss\n\njulia> phot(English) # fc\nft²2⁴5⁴ = 929.0304000000001 [fc] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.footcandle","page":"Standard Units","title":"MeasureSystems.footcandle","text":"footcandle(U::UnitSystem) = illuminance(𝟏,U,English)\nilluminance : [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J]\n\nEnglish unit of illuminance (lx).\n\njulia> footcandle(Metric) # lx\nft⁻² = 10.76391041670972 [lx] Metric\n\njulia> footcandle(CGS) # ph\nft⁻²2⁻⁴5⁻⁴ = 0.0010763910416709721 [ph] Gauss\n\njulia> footcandle(English) # fc\n𝟏 = 1.0 [fc] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.nit","page":"Standard Units","title":"MeasureSystems.nit","text":"nit(U::UnitSystem) = luminance(𝟏,U,Metric)\nluminance : [L⁻²JA⁻²], [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J]\n\nMetric unit of luminance (lx⋅rad⁻²).\n\njulia> nit(MetricEngineering) # nt\n𝟏 = 1.0 [nt] MetricEngineering\n\njulia> nit(MetricDegree) # lm⋅m⁻²deg⁻²\nτ²2⁻⁶3⁻⁴5⁻² = 0.00030461741978670857 [m⁻²lm⋅deg⁻²] MetricDegree\n\njulia> nit(MetricGradian) # lm⋅m⁻²gon⁻²\nτ²2⁻⁸5⁻⁴ = 0.00024674011002723397 [m⁻²lm⋅gon⁻²] MetricGradian\n\njulia> nit(CGS) # sb\n2⁻⁴5⁻⁴ = 0.0001 [ph] Gauss\n\njulia> nit(English) # fc\nft² = 0.09290304 [ft⁻²lm⋅rad⁻²] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.apostilb","page":"Standard Units","title":"MeasureSystems.apostilb","text":"apostilb(U::UnitSystem) = luminance(𝟐/turn(U),U,Metric)\nluminance : [L⁻²JA⁻²], [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J]\n\nMetric unit of luminance (lx⋅rad⁻²).\n\njulia> apostilb(MetricEngineering) # nt\nτ⁻¹2 = 0.3183098861837907 [nt] MetricEngineering\n\njulia> apostilb(MetricDegree) # lm⋅m⁻²deg⁻²\nτ⋅2⁻⁵3⁻⁴5⁻² = 9.69627362219072e-5 [m⁻²lm⋅deg⁻²] MetricDegree\n\njulia> apostilb(MetricGradian) # lm⋅m⁻²gon⁻²\nτ⋅2⁻⁷5⁻⁴ = 7.853981633974483e-5 [m⁻²lm⋅gon⁻²] MetricGradian\n\njulia> apostilb(CGS) # sb\nτ⁻¹2⁻³5⁻⁴ = 3.183098861837907e-5 [ph] Gauss\n\njulia> apostilb(English) # fc\nft²τ⁻¹2 = 0.029571956088528157 [ft⁻²lm⋅rad⁻²] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.stilb","page":"Standard Units","title":"MeasureSystems.stilb","text":"stilb(U::UnitSystem) = luminance(𝟏,U,Gauss)\nluminance : [L⁻²JA⁻²], [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J]\n\nHistoric unit of luminance (lx⋅rad⁻²).\n\njulia> stilb(MetricEngineering) # nt\n2⁴5⁴ = 10000.0 [nt] MetricEngineering\n\njulia> stilb(MetricDegree) # lm⋅m⁻²deg⁻²\nτ²2⁻²3⁻⁴5² = 3.0461741978670855 [m⁻²lm⋅deg⁻²] MetricDegree\n\njulia> stilb(MetricGradian) # lm⋅m⁻²gon⁻²\nτ²2⁻⁴ = 2.4674011002723395 [m⁻²lm⋅gon⁻²] MetricGradian\n\njulia> stilb(CGS) # sb\n𝟏 = 1.0 [ph] Gauss\n\njulia> stilb(English) # fc\nft²2⁴5⁴ = 929.0304000000001 [ft⁻²lm⋅rad⁻²] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.lambert","page":"Standard Units","title":"MeasureSystems.lambert","text":"lambert(U::UnitSystem) = luminance(𝟐/turn(U),U,Gauss)\nluminance : [L⁻²JA⁻²], [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J]\n\nHistoric unit of luminance (nt).\n\njulia> lambert(MetricEngineering) # nt\nτ⁻¹2⁵5⁴ = 3183.098861837907 [nt] MetricEngineering\n\njulia> lambert(MetricDegree) # lm⋅m⁻²deg⁻²\nτ⋅2⁻¹3⁻⁴5² = 0.9696273622190719 [m⁻²lm⋅deg⁻²] MetricDegree\n\njulia> lambert(MetricGradian) # lm⋅m⁻²gon⁻²\nτ⋅2⁻³ = 0.7853981633974483 [m⁻²lm⋅gon⁻²] MetricGradian\n\njulia> lambert(CGS) # sb\nτ⁻¹2 = 0.3183098861837907 [ph] Gauss\n\njulia> lambert(English) # fc\nft²τ⁻¹2⁵5⁴ = 295.71956088528157 [ft⁻²lm⋅rad⁻²] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.footlambert","page":"Standard Units","title":"MeasureSystems.footlambert","text":"footlambert(U::UnitSystem) = luminance(𝟐/turn(U),U,English)\nluminance : [L⁻²JA⁻²], [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J]\n\nEnglish unit of luminance (nt).\n\njulia> footlambert(MetricEngineering) # nt\nft⁻²τ⁻¹2 = 3.42625909963539 [nt] MetricEngineering\n\njulia> footlambert(MetricDegree) # lm⋅m⁻²deg⁻²\nft⁻²τ⋅2⁻⁵3⁻⁴5⁻² = 0.0010436982064516637 [m⁻²lm⋅deg⁻²] MetricDegree\n\njulia> footlambert(MetricGradian) # lm⋅m⁻²gon⁻²\nft⁻²τ⋅2⁻⁷5⁻⁴ = 0.0008453955472258477 [m⁻²lm⋅gon⁻²] MetricGradian\n\njulia> footlambert(CGS) # sb\nft⁻²τ⁻¹2⁻³5⁻⁴ = 0.00034262590996353903 [ph] Gauss\n\njulia> footlambert(English) # fc\nτ⁻¹2 = 0.3183098861837907 [ft⁻²lm⋅rad⁻²] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.bril","page":"Standard Units","title":"MeasureSystems.bril","text":"bril(U::UnitSystem) = centi*nano*lambert(U)\nluminance : [L⁻²JA⁻²], [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J]\n\nReference unit of luminance (nt).\n\njulia> bril(MetricEngineering) # nt\nτ⁻¹2⁻⁶5⁻⁷ = 3.183098861837907e-8 [nt] MetricEngineering\n\njulia> bril(MetricDegree) # lm⋅m⁻²deg⁻²\nτ⋅2⁻¹²3⁻⁴5⁻⁹ = 9.69627362219072e-12 [m⁻²lm⋅deg⁻²] MetricDegree\n\njulia> bril(MetricGradian) # lm⋅m⁻²gon⁻²\nτ⋅2⁻¹⁴5⁻¹¹ = 7.853981633974484e-12 [m⁻²lm⋅gon⁻²] MetricGradian\n\njulia> bril(CGS) # sb\nτ⁻¹2⁻¹⁰5⁻¹¹ = 3.183098861837907e-12 [ph] Gauss\n\njulia> bril(English) # fc\nft²τ⁻¹2⁻⁶5⁻⁷ = 2.9571956088528156e-9 [ft⁻²lm⋅rad⁻²] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Specialized-Units-1","page":"Standard Units","title":"Specialized Units","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"neper\nbel\ndecibel\nhertz\napm\nrpm\nkayser\ndiopter\ngforce\ngalileo\neotvos\ndarcy\npoise\nreyn\nstokes\nrayl\nmpge\nlangley\njansky\nsolarflux\ncurie\nsievert\nroentgen","category":"page"},{"location":"units.html#MeasureSystems.neper","page":"Standard Units","title":"MeasureSystems.neper","text":"neper(U::UnitSystem) = U(𝟏,log(𝟙))\n\nLogarithmic unit expressing the ratio of a dimensional quanty.\n\njulia> neper(Metric)\n𝟏 = 1.0 [log(𝟙)] Metric\n\njulia> exp(neper(Metric))\nexp(𝟏) = 2.718281828459045 [𝟙] Metric\n\n\n\n\n\n","category":"function"},{"location":"units.html#MeasureSystems.bel","page":"Standard Units","title":"MeasureSystems.bel","text":"bel(U::UnitSystem) = U(𝟏,log10(𝟙))\n\nLogarithmic unit expressing the ratio of a dimensional quanty.\n\njulia> bel(Metric)\n𝟏 = 1.0 [log10(𝟙)] Metric\n\njulia> exp10(bel(Metric))\nexp10(𝟏) = 10.0 [𝟙] Metric\n\n\n\n\n\n","category":"function"},{"location":"units.html#MeasureSystems.decibel","page":"Standard Units","title":"MeasureSystems.decibel","text":"decibel(U::UnitSystem) = U(𝟏,logdb(𝟙))\n\nLogarithmic unit expressing the ratio of a dimensional quanty.\n\njulia> decibel(Metric)\n𝟏 = 1.0 [dB(𝟙)] Metric\n\njulia> expdb(decibel(Metric))\n1.2589254117941673^(𝟏) = 1.2589254117941673 [𝟙] Metric\n\n\n\n\n\n","category":"function"},{"location":"units.html#MeasureSystems.hertz","page":"Standard Units","title":"MeasureSystems.hertz","text":"hertz(U::UnitSystem) = 𝟏/second(U)\nfrequency : [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹]\n\nMetric unit of frequency (s⁻¹).\n\njulia> hertz(MetricEngineering) # rad⋅s⁻¹\n𝟏 = 1.0 [Hz] MetricEngineering\n\njulia> hertz(IAU) # D⁻¹\n2⁷3³5² = 86400.0 [D⁻¹] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.apm","page":"Standard Units","title":"MeasureSystems.apm","text":"apm(U::UnitSystem) = 𝟏/minute(U)\nfrequency : [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹]\n\nActions per minute apm unit of frequency (s⁻¹).\n\njulia> apm(Metric) # s⁻¹\n2⁻²3⁻¹5⁻¹ = 0.016666666666666666 [Hz] Metric\n\njulia> apm(MPH) # h⁻¹\n2²3⋅5 = 60.0 [h⁻¹] MPH\n\njulia> apm(IAU) # D⁻¹\n2⁵3²5 = 1440.0 [D⁻¹] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.rpm","page":"Standard Units","title":"MeasureSystems.rpm","text":"rpm(U::UnitSystem) = turn(U)/minute(U)\nangularfrequency : [T⁻¹A], [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹]\n\nRevolutions per minute rpm unit of angularfrequency (rad⋅s⁻¹).\n\njulia> rpm(MetricEngineering) # rad⋅s⁻¹\nτ⋅2⁻²3⁻¹5⁻¹ = 0.10471975511965977 [s⁻¹rad] MetricEngineering\n\njulia> rpm(MetricGradian) # gon⋅s⁻¹\n2²3⁻¹5 = 6.666666666666666 [s⁻¹gon] MetricGradian\n\njulia> rpm(MetricDegree) # deg⋅s⁻¹\n2⋅3 = 6.0 [s⁻¹deg] MetricDegree\n\njulia> rpm(MetricArcminute) # amin⋅s⁻¹\n2³3²5 = 360.0 [s⁻¹amin] MetricArcminute\n\njulia> rpm(MetricArcsecond) # asec⋅s⁻¹\n2⁵3³5² = 21600.0 [s⁻¹asec] MetricArcsecond\n\njulia> rpm(MPH) # rad⋅h⁻¹\nτ⋅2²3⋅5 = 376.99111843077515 [h⁻¹] MPH\n\njulia> rpm(IAU) # rad⋅D⁻¹\nτ⋅2⁵3²5 = 9047.786842338604 [D⁻¹] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.kayser","page":"Standard Units","title":"MeasureSystems.kayser","text":"kayser(U::UnitSystem) = wavenumber(𝟏,U,Gauss)\nwavenumber : [L⁻¹], [L⁻¹], [L⁻¹], [L⁻¹], [L⁻¹]\n\nMetric unit of wavenumber or curvature (m⁻¹ or ft⁻¹).\n\njulia> kayser(Metric) # m⁻¹\n2²5² = 100.0 [m⁻¹] Metric\n\njulia> kayser(CGS) # cm⁻¹\n𝟏 = 1.0 [cm⁻¹] Gauss\n\njulia> kayser(English) # ft⁻¹\nft⋅2²5² = 30.48 [ft⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.diopter","page":"Standard Units","title":"MeasureSystems.diopter","text":"diopter(U::UnitSystem) = wavenumber(𝟏,U,Metric)\nwavenumber : [L⁻¹], [L⁻¹], [L⁻¹], [L⁻¹], [L⁻¹]\n\nMetric unit of wavenumber or curvature (m⁻¹ or ft⁻¹).\n\njulia> diopter(Metric) # m⁻¹\n𝟏 = 1.0 [m⁻¹] Metric\n\njulia> diopter(CGS) # cm⁻¹\n2⁻²5⁻² = 0.01 [cm⁻¹] Gauss\n\njulia> diopter(English) # ft⁻¹\nft = 0.3048 [ft⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.gforce","page":"Standard Units","title":"MeasureSystems.gforce","text":"gforce(U::UnitSystem) = specificforce(𝟏,U,English)\nspecificforce : [FM⁻¹], [LT⁻²], [LT⁻²], [LT⁻²], [LT⁻²]\n\nStandard gravity specificforce g₀ at geodetic reference latitude (m⋅s⁻² or ft⋅s⁻²).\n\njulia> gforce(CGS) # gal\ng₀⋅2²5² = 980.665 [gal] Gauss\n\njulia> gforce(British) # ft⋅s⁻²\ng₀⋅ft⁻¹ = 32.17404855643044 [ft⋅s⁻²] British\n\njulia> gforce(English) # lbf⋅lbm⁻¹\n𝟏 = 1.0 [g₀] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.galileo","page":"Standard Units","title":"MeasureSystems.galileo","text":"galileo(U::UnitSystem) = specificforce(𝟏,U,Gauss)\nspecificforce : [FM⁻¹], [LT⁻²], [LT⁻²], [LT⁻²], [LT⁻²]\n\nMetric unit of specificforce used in gravimetry (m⋅s⁻² or ft⋅s⁻²).\n\njulia> galileo(Metric) # m⋅s⁻²\n2⁻²5⁻² = 0.01 [m⋅s⁻²] Metric\n\njulia> galileo(CGS) # gal\n𝟏 = 1.0 [gal] Gauss\n\njulia> galileo(English) # lbf⋅lbm⁻¹\ng₀⁻¹2⁻²5⁻² = 0.0010197162129779284 [g₀] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.eotvos","page":"Standard Units","title":"MeasureSystems.eotvos","text":"eotvos(U::UnitSystem) = specificforce(nano,U,Gauss)/length(𝟏,U,Gauss)\nnonstandard : [FM⁻¹L⁻¹], [T⁻²], [T⁻²], [T⁻²], [T⁻²]\n\nMetric unit of specificforce per length used in gravimetry (s⁻² or gal⋅cm⁻¹).\n\njulia> eotvos(Metric) # s⁻²\n2⁻⁹5⁻⁹ = 1.0e-9 [Hz⋅s⁻¹] Metric\n\njulia> eotvos(CGS) # gal⋅cm⁻¹\n2⁻⁹5⁻⁹ = 1.0e-9 [gal⋅cm⁻¹] Gauss\n\njulia> eotvos(English) # lbf⋅lbm⁻¹ft⁻¹\ng₀⁻¹ft⋅2⁻⁹5⁻⁹ = 3.108095017156726e-11 [lbf⋅lbm⁻¹ft⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.darcy","page":"Standard Units","title":"MeasureSystems.darcy","text":"darcy(U::UnitSystem) = area(milli/atm,U,Gauss)\narea : [L²], [L²], [L²], [L²], [L²]\n\nMetric unit of permeability (m² or ft²).\n\njulia> darcy(Metric) # m²\natm⁻¹2⁻⁷5⁻⁷ = 9.869232667160128e-13 [m²] Metric\n\njulia> darcy(CGS) # cm²\natm⁻¹2⁻³5⁻³ = 9.86923266716013e-9 [cm²] Gauss\n\njulia> darcy(English) # ft²\nft⁻²atm⁻¹2⁻⁷5⁻⁷ = 1.0623153631097675e-11 [ft²] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.poise","page":"Standard Units","title":"MeasureSystems.poise","text":"poise(U::UnitSystem) = viscosity(𝟏,U,Gauss)\nviscosity : [FL⁻²T], [FL⁻²T], [ML⁻¹T⁻¹], [ML⁻¹T⁻¹], [ML⁻¹T⁻¹]\n\nMetric unit of viscosity (kg⋅m⁻¹⋅s⁻¹ or lb⋅s⋅ft⁻²).\n\njulia> poise(Metric) # kg⋅m⁻¹⋅s⁻¹\n2⁻¹5⁻¹ = 0.1 [Pa⋅s] Metric\n\njulia> poise(CGS) # g⋅cm⁻¹⋅s⁻¹\n𝟏 = 1.0 [P] Gauss\n\njulia> poise(English) # lb⋅s⋅ft⁻²\ng₀⁻¹ft²lb⁻¹2⁻¹5⁻¹ = 0.002088543423315013 [lbf⋅ft⁻²s] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.reyn","page":"Standard Units","title":"MeasureSystems.reyn","text":"reyn(U::UnitSystem) = viscosity(𝟏,U,IPS)\nviscosity : [FL⁻²T], [FL⁻²T], [ML⁻¹T⁻¹], [ML⁻¹T⁻¹], [ML⁻¹T⁻¹]\n\nIPS unit of viscosity named after Reynolds (kg⋅m⁻¹⋅s⁻¹ or lb⋅s⋅ft⁻²).\n\njulia> reyn(Metric) # kg⋅m⁻¹⋅s⁻¹\ng₀⋅ft⁻²lb⋅2⁴3² = 6894.75729316836 [Pa⋅s] Metric\n\njulia> reyn(CGS) # g⋅cm⁻¹⋅s⁻¹\ng₀⋅ft⁻²lb⋅2⁵3²5 = 68947.5729316836 [P] Gauss\n\njulia> reyn(English) # lb⋅s⋅ft⁻²\n2⁴3² = 144.0 [lbf⋅ft⁻²s] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.stokes","page":"Standard Units","title":"MeasureSystems.stokes","text":"stokes(U::UnitSystem) = diffusivity(𝟏,U,Gauss)\ndiffusivity : [L²T⁻¹], [L²T⁻¹], [L²T⁻¹], [L²T⁻¹], [L²T⁻¹]\n\nMetric unit of diffusivity (m²⋅s⁻¹ or ft²⋅s⁻¹).\n\njulia> stokes(Metric) # m²⋅s⁻¹\n2⁻⁴5⁻⁴ = 0.0001 [m²s⁻¹] Metric\n\njulia> stokes(CGS) # cm²⋅s⁻¹\n𝟏 = 1.0 [St] Gauss\n\njulia> stokes(English) # ft²⋅s⁻¹\nft⁻²2⁻⁴5⁻⁴ = 0.0010763910416709721 [ft²s⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.rayl","page":"Standard Units","title":"MeasureSystems.rayl","text":"rayl(U::UnitSystem) = specificimpedance(𝟏,U,Metric)\nspecificimpedance : [FL⁻³T], [FL⁻³T], [ML⁻²T⁻¹], [ML⁻²T⁻¹], [ML⁻²T⁻¹]\n\nMetric unit of specificimpedance (kg⋅m⁻²⋅s⁻¹ or lb⋅s⋅ft⁻³).\n\njulia> rayl(Metric) # kg⋅m⁻²⋅s⁻¹\n𝟏 = 1.0 [kg⋅m⁻²s⁻¹] Metric\n\njulia> rayl(CGS) # g⋅cm⁻²⋅s⁻¹\n2⁻¹5⁻¹ = 0.1 [g⋅cm⁻²s⁻¹] Gauss\n\njulia> rayl(English) # lb⋅s⋅ft⁻³\ng₀⁻¹ft³lb⁻¹ = 0.00636588035426416 [lbf⋅ft⁻³s] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.mpge","page":"Standard Units","title":"MeasureSystems.mpge","text":"mpge(U::UnitSystem) = mile(U)/gasgallon(U)\nnonstandard : [F⁻¹], [F⁻¹], [M⁻¹L⁻¹T²], [M⁻¹L⁻¹T²], [M⁻¹L⁻¹T²]\n\nEquivalent mile per gasgallon reference unit of length per energy (N⁻¹ or lb⁻¹).\n\njulia> mpge(Metric) # N⁻¹\nft⋅lb⁻¹Ωᵢₜ⋅Vᵢₜ⁻²2⁻⁴5⁻⁷11⋅19⁻¹43 = 1.3380584481180184e-5 [N⁻¹] Metric\n\njulia> mpge(CGS) # dyn⁻¹\nft⋅lb⁻¹Ωᵢₜ⋅Vᵢₜ⁻²2⁻⁹5⁻¹²11⋅19⁻¹43 = 1.3380584481180183e-10 [dyn⁻¹] Gauss\n\njulia> mpge(English) # lb⁻¹\ng₀⋅ft⋅Ωᵢₜ⋅Vᵢₜ⁻²2⁻⁴5⁻⁷11⋅19⁻¹43 = 5.95198051140049e-5 [lbf⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.langley","page":"Standard Units","title":"MeasureSystems.langley","text":"langley(U::UnitSystem) = calorie(U)/(centi*meter(U))^2\nfluence : [FL⁻¹], [FL⁻¹], [MT⁻²], [MT⁻²], [MT⁻²]\n\nSolar radiation unit (kg⋅s⁻² or lb⋅ft⁻¹).\n\njulia> langley(Metric) # kg⋅s⁻²\nΩᵢₜ⁻¹Vᵢₜ²2⁶3²5⁵43⁻¹ = 41867.37323211056 [N⋅m⁻¹] Metric\n\njulia> langley(CGS) # g⋅s⁻²\nΩᵢₜ⁻¹Vᵢₜ²2⁹3²5⁸43⁻¹ = 4.186737323211056e7 [dyn⋅cm⁻¹] Gauss\n\njulia> langley(English) # lb⋅ft⁻¹\ng₀⁻¹ft⋅lb⁻¹Ωᵢₜ⁻¹Vᵢₜ²2⁶3²5⁵43⁻¹ = 2868.8263456495906 [lbf⋅ft⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.jansky","page":"Standard Units","title":"MeasureSystems.jansky","text":"jansky(U::UnitSystem) = fluence(deci^-26,U,Metric)\nfluence : [FL⁻¹], [FL⁻¹], [MT⁻²], [MT⁻²], [MT⁻²]\n\nReference unit of spectral irradiance (kg⋅s⁻² or lb⋅ft⁻¹).\n\njulia> jansky(Metric) # kg⋅s⁻²\n2⁻²⁶5⁻²⁶ = 1.0e-26 [N⋅m⁻¹] Metric\n\njulia> jansky(CGS) # g⋅s⁻²\n2⁻²³5⁻²³ = 1.0e-23 [dyn⋅cm⁻¹] Gauss\n\njulia> jansky(English) # lb⋅ft⁻¹\ng₀⁻¹ft⋅lb⁻¹2⁻²⁶5⁻²⁶ = 6.852176585679177e-28 [lbf⋅ft⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.solarflux","page":"Standard Units","title":"MeasureSystems.solarflux","text":"solarflux(U::UnitSystem) = hecto^2*jansky(U)\nfluence : [FL⁻¹], [FL⁻¹], [MT⁻²], [MT⁻²], [MT⁻²]\n\nReference unit of spectral irradiance (kg⋅s⁻² or lb⋅ft⁻¹).\n\njulia> solarflux(Metric) # kg⋅s⁻²\n2⁻²²5⁻²² = 1.0e-22 [N⋅m⁻¹] Metric\n\njulia> solarflux(CGS) # g⋅s⁻²\n2⁻¹⁹5⁻¹⁹ = 1.0e-19 [dyn⋅cm⁻¹] Gauss\n\njulia> solarflux(English) # lb⋅ft⁻¹\ng₀⁻¹ft⋅lb⁻¹2⁻²²5⁻²² = 6.852176585679177e-24 [lbf⋅ft⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.curie","page":"Standard Units","title":"MeasureSystems.curie","text":"curie(U::UnitSystem) = frequency(𝟏,U,Metric)\nfrequency : [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹]\n\nReference unit of radioactivity (Bq or s⁻¹).\n\njulia> curie(Metric) # Bq\n2⁹5⁹⋅37 = 3.7e10 [Hz] Metric\n\njulia> curie(IAU) # D⁻¹\n2¹⁶3³5¹¹⋅37 = 3.1968e15 [D⁻¹] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.sievert","page":"Standard Units","title":"MeasureSystems.sievert","text":"sievert(U::UnitSystem) = energy(𝟏,U,Metric)/mass(U,Metric)\nspecificenergy : [FM⁻¹L], [L²T⁻²], [L²T⁻²], [L²T⁻²], [L²T⁻²]\n\nMetric unit of radioactivity (Sv or m²⋅s⁻²).\n\njulia> sievert(Metric) # Sv\n𝟏 = 1.0 [J⋅kg⁻¹] Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.roentgen","page":"Standard Units","title":"MeasureSystems.roentgen","text":"roentgen(U::UnitSystem) = chargedensity(𝟏,U,ESU)/density(Constant(1.293),U,Metric)\nexposure : [M⁻¹Q], [F⁻¹LT⁻²Q], [M⁻¹Q], [M⁻¹ᐟ²L¹ᐟ²T⁻¹], [M⁻¹ᐟ²L³ᐟ²T⁻²]\n\nLegacy unit of ionisation exposure (R or C⋅kg⁻¹).\n\njulia> roentgen(Metric) # R\n𝘤⁻¹2⁵5⁵/1.293 = 0.0002579768717696458 [kg⁻¹C] Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Units-Index-1","page":"Standard Units","title":"Units Index","text":"","category":"section"},{"location":"units.html#","page":"Standard Units","title":"Standard Units","text":"Pages = [\"units.md\",\"unitsystems.md\"]","category":"page"},{"location":"constants.html#Physics-Constants-1","page":"Physics Constants","title":"Physics Constants","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Pages = [\"unitsystems.md\"]\nDepth = 1","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Pages = [\"constants.md\"]","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Pages = [\"convert.md\",\"units.md\"]\nDepth = 1","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"The following are fundamental constants of physics:  (Image: DOI)","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"alpha = fraclambda e^24pivarepsilon_0hbar c = \nfraclambda cmu_0 (ealpha_L)^24pihbar = \nfrace^2k_ehbar c = \nfraclambda e^22mu_0ch = \nfraclambda cmu_0alpha_L^22R_K = \nfrace^2Z_02h","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"There exists a deep relationship between the fundamental constants, which also makes them very suitable as a basis for UnitSystem dimensional analysis. All of the formulas on this page are part of the Test suite to guarantee their universal correctness.","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"mu_eu = fracm_em_u qquad\nmu_pu = fracm_pm_u qquad\nmu_pe = fracm_pm_e qquad\nalpha_textinv = frac1alpha qquad\nalpha_G = left(fracm_em_Pright)^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Universe","category":"page"},{"location":"constants.html#MeasureSystems.Universe","page":"Physics Constants","title":"MeasureSystems.Universe","text":"μₑᵤ, μₚᵤ, μₚₑ, αinv, αG, ΩΛ\n\nPhysical measured dimensionless Coupling values with uncertainty are the electron to proton mass ratio μₑᵤ, proton to atomic mass ratio μₚᵤ, proton to electron mass ratio μₚₑ, inverted fine structure constant αinv, and the gravitaional coupling constant αG.\n\njulia> μₑᵤ # electronunit(Universe)\nμₑᵤ = 0.000548579909065 ± 1.6e-14\n\njulia> μₚᵤ # protonunit(Universe)\nμₚᵤ = 1.007276466621 ± 5.3e-11\n\njulia> μₚₑ # protonelectron(Universe)\nμₑᵤ⁻¹μₚᵤ = 1836.15267343 ± 1.1e-7\n\njulia> αinv # 1/finestructure(Universe)\nα⁻¹ = 137.035999084 ± 2.1e-8\n\njulia> αG # coupling(Universe)\n𝘩²𝘤⁻²R∞²α⁻⁴mP⁻²2² = 1.75181e-45 ± 3.9e-50\n\njulia> ΩΛ # darkenergydensity(Universe)\nΩΛ = 0.6889 ± 0.0056\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Relativistic-Constants-1","page":"Physics Constants","title":"Relativistic Constants","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"c = frac1alpha_Lsqrtmu_0varepsilon_0 = frac1alphasqrtE_hfracg_0m_e = fracg_0hbaralpham_e r_e  = frace^2k_ehbaralpha = fracm_e^2Ghbaralpha_G","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.lightspeed","category":"page"},{"location":"constants.html#MeasureSystems.lightspeed","page":"Physics Constants","title":"MeasureSystems.lightspeed","text":"lightspeed(U::UnitSystem) = 𝟏/sqrt(vacuumpermeability(U)*vacuumpermittivity(U))/lorentz(U)\nspeed : [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹]\n\nSpeed of light in a vacuum 𝘤 for massless particles (m⋅s⁻¹ or ft⋅s⁻¹).\n\njulia> lightspeed(Metric) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] Metric\n\njulia> lightspeed(English) # ft⋅s⁻¹\n𝘤⋅ft⁻¹ = 9.835710564304461e8 [ft⋅s⁻¹] English\n\njulia> lightspeed(IAU) # au⋅D⁻¹\n𝘤⋅au⁻¹2⁷3³5² = 173.1446326742 ± 3.5e-9 [au⋅D⁻¹] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"h = 2pihbar = frac2ealpha_LK_J = frac8alphalambda cmu_0K_J^2 = frac4alpha_L^2K_J^2R_K","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.planck","category":"page"},{"location":"constants.html#MeasureSystems.planck","page":"Physics Constants","title":"MeasureSystems.planck","text":"planck(U::UnitSystem) = turn(x)*planckreduced(x)\naction : [FLT], [FLT], [ML²T⁻¹], [ML²T⁻¹], [ML²T⁻¹]\n\nPlanck constant 𝘩 is energy per electromagnetic frequency (J⋅s or ft⋅lb⋅s).\n\njulia> planck(SI2019) # J⋅s\n𝘩 = 6.62607015e-34 [J⋅s] SI2019\n\njulia> planck(SI2019)*lightspeed(SI2019) # J⋅m\n𝘩⋅𝘤 = 1.9864458571489286e-25 [J⋅m] SI2019\n\njulia> planck(CODATA) # J⋅s\nRK⁻¹KJ⁻²2² = 6.626070039e-34 ± 8.2e-42 [J⋅s] CODATA\n\njulia> planck(Conventional) # J⋅s\nRK90⁻¹KJ90⁻²2² = 6.626068854361325e-34 [J⋅s] Conventional\n\njulia> planck(SI2019)/elementarycharge(SI2019) # eV⋅s\n𝘩⋅𝘦⁻¹ = 4.135667696923859e-15 [Wb] SI2019\n\njulia> planck(SI2019)*lightspeed(SI2019)/elementarycharge(SI2019) # eV⋅m\n𝘩⋅𝘤⋅𝘦⁻¹ = 1.2398419843320026e-6 [V⋅m] SI2019\n\njulia> planck(British) # ft⋅lb⋅s\n𝘩⋅g₀⁻¹ft⁻¹lb⁻¹ = 4.887138541095932e-34 [lb⋅ft⋅s] British\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"hbar = frach2pi = fracealpha_Lpi K_J = frac4alphapilambda cmu_0K_J^2 = frac2alpha_Lpi K_J^2R_K","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.planckreduced","category":"page"},{"location":"constants.html#MeasureSystems.planckreduced","page":"Physics Constants","title":"MeasureSystems.planckreduced","text":"planckreduced(U::UnitSystem) = planck(x)/turn(x)\nnonstandard : [FLTA⁻¹], [FLT], [ML²T⁻¹], [ML²T⁻¹], [ML²T⁻¹]\n\nReduced Planck constant ħ is a Planck per radian (J⋅s⋅rad⁻¹ or ft⋅lb⋅s⋅rad⁻¹).\n\njulia> planckreduced(SI2019) # J⋅s⋅rad⁻¹\n𝘩⋅τ⁻¹ = 1.0545718176461565e-34 [J⋅s] SI2019\n\njulia> planckreduced(SI2019)*lightspeed(SI2019) # J⋅m⋅rad⁻¹\n𝘩⋅𝘤⋅τ⁻¹ = 3.1615267734966903e-26 [J⋅m] SI2019\n\njulia> planckreduced(CODATA) # J⋅s⋅rad⁻¹\nRK⁻¹KJ⁻²τ⁻¹2² = 1.0545718e-34 ± 1.3e-42 [J⋅s] CODATA\n\njulia> planckreduced(Conventional) # J⋅s⋅rad⁻¹\nRK90⁻¹KJ90⁻²τ⁻¹2² = 1.054571611438857e-34 [J⋅s] Conventional\n\njulia> planckreduced(SI2019)/elementarycharge(SI2019) # eV⋅s⋅rad⁻¹\n𝘩⋅𝘦⁻¹τ⁻¹ = 6.582119569509067e-16 [Wb] SI2019\n\njulia> planckreduced(SI2019)*lightspeed(SI2019)/elementarycharge(SI2019) # eV⋅m⋅rad⁻¹\n𝘩⋅𝘤⋅𝘦⁻¹τ⁻¹ = 1.973269804593025e-7 [V⋅m] SI2019\n\njulia> planckreduced(British) # ft⋅lb⋅s⋅rad⁻¹\n𝘩⋅g₀⁻¹ft⁻¹lb⁻¹τ⁻¹ = 7.778122563903315e-35 [lb⋅ft⋅s] British\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"m_P = sqrtfrachbar cG = fracm_esqrtalpha_G = frac2R_infty hg_0calpha^2sqrtalpha_G","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"planckmass","category":"page"},{"location":"constants.html#MeasureSystems.planckmass","page":"Physics Constants","title":"MeasureSystems.planckmass","text":"planckmass(U::UnitSystem) = electronmass(U)/sqrt(coupling(U))\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nPlanck mass factor mP from the gravitational coupling constant αG (kg or slugs).\n\njuila> planckmass(Metric)*lightspeed(Metric)^2/elementarycharge(Metric) # eV⋅𝘤⁻²\n𝘩⁻¹ᐟ²𝘤⁵ᐟ²α⁻¹ᐟ²mP⋅τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 1.22089e28 ± 1.3e23 [V] Metric\n\njuila> planckmass(Metric) # kg\nmP = 2.176434e-8 ± 2.4e-13 [kg] Metric\n\njuila> planckmass(Metric)/dalton(Metric) # Da\n𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅mP⋅2⁻¹ = 1.310679e19 ± 1.4e14 [𝟙] Metric\n\njuila> planckmass(Metric)*lightspeed(Metric)^2/elementarycharge(Metric)/sqrt(𝟐^2*τ) # eV⋅𝘤⁻²\n𝘩⁻¹ᐟ²𝘤⁵ᐟ²α⁻¹ᐟ²mP⋅2⁻⁹ᐟ²5⁻⁷ᐟ² = 2.435323e27 ± 2.7e22 [V] Metric\n\njulia> planckmass(PlanckGauss) # mP\n𝟏 = 1.0 [mP] PlanckGauss\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"k = fracsqrthbar cm_P = fracsqrthbar calpha_Gm_e = fracalpha^22g_0R_inftysqrtfracc^3alpha_G2pi h = c^2sqrtfrackappa8pi","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"gaussgravitation","category":"page"},{"location":"constants.html#MeasureSystems.gaussgravitation","page":"Physics Constants","title":"MeasureSystems.gaussgravitation","text":"gaussgravitation(U::UnitSystem) = sqrt(gravitation(U)*solarmass(U)/astronomicalunit(U)^3)\nangularfrequency : [T⁻¹A], [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹]\n\nGaussian  gravitational constant k of Newton's laws (Hz or rad⋅D⁻¹).\n\njulia> gaussgravitation(MetricEngineering)\nkG⋅τ⋅2⁻¹⁴3⁻⁷5⁻⁵ = 1.9909836764714657e-7 [s⁻¹rad] MetricEngineering\n\njulia> gaussgravitation(MetricGradian)\nkG⋅2⁻¹⁰3⁻⁷5⁻³ = 1.2674995749028348e-5 [s⁻¹gon] MetricGradian\n\njulia> gaussgravitation(MetricDegree)\nkG⋅2⁻¹¹3⁻⁵5⁻⁴ = 1.1407496174125516e-5 [s⁻¹deg] MetricDegree\n\njulia> gaussgravitation(MetricArcminute)\nkG⋅2⁻⁹3⁻⁴5⁻³ = 0.0006844497704475308 [s⁻¹amin] MetricArcminute\n\njulia> gaussgravitation(MetricArcsecond)\nkG⋅2⁻⁷3⁻³5⁻² = 0.04106698622685185 [s⁻¹asec] MetricArcsecond\n\njuila> gaussgravitation(MPH)\nkG⋅τ⋅2⁻¹⁰3⁻⁵5⁻³ = 0.0007167541235297278 [h⁻¹] MPH\n\njulia> gaussgravitation(IAU)\nkG⋅τ⋅2⁻⁷3⁻⁴5⁻³ = 0.017202098964713464 [D⁻¹] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"G = k^2 = frachbar cm_P^2 = frachbar calpha_Gm_e^2 = fracc^3alpha^4alpha_G8pi g_0^2 R_infty^2 h = frackappa c^48pi","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.gravitation","category":"page"},{"location":"constants.html#MeasureSystems.gravitation","page":"Physics Constants","title":"MeasureSystems.gravitation","text":"gravitation(U::UnitSystem) = lightspeed(U)*planckreduced(U)/planckmass(U)^2\nnonstandard : [FM⁻²L²], [F⁻¹L⁴T⁻⁴], [M⁻¹L³T⁻²], [M⁻¹L³T⁻²], [M⁻¹L³T⁻²]\n\nUniversal gravitational constant G of Newton's law (m³⋅kg⁻¹⋅s⁻² or ft³⋅slug⁻¹⋅s⁻²).\n\njuila> gravitation(Metric) # m³⋅kg⁻¹⋅s⁻²\n𝘩⋅𝘤⋅mP⁻²τ⁻¹ = 6.6743e-11 ± 1.5e-15 [kg⁻¹m³s⁻²] Metric\n\njulia> gravitation(English) # ft³⋅lbm⁻¹⋅s⁻²\n𝘩⋅𝘤⋅g₀⁻¹ft⁻²lb⋅mP⁻²τ⁻¹ = 3.322929e-11 ± 7.3e-16 [lbf⋅lbm⁻²ft²] English\n\njulia> gravitation(PlanckGauss)\n𝟏 = 1.0 [mP⁻²] PlanckGauss\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"kappa = frac8pi Gc^4 = frac8pihbarc^3m_P^2 = frac8pihbaralpha_Gc^3m_e^2 = fracalpha^4alpha_Gg_0^2R_infty^2 h c","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"einstein","category":"page"},{"location":"constants.html#MeasureSystems.einstein","page":"Physics Constants","title":"MeasureSystems.einstein","text":"einstein(U::UnitSystem) = 𝟐*spat(U)*gravitation(U)/lightspeed(U)^4\nnonstandard : [FM⁻²L⁻²T⁴A²], [F⁻¹], [M⁻¹L⁻¹T²], [M⁻¹L⁻¹T²], [M⁻¹L⁻¹T²]\n\nEinstein's gravitational constant from the Einstein field equations (s⋅²⋅m⁻¹⋅kg⁻¹).\n\njulia> einstein(Metric) # s²⋅m⁻¹⋅kg⁻¹\n𝘩⋅𝘤⁻³mP⁻²2² = 2.076648e-43 ± 4.5999999999999995e-48 [N⁻¹] Metric\n\njulia> einstein(IAU) # day²⋅au⁻¹⋅M☉⁻¹\n𝘤⁻⁴au⁴kG²τ³2⁻⁴⁰3⁻²⁰5⁻¹⁴ = 8.274973467750001e-12 ± 6.6e-22 [M☉⁻¹au⁻¹D²] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Atomic-and-Nuclear-Constants-1","page":"Physics Constants","title":"Atomic & Nuclear Constants","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"m_u = fracM_uN_A = fracm_emu_eu = fracm_pmu_pu = frac2R_infty hg_0mu_eucalpha^2 = fracm_Pmu_eusqrtalpha_G","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"dalton","category":"page"},{"location":"constants.html#MeasureSystems.dalton","page":"Physics Constants","title":"MeasureSystems.dalton","text":"dalton(U::UnitSystem) = molarmass(U)/avogadro(U)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nAtomic mass unit Da of 1/12 of the C₁₂ carbon-12 atom's mass  (kg or slugs).\n\njulia> dalton(Metric) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2 = 1.6605390666e-27 ± 5.1e-37 [kg] Metric\n\njulia> dalton(Hartree) # mₑ\nμₑᵤ⁻¹ = 1822.888486209 ± 5.3e-8 [𝟙] Hartree\n\njulia> dalton(QCD) # mₚ\nμₚᵤ⁻¹ = 0.992776097862 ± 5.2e-11 [mₚ] QCD\n\njulia> dalton(Metric)*lightspeed(Metric)^2 # J\n𝘩⋅𝘤⋅R∞⋅α⁻²μₑᵤ⁻¹2 = 1.4924180856e-10 ± 4.6e-20 [J] Metric\n\njulia> dalton(SI2019)*lightspeed(SI2019)^2/elementarycharge(SI2019) # eV⋅𝘤⁻²\n𝘩⋅𝘤⋅𝘦⁻¹R∞⋅α⁻²μₑᵤ⁻¹2 = 9.3149410242e8 ± 0.29 [V] SI2019\n\njulia> dalton(British) # lb\n𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹g₀⁻¹ft⋅lb⁻¹2 = 1.13783069118e-28 ± 3.4999999999999996e-38 [slug] British\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"m_p = mu_pu m_u = mu_pufracM_uN_A = mu_pem_e = mu_pefrac2R_infty hg_0calpha^2 = m_Pmu_pesqrtalpha_G","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"protonmass","category":"page"},{"location":"constants.html#MeasureSystems.protonmass","page":"Physics Constants","title":"MeasureSystems.protonmass","text":"protonmass(U::UnitSystem) = protonunit(U)*dalton(U)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nProton mass mₚ of subatomic particle with +𝘦 elementary charge  (kg or mass).\n\njulia> protonmass(Metric) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹μₚᵤ⋅2 = 1.67262192369e-27 ± 5.2000000000000004e-37 [kg] Metric\n\njulia> protonmass(SI2019)*lightspeed(SI2019)^2/elementarycharge(SI2019) # eV⋅𝘤⁻²\n𝘩⋅𝘤⋅𝘦⁻¹R∞⋅α⁻²μₑᵤ⁻¹μₚᵤ⋅2 = 9.3827208816e8 ± 0.29 [V] SI2019\n\njulia> protonmass(Metric)/dalton(Metric) # Da\nμₚᵤ = 1.007276466621 ± 5.3e-11 [𝟙] Metric\n\njulia> protonmass(Hartree) # mₑ\nμₑᵤ⁻¹μₚᵤ = 1836.15267343 ± 1.1e-7 [𝟙] Hartree\n\njulia> protonmass(QCD) # mₚ\n𝟏 = 1.0 [mₚ] QCD\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"m_e = mu_eum_u = mu_eufracM_uN_A = fracm_pmu_pe = frac2R_infty h g_0calpha^2 = m_Psqrtalpha_G","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.electronmass","category":"page"},{"location":"constants.html#MeasureSystems.electronmass","page":"Physics Constants","title":"MeasureSystems.electronmass","text":"electronmass(U::UnitSystem) = protonmass(U)/protonelectron(U) # αinv^2*R∞*2𝘩/𝘤\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nElectron rest mass mₑ of subatomic particle with -𝘦 elementary charge  (kg or slugs).\n\njulia> electronmass(Metric) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2 = 9.1093837016e-31 ± 2.8e-40 [kg] Metric\n\njulia> electronmass(CODATA) # kg\n𝘤⁻¹R∞⋅α⁻²RK⁻¹KJ⁻²2³ = 9.10938355e-31 ± 1.0999999999999999e-38 [kg] CODATA\n\njulia> electronmass(Conventional) # kg\n𝘤⁻¹R∞⋅α⁻²RK90⁻¹KJ90⁻²2³ = 9.1093819203e-31 ± 2.8e-40 [kg] Conventional\n\njulia> electronmass(International) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²Ωᵢₜ⋅Vᵢₜ⁻²2 = 9.1078806534e-31 ± 2.8e-40 [kg] International\n\njulia> electronmass(Metric)/dalton(Metric) # Da\nμₑᵤ = 0.000548579909065 ± 1.6e-14 [𝟙] Metric\n\njulia> electronmass(QCD) # mₚ\nμₑᵤ⋅μₚᵤ⁻¹ = 0.000544617021487 ± 3.3e-14 [mₚ] QCD\n\njulia> electronmass(Hartree) # mₑ\n𝟏 = 1.0 [𝟙] Hartree\n\njulia> electronmass(Metric)*lightspeed(Metric)^2 # J\n𝘩⋅𝘤⋅R∞⋅α⁻²2 = 8.1871057769e-14 ± 2.5e-23 [J] Metric\n\njulia> electronmass(SI2019)*lightspeed(SI2019)^2/elementarycharge(SI2019) # eV⋅𝘤⁻²\n𝘩⋅𝘤⋅𝘦⁻¹R∞⋅α⁻²2 = 510998.95 ± 0.00016 [V] SI2019\n\njulia> electronmass(English) # lb\n𝘩⋅𝘤⁻¹R∞⋅α⁻²lb⁻¹2 = 2.00827533796e-30 ± 6.2e-40 [lbm] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"E_h = fracm_eg_0(calpha)^2 = frachbar calphaa_0 = fracg_0hbar^2m_ea_0^2 = 2R_infty hc = fracm_Pg_0sqrtalpha_G(calpha)^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"hartree","category":"page"},{"location":"constants.html#MeasureSystems.hartree","page":"Physics Constants","title":"MeasureSystems.hartree","text":"hartree(U::UnitSystem) = electronmass(U)/gravity(U)*(lightspeed(U)*finestructure(U))^2\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nHartree electric potential energy Eₕ of the hydrogen atom at ground state is 2R∞*𝘩*𝘤 (J).\n\njulia> hartree(SI2019)/elementarycharge(SI2019) # eV\n𝘩⋅𝘤⋅𝘦⁻¹R∞⋅2 = 27.211386245989 ± 5.2e-11 [V] SI2019\n\njulia> hartree(Metric) # J\n𝘩⋅𝘤⋅R∞⋅2 = 4.3597447222072e-18 ± 8.3e-30 [J] Metric\n\njulia> hartree(CGS) # erg\n𝘩⋅𝘤⋅R∞⋅2⁸5⁷ = 4.3597447222072e-11 ± 8.3e-23 [erg] Gauss\n\njulia> hartree(Metric)*avogadro(Metric)/kilo # kJ⋅mol⁻¹\n𝘤²α²μₑᵤ⋅2⁻⁶5⁻⁶ = 2625.49964038 ± 8.1e-7 [J⋅mol⁻¹] Metric\n\njulia> hartree(Metric)*avogadro(Metric)/kilocalorie(Metric) # kcal⋅mol⁻¹\n𝘤²α²μₑᵤ⋅Ωᵢₜ⋅Vᵢₜ⁻²2⁻⁸3⁻²5⁻⁷43 = 627.09920344 ± 1.9e-7 [mol⁻¹] Metric\n\njulia> 𝟐*centi*rydberg(Metric) # Eₕ/𝘩/𝘤/100 cm⁻¹\nR∞⋅2⁻¹5⁻² = 219474.6313632 ± 4.2e-7 [m⁻¹] Metric\n\njulia> hartree(Metric)/planck(Metric) # Hz\n𝘤⋅R∞⋅2 = 6.579683920502e15 ± 13000.0 [Hz] Metric\n\njulia> hartree(Metric)/boltzmann(Metric) # K\nkB⁻¹NA⁻¹𝘤²α²μₑᵤ⋅2⁻³5⁻³ = 315775.024913 ± 9.7e-5 [K] Metric\n\nIn a Gaussian unit system where 4π*ε₀ == 1 the Hartree energy is 𝘦^2/a₀.\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"R_infty = fracE_h2hc = fracm_e calpha^22hg_0 = fracalpha4pi a_0 = fracm_e r_e c2ha_0g_0 = fracalpha^2m_ec4pihbar g_0  = fracm_Pcalpha^2sqrtalpha_G2hg_0","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"rydberg","category":"page"},{"location":"constants.html#MeasureSystems.rydberg","page":"Physics Constants","title":"MeasureSystems.rydberg","text":"rydberg(U::UnitSystem) = hartree(U)/2planck(U)/lightspeed(U) # Eₕ/2𝘩/𝘤\nwavenumber : [L⁻¹], [L⁻¹], [L⁻¹], [L⁻¹], [L⁻¹]\n\nRydberg constant R∞ is lowest energy photon capable of ionizing atom at ground state (m⁻¹).\n\njulia> rydberg(Metric) # m⁻¹\nR∞ = 1.097373156816e7 ± 2.1e-5 [m⁻¹] Metric\n\nThe Rydberg constant for hydrogen RH is R∞*mₚ/(mₑ+mₚ) (m⁻¹).\n\njulia> rydberg(Metric)*protonmass(Metric)/(electronmass(Metric)+protonmass(Metric)) # m⁻¹\n1.09677583403e7 ± 0.0048 [m⁻¹] Metric\n\nRydberg unit of photon energy Ry is 𝘩*𝘤*R∞ or Eₕ/2 (J).\n\njulia> hartree(Metric)/2 # J\n𝘩⋅𝘤⋅R∞ = 2.1798723611036e-18 ± 4.2e-30 [J] Metric\n\njulia> hartree(SI2019)/𝟐/elementarycharge(SI2019) # eV\n𝘩⋅𝘤⋅𝘦⁻¹R∞ = 13.605693122994 ± 2.6e-11 [V] SI2019\n\nRydberg photon frequency 𝘤*R∞ or Eₕ/2𝘩 (Hz).\n\njulia> lightspeed(Metric)*rydberg(Metric) # Hz\n𝘤⋅R∞ = 3.2898419602509e15 ± 6300.0 [Hz] Metric\n\nRydberg wavelength 1/R∞ (m).\n\njulia> 𝟏/rydberg(Metric) # m\nR∞⁻¹ = 9.112670505824e-8 ± 1.7e-19 [m] Metric\n\njulia> 𝟏/rydberg(Metric)/τ # m⋅rad⁻¹\nR∞⁻¹τ⁻¹ = 1.4503265557696e-8 ± 2.8e-20 [m] Metric\n\nPrecision measurements of the Rydberg constants are within a relative standard uncertainty of under 2 parts in 10¹², and is chosen to constrain values of other physical constants.\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"a_0 = fracg_0hbarm_ecalpha = fracg_0hbar^2k_e m_ee^2 = fracr_ealpha^2 = fracalpha4pi R_infty","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"bohr","category":"page"},{"location":"constants.html#MeasureSystems.bohr","page":"Physics Constants","title":"MeasureSystems.bohr","text":"bohr(U::UnitSystem) = planckreduced(U)*gravity(U)/electronmass(U)/lightspeed(U)/finestructure(U)\nnonstandard : [LA⁻¹], [L], [L], [L], [L]\n\nBohr radius of the hydrogen atom in its ground state a₀ (m).\n\njulia> bohr(Metric) # m\nR∞⁻¹α⋅τ⁻¹2⁻¹ = 5.29177210902e-11 ± 8.1e-21 [m] Metric\n\njulia> bohr(IPS) # in\nR∞⁻¹α⋅ft⁻¹τ⁻¹2⋅3 = 2.08337484607e-9 ± 3.2e-19 [in] IPS\n\njulia> bohr(Hartree) # a₀\n𝟏 = 1.0 [a₀] Hartree\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"r_e = g_0frachbaralpham_ec = alpha^2a_0 = g_0frace^2 k_em_ec^2 = frac2hR_infty g_0a_0m_ec = fracalpha^34pi R_infty","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"electronradius","category":"page"},{"location":"constants.html#MeasureSystems.electronradius","page":"Physics Constants","title":"MeasureSystems.electronradius","text":"electronradius(U::UnitSystem) = finestructure(U)*planckreduced(U)*gravity(U)/electronmass(U)/lightspeed(U)\nnonstandard : [LA⁻¹], [L], [L], [L], [L]\n\nClassical electron radius or Lorentz radius or Thomson scattering length (m).\n\njulia> electronradius(Metric) # m\nR∞⁻¹α³τ⁻¹2⁻¹ = 2.8179403261999996e-15 ± 1.2999999999999998e-24 [m] Metric\n\njulia> electronradius(CODATA) # m\nR∞⁻¹α³τ⁻¹2⁻¹ = 2.8179403261999996e-15 ± 1.2999999999999998e-24 [m] CODATA\n\njulia> electronradius(Conventional) # m\nR∞⁻¹α³τ⁻¹2⁻¹ = 2.8179403261999996e-15 ± 1.2999999999999998e-24 [m] Conventional\n\njulia> electronradius(Hartree) # a₀\nα² = 5.325135452e-5 ± 1.6e-14 [a₀] Hartree\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Deltanu_textCs = Deltatildenu_textCsc = fracDeltaomega_textCs2pi  = fraccDeltalambda_textCs = fracDelta E_textCsh","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"hyperfine","category":"page"},{"location":"constants.html#MeasureSystems.hyperfine","page":"Physics Constants","title":"MeasureSystems.hyperfine","text":"hyperfine(U::UnitSystem) = frequency(ΔνCs = 9.19263177e9,U)\nfrequency : [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹]\n\nUnperturbed groundstate hyperfine transition frequency ΔνCs of caesium-133 atom (Hz).\n\njulia> hyperfine(Metric) # Hz\nΔνCs = 9.19263177e9 [Hz] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Thermodynamic-Constants-1","page":"Physics Constants","title":"Thermodynamic Constants","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"M_u = m_uN_A = N_Afracm_emu_eu = N_Afracm_pmu_pu = N_Afrac2R_infty hg_0mu_eucalpha^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.molarmass","category":"page"},{"location":"constants.html#MeasureSystems.molarmass","page":"Physics Constants","title":"MeasureSystems.molarmass","text":"molarmass(U::UnitSystem) = avogadro(U)*electronmass(U)/electronunit(U)\nmolarmass : [MN⁻¹], [FL⁻¹T²N⁻¹], [MN⁻¹], [MN⁻¹], [MN⁻¹]\n\nMolar mass constant Mᵤ is the ratio of the molarmass and relativemass of a chemical.\n\njulia> molarmass(CGS) # g⋅mol⁻¹\n𝟏 = 1.0 [g⋅mol⁻¹] Gauss\n\njulia> molarmass(Metric) # kg⋅mol⁻¹\n2⁻³5⁻³ = 0.001 [kg⋅mol⁻¹] Metric\n\njulia> molarmass(SI2019) # kg⋅mol⁻¹\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2 = 0.00099999999966 ± 3.1e-13 [kg⋅mol⁻¹] SI2019\n\njulia> molarmass(International) # kg⋅mol⁻¹\nΩᵢₜ⋅Vᵢₜ⁻²2⁻³5⁻³ = 0.0009998350000179567 [kg⋅mol⁻¹] International\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"N_A = fracR_uk_B = fracM_um_u = M_ufracmu_eum_e = M_ufracmu_eucalpha^22R_infty h g_0","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"avogadro","category":"page"},{"location":"constants.html#MeasureSystems.avogadro","page":"Physics Constants","title":"MeasureSystems.avogadro","text":"avogadro(U::UnitSystem) = molargas(x)/boltzmann(x) # Mᵤ/dalton(x)\nnonstandard : [N⁻¹], [N⁻¹], [N⁻¹], [N⁻¹], [N⁻¹]\n\nAvogadro NA is molarmass(x)/dalton(x) number of atoms in a 12 g sample of C₁₂.\n\njulia> avogadro(SI2019) # mol⁻¹\nNA = 6.02214076e23 [mol⁻¹] SI2019\n\njulia> avogadro(Metric) # mol⁻¹\n𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅2⁻⁴5⁻³ = 6.0221407621e23 ± 1.9e14 [mol⁻¹] Metric\n\njulia> avogadro(CODATA) # mol⁻¹\n𝘤⋅R∞⁻¹α²μₑᵤ⋅RK⋅KJ²2⁻⁶5⁻³ = 6.022140863e23 ± 7.5e15 [mol⁻¹] CODATA\n\njulia> avogadro(Conventional) # mol⁻¹\n𝘤⋅R∞⁻¹α²μₑᵤ⋅RK90⋅KJ90²2⁻⁶5⁻³ = 6.0221419396e23 ± 1.9e14 [mol⁻¹] Conventional\n\njulia> avogadro(English) # lb-mol⁻¹\n𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅lb⋅2⁻¹ = 2.73159710074e26 ± 8.4e16 [lb-mol⁻¹] English\n\njulia> avogadro(British) # slug-mol⁻¹\n𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅g₀⋅ft⁻¹lb⋅2⁻¹ = 8.7886537756e27 ± 2.7e18 [slug-mol⁻¹] British\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"k_B = fracR_uN_A = m_ufracR_uM_u = fracm_e R_umu_euM_u = frac2R_uR_infty h g_0M_u mu_eucalpha^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.boltzmann","category":"page"},{"location":"constants.html#MeasureSystems.boltzmann","page":"Physics Constants","title":"MeasureSystems.boltzmann","text":"boltzmann(U::UnitSystem) = molargas(x)/avogadro(x)\nentropy : [FLΘ⁻¹], [FLΘ⁻¹], [ML²T⁻²Θ⁻¹], [ML²T⁻²Θ⁻¹], [ML²T⁻²Θ⁻¹]\n\nBoltzmann constant kB is the entropy amount of a unit number microstate permutation.\n\njulia> boltzmann(SI2019) # J⋅K⁻¹\nkB = 1.380649e-23 [J⋅K⁻¹] SI2019\n\njulia> boltzmann(Metric) # J⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³ = 1.3806489995299998e-23 ± 4.2999999999999996e-33 [J⋅K⁻¹] Metric\n\njulia> boltzmann(SI2019)/elementarycharge(SI2019) # eV⋅K⁻¹\nkB⋅𝘦⁻¹ = 8.617333262145179e-5 [V⋅K⁻¹] SI2019\n\njulia> boltzmann(SI2019)/planck(SI2019) # Hz⋅K⁻¹\nkB⋅𝘩⁻¹ = 2.0836619123327576e10 [Hz⋅K⁻¹] SI2019\n\njulia> boltzmann(CGS) # erg⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2¹¹5¹⁰ = 1.3806489995299999e-16 ± 4.3e-26 [erg⋅K⁻¹] Gauss\n\njulia> boltzmann(SI2019)/calorie(SI2019) # calᵢₜ⋅K⁻¹\nkB⋅Ωᵢₜ⋅Vᵢₜ⁻²2⁻²3⁻²5⁻¹43 = 3.2976728498006145e-24 [K⁻¹] SI2019\n\njulia> boltzmann(SI2019)*°R/calorie(SI2019) # calᵢₜ⋅°R⁻¹\nkB⋅Ωᵢₜ⋅Vᵢₜ⁻²2⁻²3⁻⁴43 = 1.832040472111452e-24 [K⁻¹] SI2019\n\njulia> boltzmann(Brtish) # ft⋅lb⋅°R⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹g₀⁻¹ft⁻¹lb⁻¹2⁴3⁻²5⁴ = 5.6573024638e-24 ± 1.7e-33 [lb⋅ft⋅°R⁻¹] British\n\njulia> boltzmann(SI2019)/planck(SI2019)/lightspeed(SI2019) # m⁻¹⋅K⁻¹\nkB⋅𝘩⁻¹𝘤⁻¹ = 69.50348004861274 [m⁻¹K⁻¹] SI2019\n\njulia> avogadro(SI2019)*boltzmann(SI2019)/calorie(SI2019) # calᵢₜ⋅mol⁻¹⋅K⁻¹\nkB⋅NA⋅Ωᵢₜ⋅Vᵢₜ⁻²2⁻²3⁻²5⁻¹43 = 1.9859050081929637 [K⁻¹mol⁻¹] SI2019\n\njulia> dB(boltzmann(SI2019)) # dB(W⋅K⁻¹⋅Hz⁻¹)\ndB(kB) = -228.5991671732176 [dB(kg⋅m²s⁻²K⁻¹)] SI2019\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"R_u = k_B N_A = k_BfracM_um_u = k_BM_ufracmu_eum_e = k_BM_ufracmu_eucalpha^22hR_infty g_0","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"molargas","category":"page"},{"location":"constants.html#MeasureSystems.molargas","page":"Physics Constants","title":"MeasureSystems.molargas","text":"molargas(U::UnitSystem) = boltzmann(x)*avogadro(x)\nmolarentropy : [FLΘ⁻¹N⁻¹], [FLΘ⁻¹N⁻¹], [ML²T⁻²Θ⁻¹N⁻¹], [ML²T⁻²Θ⁻¹N⁻¹], [ML²T⁻²Θ⁻¹N⁻¹]\n\nUniversal gas constant Rᵤ is factored into specific gasconstant(x)*molarmass(x) values.\n\njulia> molargas(SI2019) # J⋅K⁻¹⋅mol⁻¹\nkB⋅NA = 8.31446261815324 [J⋅K⁻¹mol⁻¹] SI2019\n\njulia> molargas(English)/𝟐^4/𝟑^2 # psi⋅ft³⋅°R⁻¹⋅lb-mol⁻¹\nkB⋅NA⋅g₀⁻¹ft⁻¹2⁻¹3⁻⁴5⁴ = 10.731577089016287 [lbf⋅ft⋅°R⁻¹lb-mol⁻¹] English\n\njulia> molargas(English)/atmosphere(English) # atm⋅ft³⋅R⁻¹⋅lb-mol⁻¹\nkB⋅NA⋅ft⁻³lb⋅atm⁻¹2³3⁻²5⁴ = 0.7302405072952731 [ft³°R⁻¹lb-mol⁻¹] English\n\njulia> molargas(English)/thermalunit(English) # BTU⋅°R⁻¹⋅lb-mol⁻¹\nkB⋅NA⋅Ωᵢₜ⋅Vᵢₜ⁻²2⁻²3⁻²5⁻¹43 = 1.9859050081929637 [°R⁻¹lb-mol⁻¹] English\n\njulia> molargas(Metric)/atmosphere(Metric) # atm⋅m³⋅K⁻¹⋅mol⁻¹\nkB⋅NA⋅atm⁻¹ = 8.205736608095969e-5 [m³K⁻¹mol⁻¹] Metric\n\njulia> molargas(Metric)/torr(Metric) # m³⋅torr⋅K⁻¹⋅mol⁻¹\nkB⋅NA⋅atm⁻¹2³5⋅19 = 0.062363598221529364 [m³K⁻¹mol⁻¹] Metric\n\njulia> molargas(English)/torr(English) # ft³⋅torr⋅°R⁻¹⋅lb-mol⁻¹\nkB⋅NA⋅ft⁻³lb⋅atm⁻¹2⁶3⁻²5⁵19 = 554.9827855444075 [ft³°R⁻¹lb-mol⁻¹] English\n\njulia> molargas(CGS) # erg⋅K⁻¹⋅mol⁻¹\nkB⋅NA⋅2⁷5⁷ = 8.31446261815324e7 [erg⋅K⁻¹mol⁻¹] Gauss\n\njulia> molargas(English) # ft⋅lb⋅°R⁻¹⋅lb-mol⁻¹\nkB⋅NA⋅g₀⁻¹ft⁻¹2³3⁻²5⁴ = 1545.3471008183453 [lbf⋅ft⋅°R⁻¹lb-mol⁻¹] English\n\njulia> molargas(British) # ft⋅lb⋅°R⁻¹⋅slug-mol⁻¹\nkB⋅NA⋅ft⁻²2³3⁻²5⁴ = 49720.07265826846 [lb⋅ft⋅°R⁻¹slug-mol⁻¹] British\n\njulia> molargas(SI1976) # J⋅K⁻¹⋅mol⁻¹ (US1976 Standard Atmosphere)\n8.31432 = 8.31432 [kg⋅m²s⁻²K⁻¹mol⁻¹] SI1976\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"fracp_0k_B T_0 = fracN_Ap_0R_uT_0 = fracmu_euM_up_0m_e R_u T_0 = fracM_u mu_eucalpha^2p_02R_uR_infty hg_0 T_0","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"loschmidt","category":"page"},{"location":"constants.html#MeasureSystems.loschmidt","page":"Physics Constants","title":"MeasureSystems.loschmidt","text":"loschmidt(U::UnitSystem) = atmosphere(U)/boltzmann(U)/temperature(T₀,SI2019,U)\nnumberdensity : [L⁻³], [L⁻³], [L⁻³], [L⁻³], [L⁻³]\n\nNumber of molecules (number density) of an ideal gas in a unit volume (m⁻³ or ft⁻³).\n\njulia> loschmidt(SI2019) # m⁻³\nkB⁻¹T₀⁻¹atm = 2.686780111798444e25 [m⁻³] SI2019\n\njulia> loschmidt(Metric,atm,T₀) # m⁻³\nkB⁻¹NA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅T₀⁻¹atm⋅2⁻⁴5⁻³ = 2.68678011272e25 ± 8.3e15 [m⁻³] Metric\n\njulia> loschmidt(Conventional,atm,T₀) # m⁻³\nkB⁻¹NA⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅T₀⁻¹atm⋅RK90⋅KJ90²2⁻⁶5⁻³ = 2.68678063809e25 ± 8.3e15 [m⁻³] Conventional\n\njulia> loschmidt(CODATA,atm,T₀) # m⁻³\n𝘤⋅R∞⁻¹α²μₑᵤ⋅T₀⁻¹atm⋅RK⋅KJ²Rᵤ2014⁻¹2⁻⁶5⁻³ = 2.6867811e25 ± 1.6e19 [m⁻³] CODATA\n\njulia> loschmidt(SI1976,atm,T₀) # m⁻³\n𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅T₀⁻¹atm⋅2⁻⁴5⁻³/8.31432 = 2.68682619991e25 ± 8.3e15 [m⁻³] SI1976\n\njulia> loschmidt(English) # ft⁻³\nkB⁻¹ft³T₀⁻¹atm = 7.608114025223316e23 [ft⁻³] English\n\njulia> loschmidt(IAU) # au⁻³\nkB⁻¹au³T₀⁻¹atm = 8.995148987920001e58 ± 5.4e48 [au⁻³] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"fracS_0R_u = logleft(frachbar^3p_0sqrtleft(fracm_u2pi g_0right)^3 left(k_BT_0right)^5right)+frac52 = logleft(fracm_u^4p_0left(frachbarsqrt2pi g_0right)^3sqrtfracR_uT_0M_u^5right)+frac52","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.sackurtetrode","category":"page"},{"location":"constants.html#MeasureSystems.sackurtetrode","page":"Physics Constants","title":"MeasureSystems.sackurtetrode","text":"sackurtetrode(U::UnitSystem,P=atm,T=𝟏,m=Da) = log(kB*T/P*sqrt(m*kB*T/τ/ħ^2)^3)+5/2\ndimensionless : [𝟙], [𝟙], [𝟙], [𝟙], [𝟙]\n\nIdeal gas entropy density for pressure P, temperature T, atomic mass m (dimensionless).\n\njulia> sackurtetrode(Metric)\nlog(kB⁵ᐟ²NA⁵ᐟ²𝘩⋅𝘤⁻⁴R∞⁴α⁻⁸μₑᵤ⁻⁴atm⁻¹τ³ᐟ²2²³ᐟ²5¹⁵ᐟ²⋅12.182493960703473) = -1.1648705244 ± 1.2e-9\n\njulia> sackurtetrode(SI2019)\nlog(kB⁵ᐟ²𝘩⁻³ᐟ²𝘤⁻³ᐟ²R∞³ᐟ²α⁻³μₑᵤ⁻³ᐟ²atm⁻¹τ³ᐟ²2³ᐟ²⋅12.182493960703473) = -1.16487052358 ± 4.6e-10\n\njulia> sackurtetrode(Conventional)\nlog(kB⁵ᐟ²NA⁵ᐟ²𝘤⁻⁴R∞⁴α⁻⁸μₑᵤ⁻⁴atm⁻¹RK90⁻¹KJ90⁻²τ³ᐟ²2²⁷ᐟ²5¹⁵ᐟ²⋅12.182493960703473) = -1.16487072 ± 1.2e-9\n\njulia> sackurtetrode(CODATA)\nlog(𝘤⁻⁴R∞⁴α⁻⁸μₑᵤ⁻⁴atm⁻¹RK⁻¹KJ⁻²Rᵤ2014⁵ᐟ²τ³ᐟ²2²⁷ᐟ²5¹⁵ᐟ²⋅12.182493960703473) = -1.1648714 ± 1.4e-6\n\njulia> sackurtetrode(SI2019,𝟏𝟎^5)\nlog(kB⁵ᐟ²𝘩⁻³ᐟ²𝘤⁻³ᐟ²R∞³ᐟ²α⁻³μₑᵤ⁻³ᐟ²τ³ᐟ²2⁻⁷ᐟ²5⁻⁵⋅12.182493960703473) = -1.15170753705 ± 4.6e-10\n\n\n\n\n\n","category":"function"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"frac180 R_uV_it^243 k_BN_AOmega_it = \nfrac180 k_BM_uV_it^243 R_um_uOmega_it = \nfrac90 k_BM_umu_eucalpha^2V_it^243 hg_0R_uR_inftyOmega_it","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"mechanicalheat","category":"page"},{"location":"constants.html#MeasureSystems.mechanicalheat","page":"Physics Constants","title":"MeasureSystems.mechanicalheat","text":"mechanicalheat(U::UnitSystem) = molargas(U)/molargas(Metric)*calorie(Metric)\nenergy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\n\nHeat to raise 1 mass unit of water by 1 temperature unit, or kB⋅NA⋅Ωᵢₜ⋅Vᵢₜ⁻²2⁻²3⁻²5⁻¹43 = 1.9859050081929637 mechanicalheat per molaramount per temperature units (J or ft⋅lb).\n\njulia> mechanicalheat(Metric) # J\nΩᵢₜ⁻¹Vᵢₜ²2²3²5⋅43⁻¹ = 4.186737323211057 [J] Metric\n\njulia> mechanicalheat(English) # ft⋅lb\ng₀⁻¹ft⁻¹Ωᵢₜ⁻¹Vᵢₜ²2⁵5⁵43⁻¹ = 778.1576129990752 [lbf⋅ft] English\n\njulia> mechanicalheat(British) # ft⋅lb\nft⁻²Ωᵢₜ⁻¹Vᵢₜ²2⁵5⁵43⁻¹ = 25036.480825188257 [lb⋅ft] British\n\n\n\n\n\n","category":"function"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"sigma = frac2pi^5 k_B^415h^3c^2 = fracpi^2 k_B^460hbar^3c^2 = frac32pi^5 h15c^6alpha^8 left(fracg_0R_uR_inftymu_euM_uright)^4","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"stefan","category":"page"},{"location":"constants.html#MeasureSystems.stefan","page":"Physics Constants","title":"MeasureSystems.stefan","text":"stefan(U::UnitSystem) = π^4/𝟐*spat(U)*boltzmann(U)^4/(15planck(U)^3*lightspeed(U)^2)\nnonstandard : [FL⁻¹T⁻¹Θ⁻⁴A²], [FL⁻¹T⁻¹Θ⁻⁴], [MT⁻³Θ⁻⁴], [MT⁻³Θ⁻⁴], [MT⁻³Θ⁻⁴]\n\nStefan-Boltzmann proportionality σ of black body radiation (W⋅m⁻²⋅K⁻⁴ or ?⋅ft⁻²⋅°R⁻⁴).\n\njulia> stefan(SI2019) # W⋅m⁻²⋅K⁻⁴\nkB⁴𝘩⁻³𝘤⁻²τ⁵2⁻⁴3⁻¹5⁻¹ = 5.670374419184432e-8 [W⋅m⁻²K⁻⁴] SI2019\n\njulia> stefan(Metric) # W⋅m⁻²⋅K⁻⁴\nkB⁴NA⁴𝘩⋅𝘤⁻⁶R∞⁴α⁻⁸μₑᵤ⁻⁴τ⁵2¹²3⁻¹5¹¹ = 5.6703744114e-8 ± 7.0e-17 [W⋅m⁻²K⁻⁴] Metric\n\njulia> stefan(Conventional) # W⋅m⁻²⋅K⁻⁴\nkB⁴NA⁴𝘤⁻⁶R∞⁴α⁻⁸μₑᵤ⁻⁴RK90⁻¹KJ90⁻²τ⁵2¹⁴3⁻¹5¹¹ = 5.6703733026e-8 ± 7.0e-17 [W⋅m⁻²K⁻⁴] Conventional\n\njulia> stefan(CODATA) # W⋅m⁻²⋅K⁻⁴\n𝘤⁻⁶R∞⁴α⁻⁸μₑᵤ⁻⁴RK⁻¹KJ⁻²Rᵤ2014⁴τ⁵2¹⁴3⁻¹5¹¹ = 5.670367e-8 ± 1.3e-13 [W⋅m⁻²K⁻⁴] CODATA\n\njulia> stefan(Metric)*day(Metric)/(calorie(Metric)*100^2) # cal⋅cm⁻²⋅day⁻¹⋅K⁻⁴\nkB⁴NA⁴𝘩⋅𝘤⁻⁶R∞⁴α⁻⁸μₑᵤ⁻⁴Ωᵢₜ⋅Vᵢₜ⁻²τ⁵2¹⁷5¹²43 = 0.0011701721683 ± 1.4e-12 [m⁻²K⁻⁴] Metric\n\njulia> stefan(English) # lb⋅s⁻¹⋅ft⁻³⋅°R⁻⁴\nkB⁴NA⁴𝘩⋅𝘤⁻⁶R∞⁴α⁻⁸μₑᵤ⁻⁴g₀⁻¹ft⋅lb⁻¹τ⁵2¹²3⁻⁹5¹⁵ = 3.7012656963e-10 ± 4.6e-19 [lbf⋅ft⁻¹s⁻¹°R⁻⁴rad²] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"a = 4fracsigmac = frac8pi^5 k_B^415h^3c^3 = fracpi^2 k_B^415hbar^3c^3 = frac2^7pi^5 h15c^7alpha^8 left(fracg_0R_uR_inftymu_euM_uright)^4","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"radiationdensity","category":"page"},{"location":"constants.html#MeasureSystems.radiationdensity","page":"Physics Constants","title":"MeasureSystems.radiationdensity","text":"radiationdensity(U::UnitSystem) = 𝟐^2*stefan(U)/lightspeed(U)\nnonstandard : [FL⁻²Θ⁻⁴A²], [FL⁻²Θ⁻⁴], [ML⁻¹T⁻²Θ⁻⁴], [ML⁻¹T⁻²Θ⁻⁴], [ML⁻¹T⁻²Θ⁻⁴]\n\nRaditation density constant of black body radiation (J⋅m⁻³⋅K⁻⁴ or lb⋅ft⁻²⋅°R⁻⁴).\n\njulia> radiationdensity(Metric) # J⋅m⁻³⋅K⁻⁴\nkB⁴NA⁴𝘩⋅𝘤⁻⁷R∞⁴α⁻⁸μₑᵤ⁻⁴τ⁵2¹⁴3⁻¹5¹¹ = 7.5657332399e-16 ± 9.3e-25 [J⋅m⁻³K⁻⁴] Metric\n\njulia> radiationdensity(SI2019) # J⋅m⁻³⋅K⁻⁴\nkB⁴𝘩⁻³𝘤⁻³τ⁵2⁻²3⁻¹5⁻¹ = 7.565733250280007e-16 [J⋅m⁻³K⁻⁴] SI2019\n\njulia> radiationdensity(Conventional) # J⋅m⁻³⋅K⁻⁴\nkB⁴NA⁴𝘤⁻⁷R∞⁴α⁻⁸μₑᵤ⁻⁴RK90⁻¹KJ90⁻²τ⁵2¹⁶3⁻¹5¹¹ = 7.5657317605e-16 ± 9.3e-25 [J⋅m⁻³K⁻⁴] Conventional\n\njulia> radiationdensity(CODATA) # J⋅m⁻³⋅K⁻⁴\n𝘤⁻⁷R∞⁴α⁻⁸μₑᵤ⁻⁴RK⁻¹KJ⁻²Rᵤ2014⁴τ⁵2¹⁶3⁻¹5¹¹ = 7.565723e-16 ± 1.7e-21 [J⋅m⁻³K⁻⁴] CODATA\n\njulia> radiationdensity(International) # J⋅m⁻³⋅K⁻⁴\nkB⁴NA⁴𝘩⋅𝘤⁻⁷R∞⁴α⁻⁸μₑᵤ⁻⁴Ωᵢₜ⋅Vᵢₜ⁻²τ⁵2¹⁴3⁻¹5¹¹ = 7.564484894e-16 ± 9.3e-25 [J⋅m⁻³K⁻⁴] International\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"b = frachck_B5+W_0(-5 e^-5) = frachcM_u(m_uR_u)5+W_0(-5 e^-5) = fracM_u mu_euc^2alpha^2(2R_uR_infty g_0)5+W_0(-5 e^-5)","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"wienwavelength","category":"page"},{"location":"constants.html#MeasureSystems.wienwavelength","page":"Physics Constants","title":"MeasureSystems.wienwavelength","text":"wienwavelength(U::UnitSystem) = planck(U)*lightspeed(U)/boltzmann(U)/(𝟓+W₀(-𝟓*exp(-𝟓)))\nnonstandard : [LΘ], [LΘ], [LΘ], [LΘ], [LΘ]\n\nWien wavelength displacement law constant based on Lambert W₀ evaluation (m⋅K or ft⋅°R).\n\njulia> wienwavelength(Metric) # m⋅K\nkB⁻¹NA⁻¹𝘤²R∞⁻¹α²μₑᵤ⋅2⁻⁴5⁻³/4.965114231744276 = 0.00289777195618 ± 8.9e-13 [m⋅K] Metric\n\njulia> wienwavelength(SI2019) # m⋅K\nkB⁻¹𝘩⋅𝘤/4.965114231744276 = 0.0028977719551851727 [m⋅K] SI2019\n\njulia> wienwavelength(Conventional) # m⋅K\nkB⁻¹NA⁻¹𝘤²R∞⁻¹α²μₑᵤ⋅2⁻⁴5⁻³/4.965114231744276 = 0.00289777195618 ± 8.9e-13 [m⋅K] Conventional\n\njulia> wienwavelength(CODATA) # m⋅K\n𝘤²R∞⁻¹α²μₑᵤ⋅Rᵤ2014⁻¹2⁻⁴5⁻³/4.965114231744276 = 0.0028977729 ± 1.7e-9 [m⋅K] CODATA\n\njulia> wienwavelength(English) # ft⋅°R\nkB⁻¹NA⁻¹𝘤²R∞⁻¹α²μₑᵤ⋅ft⁻¹2⁻⁴3²5⁻⁴/4.965114231744276 = 0.0171128265129 ± 5.3e-12 [ft⋅°R] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"frac3+W_0(-3 e^-3)hk_B = frac3+W_0(-3 e^-3)hM_u(m_uR_u) = frac3+W_0(-3 e^-3)M_u mu_eucalpha^2(2R_uR_infty g_0)","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"wienfrequency","category":"page"},{"location":"constants.html#MeasureSystems.wienfrequency","page":"Physics Constants","title":"MeasureSystems.wienfrequency","text":"wienfrequency(U::UnitSystem) = (𝟑+W₀(-𝟑*exp(-𝟑)))*boltzmann(U)/planck(U)\nnonstandard : [T⁻¹Θ⁻¹], [T⁻¹Θ⁻¹], [T⁻¹Θ⁻¹], [T⁻¹Θ⁻¹], [T⁻¹Θ⁻¹]\n\nWien frequency radiation law constant based on Lambert W₀ evaluation (Hz⋅K⁻¹).\n\njulia> wienfrequency(Metric) # Hz⋅K⁻¹\nkB⋅NA⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³⋅2.8214393721220787 = 5.8789257556e10 ± 18.0 [Hz⋅K⁻¹] Metric\n\njulia> wienfrequency(SI2019) # Hz⋅K⁻¹\nkB⋅𝘩⁻¹⋅2.8214393721220787 = 5.8789257576468254e10 [Hz⋅K⁻¹] SI2019\n\njulia> wienfrequency(Conventional) # Hz⋅K⁻¹\nkB⋅NA⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³⋅2.8214393721220787 = 5.8789257556e10 ± 18.0 [Hz⋅K⁻¹] Conventional\n\njulia> wienfrequency(CODATA) # Hz⋅K⁻¹\n𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹Rᵤ2014⋅2⁴5³⋅2.8214393721220787 = 5.8789238e10 ± 34000.0 [Hz⋅K⁻¹] CODATA\n\njulia> wienfrequency(English) # Hz⋅°R⁻¹\nkB⋅NA⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴3⁻²5⁴⋅2.8214393721220787 = 3.2660698642e10 ± 10.0 [Hz⋅°R⁻¹] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"K_textcd = fracI_vint_0^infty bary(lambda)cdotfracdI_edlambdadlambda qquad \nbaryleft(fracc540times 10^12right)cdot I_e = 1","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.luminousefficacy","category":"page"},{"location":"constants.html#MeasureSystems.luminousefficacy","page":"Physics Constants","title":"MeasureSystems.luminousefficacy","text":"luminousefficacy(U::UnitSystem) = Kcd*power(U)\nluminousefficacy(U::UnitSystem{𝟏}) = 𝟏\nluminousefficacy : [F⁻¹L⁻¹TJ], [F⁻¹L⁻¹TJ], [M⁻¹L⁻²T³J], [M⁻¹L⁻²T³J], [M⁻¹L⁻²T³J]\n\nLuminous efficacy of monochromatic radiation Kcd of frequency 540 THz (lm⋅W⁻¹).\n\njulia> luminousefficacy(Metric) # lm⋅W⁻¹\nKcd = 683.01969009009 [lm⋅W⁻¹] Metric\n\njulia> luminousefficacy(CODATA) # lm⋅W⁻¹\n𝘩⋅Kcd⋅RK⋅KJ²2⁻² = 683.0197015 ± 8.5e-6 [lm⋅W⁻¹] CODATA\n\njulia> luminousefficacy(Conventional) # lm⋅W⁻¹\n𝘩⋅Kcd⋅RK90⋅KJ90²2⁻² = 683.0198236454071 [lm⋅W⁻¹] Conventional\n\njulia> luminousefficacy(International) # lm⋅W⁻¹\nKcd⋅Ωᵢₜ⁻¹Vᵢₜ² = 683.1324069249656 [lm⋅W⁻¹] International\n\njulia> luminousefficacy(British) # lm⋅s³⋅slug⋅ft⁻²\nKcd⋅g₀⋅ft⋅lb = 926.0503548878947 [lb⁻¹ft⁻¹s⋅lm] British\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Electromagnetic-Constants-1","page":"Physics Constants","title":"Electromagnetic Constants","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"lambda = frac4pialpha_Bmu_0alpha_L = 4pi k_evarepsilon_0 = Z_0varepsilon_0c","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.rationalization","category":"page"},{"location":"constants.html#MeasureSystems.rationalization","page":"Physics Constants","title":"MeasureSystems.rationalization","text":"rationalization(U::UnitSystem) = spat(U)*biotsavart(U)/vacuumpermeability(U)/lorentz(U)\ndemagnetizingfactor : [A²Λ], [𝟙], [𝟙], [𝟙], [𝟙]\n\nConstant of magnetization and polarization density or spat(U)*coulomb(U)*permittivity(U).\n\njulia> rationalization(Metric)\n𝟏 = 1.0 [𝟙] Metric\n\njulia> rationalization(Gauss)\nτ⋅2 = 12.566370614359172 [𝟙] Gauss\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"alpha_L = frac1csqrtmu_0varepsilon_0 = fracalpha_Bmu_0varepsilon_0k_e = frac4pi alpha_Blambdamu_0 = frack_malpha_B","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.lorentz","category":"page"},{"location":"constants.html#MeasureSystems.lorentz","page":"Physics Constants","title":"MeasureSystems.lorentz","text":"lorentz(U::UnitSystem) = spat(U)*biotsavart(U)/vacuumpermeability(U)/rationalization(U)\nnonstandard : [C⁻¹], [𝟙], [𝟙], [𝟙], [𝟙]\n\nElectromagnetic proportionality constant αL for the Lorentz's law force (dimensionless).\n\njulia> lorentz(Metric)\n𝟏 = 1.0 [𝟙] Metric\n\njulia> lorentz(LorentzHeaviside)\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [cm⁻¹s] LorentzHeaviside\n\njulia> lorentz(Gauss)\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [cm⁻¹s] Gauss\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"alpha_B = mu_0alpha_Lfraclambda4pi = alpha_Lmu_0varepsilon_0k_e = frack_malpha_L = frack_ecsqrtmu_0varepsilon_0","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"biotsavart","category":"page"},{"location":"constants.html#MeasureSystems.biotsavart","page":"Physics Constants","title":"MeasureSystems.biotsavart","text":"biotsavart(U::UnitSystem) = vacuumpermeability(U)*lorentz(U)*rationalization(U)/spat(U)\nnonstandard : [FT²Q⁻²A⁻²C], [FT²Q⁻²], [MLQ⁻²], [T²], [L⁻²T⁴]\n\nMagnetostatic proportionality constant αB for the Biot-Savart's law (H/m).\n\njulia> biotsavart(Metric) # H⋅m⁻¹\n2⁻⁷5⁻⁷ = 1.0e-7 [H⋅m⁻¹] Metric\n\njulia> biotsavart(CODATA) # H⋅m⁻¹\n𝘤⁻¹α⋅RK⋅τ⁻¹ = 1.0000000004e-7 ± 2.8e-17 [H⋅m⁻¹] CODATA\n\njulia> biotsavart(SI2019) # H⋅m⁻¹\n𝘩⋅𝘤⁻¹𝘦⁻²α⋅τ⁻¹ = 1.00000000055e-7 ± 1.5e-17 [H⋅m⁻¹] SI2019\n\njulia> biotsavart(Conventional) # H⋅m⁻¹\n𝘤⁻¹α⋅RK90⋅τ⁻¹ = 9.9999998275e-8 ± 1.5e-17 [H⋅m⁻¹] Conventional\n\njulia> biotsavart(International) # H⋅m⁻¹\nΩᵢₜ⁻¹2⁻⁷5⁻⁷ = 9.995052449037726e-8 [H⋅m⁻¹] International\n\njulia> biotsavart(InternationalMean) # H⋅m⁻¹\n2⁻⁷5⁻⁷/1.00049 = 9.995102399824085e-8 [H⋅m⁻¹] InternationalMean\n\njulia> biotsavart(EMU) # abH⋅cm⁻¹\n𝟏 = 1.0 [s²] EMU\n\njulia> biotsavart(ESU) # statH⋅cm⁻¹\n𝘤⁻²2⁻⁴5⁻⁴ = 1.1126500560536186e-21 [cm⁻²s⁴] ESU\n\njulia> biotsavart(Gauss) # abH⋅cm⁻¹\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [cm⁻¹s³] Gauss\n\njulia> biotsavart(HLU) # hlH⋅cm⁻¹\n𝘤⁻¹τ⁻¹2⁻³5⁻² = 2.6544187294380724e-12 [cm⁻¹s³] LorentzHeaviside\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Z_0 = mu_0lambda calpha_L^2 = fraclambdavarepsilon_0 c = lambdaalpha_Lsqrtfracmu_0varepsilon_0 = frac2halphae^2 = 2R_Kalpha","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"vacuumimpedance","category":"page"},{"location":"constants.html#MeasureSystems.vacuumimpedance","page":"Physics Constants","title":"MeasureSystems.vacuumimpedance","text":"vacuumimpedance(U::UnitSystem) = vacuumpermeability(U)*lightspeed(U)*rationalization(U)*lorentz(U)^2\nresistance : [FLTQ⁻²], [FLTQ⁻²], [ML²T⁻¹Q⁻²], [LT], [L⁻¹T³]\n\nVacuum impedance of free space Z₀ is magnitude ratio of electric to magnetic field (Ω).\n\njulia> vacuumimpedance(Metric) # Ω\n𝘤⋅τ⋅2⁻⁶5⁻⁷ = 376.7303134617706 [Ω] Metric\n\njulia> vacuumimpedance(Conventional) # Ω\nα⋅RK90⋅2 = 376.730306964 ± 5.8e-8 [Ω] Conventional\n\njulia> vacuumimpedance(CODATA) # Ω\nα⋅RK⋅2 = 376.73031361 ± 1.0e-7 [Ω] CODATA\n\njulia> vacuumimpedance(SI2019) # Ω\n𝘩⋅𝘦⁻²α⋅2 = 376.730313667 ± 5.8e-8 [Ω] SI2019\n\njulia> vacuumimpedance(International) # Ω\n𝘤⋅Ωᵢₜ⁻¹τ⋅2⁻⁶5⁻⁷ = 376.5439242192821 [Ω] International\n\njulia> vacuumimpedance(InternationalMean) # Ω\n𝘤⋅τ⋅2⁻⁶5⁻⁷/1.00049 = 376.5458060168223 [Ω] InternationalMean\n\njulia> 120π # 3e8*μ₀ # Ω\n376.99111843077515\n\njulia> vacuumimpedance(EMU) # abΩ\n𝘤⋅τ⋅2³5² = 3.767303134617706e11 [cm⋅s] EMU\n\njulia> vacuumimpedance(ESU) # statΩ\n𝘤⁻¹τ⋅2⁻¹5⁻² = 4.191690043903363e-10 [cm⁻¹s³] ESU\n\njulia> vacuumimpedance(HLU) # hlΩ\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [cm⁻¹s³] LorentzHeaviside\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"mu_0 = frac1varepsilon_0 (calpha_L)^2 = frac4pi k_elambda (calpha_L)^2 = frac2halphalambda c(ealpha_L)^2 = frac2R_Kalphalambda calpha_L^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.vacuumpermeability","category":"page"},{"location":"constants.html#MeasureSystems.vacuumpermeability","page":"Physics Constants","title":"MeasureSystems.vacuumpermeability","text":"vacuumpermeability(U::UnitSystem) = 𝟏/vacuumpermittivity(U)/(lightspeed(U)*lorentz(U))^2\npermeability : [FT²Q⁻²A⁻²Λ⁻¹C²], [FT²Q⁻²], [MLQ⁻²], [T²], [L⁻²T⁴]\n\nMagnetic permeability in a classical vacuum defined as μ₀ in SI units (H⋅m⁻¹, kg⋅m²⋅C⁻²).\n\njulia> vacuumpermeability(Metric) # H⋅m⁻¹\nτ⋅2⁻⁶5⁻⁷ = 1.2566370614359173e-6 [H⋅m⁻¹] Metric\n\njulia> vacuumpermeability(Conventional) # H⋅m⁻¹\n𝘤⁻¹α⋅RK90⋅2 = 1.25663703976e-6 ± 1.9e-16 [H⋅m⁻¹] Conventional\n\njulia> vacuumpermeability(CODATA) # H⋅m⁻¹\n𝘤⁻¹α⋅RK⋅2 = 1.25663706194e-6 ± 3.5e-16 [H⋅m⁻¹] CODATA\n\njulia> vacuumpermeability(SI2019) # H⋅m⁻¹\n𝘩⋅𝘤⁻¹𝘦⁻²α⋅2 = 1.25663706212e-6 ± 1.9e-16 [H⋅m⁻¹] SI2019\n\njulia> vacuumpermeability(International) # H⋅m⁻¹\nΩᵢₜ⁻¹τ⋅2⁻⁶5⁻⁷ = 1.2560153338456637e-6 [H⋅m⁻¹] International\n\njulia> vacuumpermeability(EMU) # abH⋅cm⁻¹\n𝟏 = 1.0 [s²] EMU\n\njulia> vacuumpermeability(ESU) # statH⋅cm⁻¹\n𝘤⁻²2⁻⁴5⁻⁴ = 1.1126500560536186e-21 [cm⁻²s⁴] ESU\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"varepsilon_0 = frac1mu_0(calpha_L)^2 = fraclambda4pi k_e = fraclambda e^22alpha hc = fraclambda2R_Kalpha c","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"vacuumpermittivity","category":"page"},{"location":"constants.html#MeasureSystems.vacuumpermittivity","page":"Physics Constants","title":"MeasureSystems.vacuumpermittivity","text":"vacuumpermittivity(U::UnitSystem) = 𝟏/vacuumpermeability(U)/(lightspeed(U)*lorentz(U))^2\npermittivity : [F⁻¹L⁻²Q²A²Λ], [F⁻¹L⁻²Q²], [M⁻¹L⁻³T²Q²], [L⁻²], [T⁻²]\n\nDielectric permittivity constant ε₀ of a classical vacuum (C²⋅N⁻¹⋅m⁻²).\n\njulia> vacuumpermittivity(Metric) # F⋅m⁻¹\n𝘤⁻²τ⁻¹2⁶5⁷ = 8.85418781762039e-12 [F⋅m⁻¹] Metric\n\njulia> vacuumpermittivity(Conventional) # F⋅m⁻¹\n𝘤⁻¹α⁻¹RK90⁻¹2⁻¹ = 8.8541879703e-12 ± 1.4e-21 [F⋅m⁻¹] Conventional\n\njulia> vacuumpermittivity(CODATA) # F⋅m⁻¹\n𝘤⁻¹α⁻¹RK⁻¹2⁻¹ = 8.8541878141e-12 ± 2.4e-21 [F⋅m⁻¹] CODATA\n\njulia> vacuumpermittivity(SI2019) # F⋅m⁻¹\n𝘩⁻¹𝘤⁻¹𝘦²α⁻¹2⁻¹ = 8.8541878128e-12 ± 1.4e-21 [F⋅m⁻¹] SI2019\n\njulia> vacuumpermittivity(International) # F⋅m⁻¹\n𝘤⁻²Ωᵢₜ⋅τ⁻¹2⁶5⁷ = 8.85857064059011e-12 [F⋅m⁻¹] International\n\njulia> vacuumpermittivity(EMU) # abF⋅cm⁻¹\n𝘤⁻²2⁻⁴5⁻⁴ = 1.1126500560536186e-21 [cm⁻²] EMU\n\njulia> vacuumpermittivity(ESU) # statF⋅cm⁻¹\n𝟏 = 1.0 [gal⋅cm⁻¹] ESU\n\njulia> vacuumpermittivity(SI2019)/elementarycharge(SI2019) # 𝘦²⋅eV⁻¹⋅m⁻¹\n𝘩⁻¹𝘤⁻¹𝘦⋅α⁻¹2⁻¹ = 5.52634935805e7 ± 0.0085 [kg⁻¹m⁻³s²C] SI2019\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"k_e = fraclambda4pivarepsilon_0 = fracmu_0lambda (calpha_L)^24pi = fracalpha hbar ce^2 = fracR_Kalpha c2pi = fracalpha_Balpha_Lmu_0varepsilon_0 = k_mc^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"electrostatic","category":"page"},{"location":"constants.html#MeasureSystems.electrostatic","page":"Physics Constants","title":"MeasureSystems.electrostatic","text":"electrostatic(U::UnitSystem) = rationalization(U)/spat(U)/vacuumpermittivity(U)\nnonstandard : [FL²Q⁻²A⁻²], [FL²Q⁻²], [ML³T⁻²Q⁻²], [L²], [T²]\n\nElectrostatic proportionality constant kₑ for the Coulomb's law force (N⋅m²⋅C⁻²).\n\njulia> electrostatic(Metric) # N⋅m²⋅C⁻²\n𝘤²2⁻⁷5⁻⁷ = 8.987551787368176e9 [m⋅F⁻¹] Metric\n\njulia> electrostatic(CODATA) # N·m²⋅C⁻²\n𝘤⋅α⋅RK⋅τ⁻¹ = 8.9875517909e9 ± 2.5 [m⋅F⁻¹] CODATA\n\njulia> electrostatic(SI2019) # N·m²⋅C⁻²\n𝘩⋅𝘤⋅𝘦⁻²α⋅τ⁻¹ = 8.9875517923e9 ± 1.4 [m⋅F⁻¹] SI2019\n\njulia> electrostatic(Conventional) # N·m²⋅C⁻²\n𝘤⋅α⋅RK90⋅τ⁻¹ = 8.9875516323e9 ± 1.4 [m⋅F⁻¹] Conventional\n\njulia> electrostatic(International) # N·m²⋅C⁻²\n𝘤²Ωᵢₜ⁻¹2⁻⁷5⁻⁷ = 8.983105150318768e9 [m⋅F⁻¹] International\n\njulia> electrostatic(EMU) # dyn⋅cm²⋅abC⁻²\n𝘤²2⁴5⁴ = 8.987551787368175e20 [cm²] EMU\n\njulia> electrostatic(ESU) # dyn⋅cm²⋅statC⁻²\n𝟏 = 1.0 [s²] ESU\n\njulia> electrostatic(HLU) # dyn⋅cm²⋅hlC⁻²\nτ⁻¹2⁻¹ = 0.07957747154594767 [s²] LorentzHeaviside\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"k_m = alpha_Lalpha_B = mu_0alpha_L^2fraclambda4pi = frack_ec^2 = fracalpha hbarce^2 = fracR_Kalpha2pi c","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"magnetostatic","category":"page"},{"location":"constants.html#MeasureSystems.magnetostatic","page":"Physics Constants","title":"MeasureSystems.magnetostatic","text":"magnetostatic(U::UnitSystem) = lorentz(U)*biotsavart(U) # electrostatic(U)/lightspeed(U)^2\nnonstandard : [FT²Q⁻²A⁻²], [FT²Q⁻²], [MLQ⁻²], [T²], [L⁻²T⁴]\n\nMagnetic proportionality constant kₘ for the Ampere's law force (N·s²⋅C⁻²).\n\njulia> magnetostatic(Metric) # H⋅m⁻¹\n2⁻⁷5⁻⁷ = 1.0e-7 [H⋅m⁻¹] Metric\n\njulia> magnetostatic(CODATA) # H⋅m⁻¹\n𝘤⁻¹α⋅RK⋅τ⁻¹ = 1.0000000004e-7 ± 2.8e-17 [H⋅m⁻¹] CODATA\n\njulia> magnetostatic(SI2019) # H⋅m⁻¹\n𝘩⋅𝘤⁻¹𝘦⁻²α⋅τ⁻¹ = 1.00000000055e-7 ± 1.5e-17 [H⋅m⁻¹] SI2019\n\njulia> magnetostatic(Conventional) # H⋅m⁻¹\n𝘤⁻¹α⋅RK90⋅τ⁻¹ = 9.9999998275e-8 ± 1.5e-17 [H⋅m⁻¹] Conventional\n\njulia> magnetostatic(International) # H⋅m⁻¹\nΩᵢₜ⁻¹2⁻⁷5⁻⁷ = 9.995052449037726e-8 [H⋅m⁻¹] International\n\njulia> magnetostatic(EMU) # abH⋅m⁻¹\n𝟏 = 1.0 [s²] EMU\n\njulia> magnetostatic(ESU) # statH⋅m⁻¹\n𝘤⁻²2⁻⁴5⁻⁴ = 1.1126500560536186e-21 [cm⁻²s⁴] ESU\n\njulia> magnetostatic(HLU) # hlH⋅m⁻¹\n𝘤⁻²τ⁻¹2⁻⁵5⁻⁴ = 8.854187817620392e-23 [cm⁻²s⁴] LorentzHeaviside\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"e = sqrtfrac2halphaZ_0 = frac2alpha_LK_JR_K = sqrtfrachR_K = frachK_J2alpha_L = fracFN_A","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"elementarycharge","category":"page"},{"location":"constants.html#MeasureSystems.elementarycharge","page":"Physics Constants","title":"MeasureSystems.elementarycharge","text":"elementarycharge(U::UnitSystem) = √(𝟐*planck(U)*finestructure(U)/vacuumimpedance(U))\ncharge : [Q], [Q], [Q], [M¹ᐟ²L¹ᐟ²T⁻¹], [M¹ᐟ²L³ᐟ²T⁻²]\n\nQuantized elementary charge 𝘦 of a proton or electron 2/(klitzing(U)*josephson(U)) (C).\n\njulia> elementarycharge(SI2019) # C\n𝘦 = 1.602176634e-19 [C] SI2019\n\njulia> elementarycharge(Metric) # C\n𝘩¹ᐟ²𝘤⁻¹ᐟ²α¹ᐟ²τ⁻¹ᐟ²2⁷ᐟ²5⁷ᐟ² = 1.60217663444e-19 ± 1.2e-29 [C] Metric\n\njulia> elementarycharge(CODATA) # C\nRK⁻¹KJ⁻¹2 = 1.6021766206999998e-19 ± 9.9e-28 [C] CODATA\n\njulia> elementarycharge(Conventional) # C\nRK90⁻¹KJ90⁻¹2 = 1.602176491612271e-19 [C] Conventional\n\njulia> elementarycharge(International) # C\n𝘩¹ᐟ²𝘤⁻¹ᐟ²α¹ᐟ²Ωᵢₜ⋅Vᵢₜ⁻¹τ⁻¹ᐟ²2⁷ᐟ²5⁷ᐟ² = 1.60244090637e-19 ± 1.2e-29 [C] International\n\njulia> elementarycharge(EMU) # abC\n𝘩¹ᐟ²𝘤⁻¹ᐟ²α¹ᐟ²τ⁻¹ᐟ²2⁵ᐟ²5⁵ᐟ² = 1.60217663444e-20 ± 1.2000000000000001e-30 [g¹ᐟ²cm¹ᐟ²s⁻¹] EMU\n\njulia> elementarycharge(ESU) # statC\n𝘩¹ᐟ²𝘤¹ᐟ²α¹ᐟ²τ⁻¹ᐟ²2⁹ᐟ²5⁹ᐟ² = 4.80320471388e-10 ± 3.7e-20 [g¹ᐟ²cm³ᐟ²s⁻²] ESU\n\njulia> elementarycharge(Hartree) # 𝘦\n𝟏 = 1.0 [𝘦] Hartree\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"F = eN_A = N_Asqrtfrac2halphaZ_0 = frac2N_Aalpha_LK_JR_K = N_AsqrtfrachR_K = frachK_JN_A2alpha_L","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"faraday","category":"page"},{"location":"constants.html#MeasureSystems.faraday","page":"Physics Constants","title":"MeasureSystems.faraday","text":"faraday(U::UnitSystem) = elementarycharge(U)*avogadro(U)\nnonstandard : [QN⁻¹], [QN⁻¹], [QN⁻¹], [M¹ᐟ²L¹ᐟ²T⁻¹N⁻¹], [M¹ᐟ²L³ᐟ²T⁻²N⁻¹]\n\nElectric charge per mole of electrons 𝔉 based on elementary charge (C⋅mol⁻¹).\n\njulia> faraday(SI2019) # C⋅mol⁻¹\nNA⋅𝘦 = 96485.33212331001 [C⋅mol⁻¹] SI2019\n\njulia> faraday(Metric) # C⋅mol⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²R∞⁻¹α⁵ᐟ²μₑᵤ⋅τ⁻¹ᐟ²2⁻¹ᐟ²5¹ᐟ² = 96485.332183 ± 3.7e-5 [C⋅mol⁻¹] Metric\n\njulia> faraday(CODATA) # C⋅mol⁻¹\n𝘤⋅R∞⁻¹α²μₑᵤ⋅KJ⋅2⁻⁵5⁻³ = 96485.33297 ± 0.0006 [C⋅mol⁻¹] CODATA\n\njulia> faraday(Conventional) # C⋅mol⁻¹\n𝘤⋅R∞⁻¹α²μₑᵤ⋅KJ90⋅2⁻⁵5⁻³ = 96485.342448 ± 3.0e-5 [C⋅mol⁻¹] Conventional\n\njulia> faraday(International) # C⋅mol⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²R∞⁻¹α⁵ᐟ²μₑᵤ⋅Ωᵢₜ⋅Vᵢₜ⁻¹τ⁻¹ᐟ²2⁻¹ᐟ²5¹ᐟ² = 96501.247011 ± 3.7e-5 [C⋅mol⁻¹] International\n\njulia> faraday(InternationalMean) # C⋅mol⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²R∞⁻¹α⁵ᐟ²μₑᵤ⋅τ⁻¹ᐟ²2⁻¹ᐟ²5¹ᐟ²⋅1.0001499490173342 = 96499.800064 ± 3.7e-5 [C⋅mol⁻¹] InternationalMean\n\njulia> faraday(EMU) # abC⋅mol⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²R∞⁻¹α⁵ᐟ²μₑᵤ⋅τ⁻¹ᐟ²2⁻³ᐟ²5⁻¹ᐟ² = 9648.5332183 ± 3.7e-6 [g¹ᐟ²cm¹ᐟ²s⁻¹mol⁻¹] EMU\n\njulia> faraday(ESU) # statC⋅mol⁻¹\n𝘩⁻¹ᐟ²𝘤³ᐟ²R∞⁻¹α⁵ᐟ²μₑᵤ⋅τ⁻¹ᐟ²2¹ᐟ²5³ᐟ² = 2.8925574896e14 ± 110000.0 [g¹ᐟ²cm³ᐟ²s⁻²mol⁻¹] ESU\n\njulia> faraday(Metric)/kilocalorie(Metric) # kcal⋅(V-g-e)⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²R∞⁻¹α⁵ᐟ²μₑᵤ⋅Ωᵢₜ⋅Vᵢₜ⁻²τ⁻¹ᐟ²2⁻¹¹ᐟ²3⁻²5⁻⁷ᐟ²43 = 23.0454706695 ± 8.9e-9 [kg⁻¹m⁻²s²C⋅mol⁻¹] Metric\n\njulia> faraday(Metric)/3600 # A⋅h⋅mol⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²R∞⁻¹α⁵ᐟ²μₑᵤ⋅τ⁻¹ᐟ²2⁻⁹ᐟ²3⁻²5⁻³ᐟ² = 26.801481162 ± 1.0e-8 [C⋅mol⁻¹] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"G_0 = frac2e^2h = frac4alphaZ_0 = frac2R_K = frachK_J^22alpha_L^2 = frac2F^2hN_A^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"conductancequantum","category":"page"},{"location":"constants.html#MeasureSystems.conductancequantum","page":"Physics Constants","title":"MeasureSystems.conductancequantum","text":"conductancequantum(U::UnitSystem) = 𝟐*elementarycharge(U)^2/planck(U) # 2/klitzing(U)\nconductance : [F⁻¹L⁻¹T⁻¹Q²], [F⁻¹L⁻¹T⁻¹Q²], [M⁻¹L⁻²TQ²], [L⁻¹T⁻¹], [LT⁻³]\n\nConductance quantum G₀ is a quantized unit of electrical conductance (S).\n\njulia> conductancequantum(SI2019) # S\n𝘩⁻¹𝘦²2 = 7.748091729863649e-5 [S] SI2019\n\njulia> conductancequantum(Metric) # S\n𝘤⁻¹α⋅τ⁻¹2⁸5⁷ = 7.7480917341e-5 ± 1.2e-14 [S] Metric\n\njulia> conductancequantum(Conventional) # S\nRK90⁻¹2 = 7.74809186773062e-5 [S] Conventional\n\njulia> conductancequantum(CODATA) # S\nRK⁻¹2 = 7.748091731e-5 ± 1.8e-14 [S] CODATA\n\njulia> conductancequantum(International) # S\n𝘤⁻¹α⋅Ωᵢₜ⋅τ⁻¹2⁸5⁷ = 7.7519270395e-5 ± 1.2e-14 [S] International\n\njulia> conductancequantum(InternationalMean) # S\n𝘤⁻¹α⋅τ⁻¹2⁸5⁷⋅1.00049 = 7.751888299e-5 ± 1.2e-14 [S] InternationalMean\n\njulia> conductancequantum(EMU) # abS\n𝘤⁻¹α⋅τ⁻¹2⁻¹5⁻² = 7.7480917341e-14 ± 1.2e-23 [cm⁻¹s⁻¹] EMU\n\njulia> conductancequantum(ESU) # statS\n𝘤⋅α⋅τ⁻¹2³5² = 6.9636375713e7 ± 0.011 [cm⋅s⁻³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"R_K = frache^2 = fracZ_02alpha = frac2G_0 = frac4alpha_L^2hK_J^2 = hfracN_A^2F^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"klitzing","category":"page"},{"location":"constants.html#MeasureSystems.klitzing","page":"Physics Constants","title":"MeasureSystems.klitzing","text":"klitzing(U::UnitSystem) = planck(U)/elementarycharge(U)^2\nresistance : [FLTQ⁻²], [FLTQ⁻²], [ML²T⁻¹Q⁻²], [LT], [L⁻¹T³]\n\nQuantized Hall resistance RK (Ω).\n\njulia> klitzing(SI2019) # Ω\n𝘩⋅𝘦⁻² = 25812.80745930451 [Ω] SI2019\n\njulia> klitzing(Metric) # Ω\n𝘤⋅α⁻¹τ⋅2⁻⁷5⁻⁷ = 25812.8074452 ± 4.0e-6 [Ω] Metric\n\njulia> klitzing(Conventional) # Ω\nRK90 = 25812.807 [Ω] Conventional\n\njulia> klitzing(International) # Ω\n𝘤⋅α⁻¹Ωᵢₜ⁻¹τ⋅2⁻⁷5⁻⁷ = 25800.0364272 ± 4.0e-6 [Ω] International\n\njulia> klitzing(CODATA) # Ω\nRK = 25812.8074555 ± 5.9e-6 [Ω] CODATA\n\njulia> klitzing(EMU) # abΩ\n𝘤⋅α⁻¹τ⋅2²5² = 2.58128074452e13 ± 4000.0 [cm⋅s] EMU\n\njulia> klitzing(ESU) # statΩ\n𝘤⁻¹α⁻¹τ⋅2⁻²5⁻² = 2.87206216508e-8 ± 4.4e-18 [cm⁻¹s³] ESU\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"K_J = frac2ealpha_Lh = alpha_Lsqrtfrac8alphahZ_0 = alpha_Lsqrtfrac4hR_K = frac1Phi_0 = frac2Falpha_LhN_A","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"josephson","category":"page"},{"location":"constants.html#MeasureSystems.josephson","page":"Physics Constants","title":"MeasureSystems.josephson","text":"josephson(U::UnitSystem) = 𝟐*elementarycharge(U)*lorentz(U)/planck(U) # 𝟏/magneticfluxquantum(U)\nnonstandard : [F⁻¹L⁻¹T⁻¹QC⁻¹], [F⁻¹L⁻¹T⁻¹Q], [M⁻¹L⁻²TQ], [M⁻¹ᐟ²L⁻³ᐟ²], [M⁻¹ᐟ²L⁻¹ᐟ²T⁻¹]\n\nJosephson constant KJ relating potential difference to irradiation frequency (Hz⋅V⁻¹).\n\njulia> josephson(SI2019) # Hz⋅V⁻¹\n𝘩⁻¹𝘦⋅2 = 4.8359784841698356e14 [Hz⋅V⁻¹] SI2019\n\njulia> josephson(Metric) # Hz⋅V⁻¹\n𝘩⁻¹ᐟ²𝘤⁻¹ᐟ²α¹ᐟ²τ⁻¹ᐟ²2⁹ᐟ²5⁷ᐟ² = 4.83597848549e14 ± 37000.0 [Hz⋅V⁻¹] Metric\n\njulia> josephson(Conventional) # Hz⋅V⁻¹\nKJ90 = 4.835979e14 [Hz⋅V⁻¹] Conventional\n\njulia> josephson(CODATA) # Hz⋅V⁻¹\nKJ = 4.835978525e14 ± 3.0e6 [Hz⋅V⁻¹] CODATA\n\njulia> josephson(International) # Hz⋅V⁻¹\n𝘩⁻¹ᐟ²𝘤⁻¹ᐟ²α¹ᐟ²Vᵢₜ⋅τ⁻¹ᐟ²2⁹ᐟ²5⁷ᐟ² = 4.83757435839e14 ± 37000.0 [Hz⋅V⁻¹] International\n\njulia> josephson(EMU) # Hz⋅abV⁻¹\n𝘩⁻¹ᐟ²𝘤⁻¹ᐟ²α¹ᐟ²τ⁻¹ᐟ²2⁻⁷ᐟ²5⁻⁹ᐟ² = 4.83597848549e6 ± 0.00037 [g⁻¹ᐟ²cm⁻³ᐟ²] EMU\n\njulia> josephson(ESU) # Hz⋅statV⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²α¹ᐟ²τ⁻¹ᐟ²2⁻³ᐟ²5⁻⁵ᐟ² = 1.449789877e17 ± 1.1e7 [g⁻¹ᐟ²cm⁻¹ᐟ²s⁻¹] ESU\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Phi_0 = frach2ealpha_L = frac1alpha_LsqrtfrachZ_08alpha = frac1alpha_LsqrtfrachR_K4 = frac1K_J = frachN_A2Falpha_L","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"magneticfluxquantum","category":"page"},{"location":"constants.html#MeasureSystems.magneticfluxquantum","page":"Physics Constants","title":"MeasureSystems.magneticfluxquantum","text":"magneticfluxquantum(U::UnitSystem) = planck(U)/𝟐/elementarycharge(U)/lorentz(U)\nmagneticflux : [FLTQ⁻¹C], [FLTQ⁻¹], [ML²T⁻¹Q⁻¹], [M¹ᐟ²L³ᐟ²], [M¹ᐟ²L¹ᐟ²T]\n\nMagnetic flux quantum Φ₀ is 𝟏/josephson(U) (Wb).\n\njulia> magneticfluxquantum(SI2019) # Wb\n𝘩⋅𝘦⁻¹2⁻¹ = 2.0678338484619295e-15 [Wb] SI2019\n\njulia> magneticfluxquantum(Metric) # Wb\n𝘩¹ᐟ²𝘤¹ᐟ²α⁻¹ᐟ²τ¹ᐟ²2⁻⁹ᐟ²5⁻⁷ᐟ² = 2.0678338479e-15 ± 1.5999999999999998e-25 [Wb] Metric\n\njulia> magneticfluxquantum(Conventional) # Wb\nKJ90⁻¹ = 2.0678336278962334e-15 [Wb] Conventional\n\njulia> magneticfluxquantum(International) # Wb\n𝘩¹ᐟ²𝘤¹ᐟ²α⁻¹ᐟ²Vᵢₜ⁻¹τ¹ᐟ²2⁻⁹ᐟ²5⁻⁷ᐟ² = 2.06715168784e-15 ± 1.5999999999999998e-25 [Wb] International\n\njulia> magneticfluxquantum(InternationalMean) # Wb\n𝘩¹ᐟ²𝘤¹ᐟ²α⁻¹ᐟ²τ¹ᐟ²2⁻⁹ᐟ²5⁻⁷ᐟ²/1.00034 = 2.06713102335e-15 ± 1.5999999999999998e-25 [Wb] InternationalMean\n\njulia> magneticfluxquantum(EMU) # Mx\n𝘩¹ᐟ²𝘤¹ᐟ²α⁻¹ᐟ²τ¹ᐟ²2⁷ᐟ²5⁹ᐟ² = 2.0678338479e-7 ± 1.6e-17 [Mx] EMU\n\njulia> magneticfluxquantum(ESU) # statWb\n𝘩¹ᐟ²𝘤⁻¹ᐟ²α⁻¹ᐟ²τ¹ᐟ²2³ᐟ²5⁵ᐟ² = 6.897551264939999e-18 ± 5.3e-28 [g¹ᐟ²cm¹ᐟ²s] ESU\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"mu_B = fracehbaralpha_L2m_e = frachbaralpha_L^2m_eK_JR_K = frach^2K_J8pi m_e = fracalpha_Lhbar F2m_e N_A = fracecalpha^2alpha_L8pi g_0R_infty","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"magneton","category":"page"},{"location":"constants.html#MeasureSystems.magneton","page":"Physics Constants","title":"MeasureSystems.magneton","text":"magneton(U::UnitSystem) = elementarycharge(U)*planckreduced(U)*lorentz(U)/2electronmass(U)\nmagneticdipolemoment : [FM⁻¹LTQA⁻¹C⁻¹], [L²T⁻¹Q], [L²T⁻¹Q], [M¹ᐟ²L⁵ᐟ²T⁻²], [M¹ᐟ²L⁷ᐟ²T⁻³]\n\nBohr magneton μB natural unit for expressing magnetic moment of electron (J⋅T⁻¹).\n\njulia> magneton(SI2019) # J⋅T⁻¹\n𝘤⋅𝘦⋅R∞⁻¹α²τ⁻¹2⁻² = 9.274010078299999e-24 ± 2.8e-33 [J⋅T⁻¹] SI2019\n\njulia> magneton(Metric) # J⋅T⁻¹\n𝘩¹ᐟ²𝘤¹ᐟ²R∞⁻¹α⁵ᐟ²τ⁻³ᐟ²2³ᐟ²5⁷ᐟ² = 9.274010080799999e-24 ± 3.5999999999999997e-33 [J⋅T⁻¹] Metric\n\njulia> magneton(CODATA) # J⋅T⁻¹\n𝘤⋅R∞⁻¹α²RK⁻¹KJ⁻¹τ⁻¹2⁻¹ = 9.274010001e-24 ± 5.8e-32 [J⋅T⁻¹] CODATA\n\njulia> magneton(Conventional) # J⋅T⁻¹\n𝘤⋅R∞⁻¹α²RK90⁻¹KJ90⁻¹τ⁻¹2⁻¹ = 9.2740092541e-24 ± 2.8e-33 [J⋅T⁻¹] Conventional\n\njulia> magneton(International) # J⋅T⁻¹\n𝘩¹ᐟ²𝘤¹ᐟ²R∞⁻¹α⁵ᐟ²Ωᵢₜ⋅Vᵢₜ⁻¹τ⁻³ᐟ²2³ᐟ²5⁷ᐟ² = 9.2755397877e-24 ± 3.5999999999999997e-33 [J⋅T⁻¹] International\n\njulia> magneton(ESU) # statA⋅cm²\n𝘩¹ᐟ²𝘤³ᐟ²R∞⁻¹α⁵ᐟ²τ⁻³ᐟ²2¹³ᐟ²5¹⁷ᐟ² = 2.7802782776e-10 ± 1.1e-19 [g¹ᐟ²cm⁷ᐟ²s⁻³] ESU\n\njulia> magneton(SI2019)/elementarycharge(SI2019) # eV⋅T⁻¹\n𝘤⋅R∞⁻¹α²τ⁻¹2⁻² = 5.788381806e-5 ± 1.8e-14 [m²s⁻¹] SI2019\n\njulia> magneton(Hartree) # 𝘤⋅ħ⋅mₑ⁻¹\n2⁻¹ = 0.5 [𝘦] Hartree\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Astronomical-Constants-1","page":"Physics Constants","title":"Astronomical Constants","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"eddington\nsolarmass\njupitermass\nearthmass\nlunarmass\nMeasureSystems.gravity\nearthradius\ngreatcircle\ngaussianmonth\nsiderealmonth\nsynodicmonth\ngaussianyear\nsiderealyear\njovianyear\nradarmile\nhubble\ncosmological","category":"page"},{"location":"constants.html#MeasureSystems.eddington","page":"Physics Constants","title":"MeasureSystems.eddington","text":"eddington(U::UnitSystem) = mass(𝟏,U,Cosmological)\n\nApproximate number of protons in the Universe as estimated by Eddington (kg or lb).\n\njulia> 𝟐^2^2^3/α # mₚ\nα⁻¹2²⁵⁶ = 1.5867684634699998e79 ± 2.3999999999999998e69\n\njulia> eddington(QCD) # mₚ\n𝘩⁻²𝘤³R∞⁻¹α²μₑᵤ⋅μₚᵤ⁻¹ΩΛ⁻¹ᐟ²H0⁻¹au⋅mP²τ⁻¹ᐟ²2⁸3⁷ᐟ²5⁶ = 1.527e79 ± 1.1e77 [mₚ] QCD\n\njulia> eddington(Metric) # kg\n𝘩⁻¹𝘤²ΩΛ⁻¹ᐟ²H0⁻¹au⋅mP²τ⁻¹ᐟ²2⁹3⁷ᐟ²5⁶ = 2.5550000000000004e52 ± 1.9000000000000004e50 [kg] Metric\n\njulia> eddington(IAU) # M☉\n𝘤³ΩΛ⁻¹ᐟ²H0⁻¹au⁻²kG⁻²τ⁻⁷ᐟ²2³⁷3³⁵ᐟ²5¹⁶ = 1.2847e22 ± 9.5e19 [M☉] IAU☉\n\njulia> eddington(Cosmological)\n𝟏 = 1.0 [M] Cosmological\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.solarmass","page":"Physics Constants","title":"MeasureSystems.solarmass","text":"solarmass(U::UnitSystem) = mass(𝘩⁻¹𝘤⁻¹au³kG²mP²τ³2⁻²⁸3⁻¹⁴5⁻¹⁰ = 1.988409e30 ± 4.4e25,U)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nSolar mass estimated from gravitational constant estimates (kg or slug).\n\njulia> solarmass(Metric) # kg\n𝘩⁻¹𝘤⁻¹au³kG²mP²τ³2⁻²⁸3⁻¹⁴5⁻¹⁰ = 1.988409e30 ± 4.4e25 [kg] Metric\n\njulia> solarmass(British) # slug\n𝘩⁻¹𝘤⁻¹g₀⁻¹au³ft⋅lb⁻¹kG²mP²τ³2⁻²⁸3⁻¹⁴5⁻¹⁰ = 1.362493e29 ± 3.0e24 [slug] British\n\njulia> solarmass(English) # lb\n𝘩⁻¹𝘤⁻¹au³lb⁻¹kG²mP²τ³2⁻²⁸3⁻¹⁴5⁻¹⁰ = 4.383692e30 ± 9.699999999999999e25 [lbm] English\n\njulia> solarmass(IAUE) # ME\nau³kG²GME⁻¹τ²2⁻²⁸3⁻¹⁴5⁻¹⁰ = 332946.04409 ± 0.00067 [ME] IAUE\n\njulia> solarmass(IAUJ) # MJ\nau³kG²GMJ⁻¹τ²2⁻²⁸3⁻¹⁴5⁻¹⁰ = 1047.565484 ± 7.4e-5 [MJ] IAUJ\n\njulia> solarmass(QCD) # mₚ\n𝘩⁻²R∞⁻¹α²μₑᵤ⋅μₚᵤ⁻¹au³kG²mP²τ³2⁻²⁹3⁻¹⁴5⁻¹⁰ = 1.188798e57 ± 2.6e52 [mₚ] QCD\n\njulia> solarmass(Metric)/dalton(Metric) # Da\n𝘩⁻²R∞⁻¹α²μₑᵤ⋅au³kG²mP²τ³2⁻²⁹3⁻¹⁴5⁻¹⁰ = 1.197448e57 ± 2.6e52 [𝟙] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.jupitermass","page":"Physics Constants","title":"MeasureSystems.jupitermass","text":"jupitermass(U::UnitSystem) = mass(𝘩⁻¹𝘤⁻¹mP²GMJ⋅τ = 1.898124e27 ± 4.2e22,U)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nJupiter mass estimated from gravitational constant estimates (kg or slug).\n\njulia> jupitermass(Metric) # kg\n𝘩⁻¹𝘤⁻¹mP²GMJ⋅τ = 1.898124e27 ± 4.2e22 [kg] Metric\n\njulia> jupitermass(British) # slug\n𝘩⁻¹𝘤⁻¹g₀⁻¹ft⋅lb⁻¹mP²GMJ⋅τ = 1.300628e26 ± 2.9e21 [slug] British\n\njulia> jupitermass(English) # lb\n𝘩⁻¹𝘤⁻¹lb⁻¹mP²GMJ⋅τ = 4.184647e27 ± 9.2e22 [lbm] English\n\njulia> jupitermass(IAU) # M☉\nau⁻³kG⁻²GMJ⋅τ⁻²2²⁸3¹⁴5¹⁰ = 0.000954594262 ± 6.8e-11 [M☉] IAU☉\n\njulia> jupitermass(IAUE) # ME\nGME⁻¹GMJ = 317.828383 ± 2.3e-5 [ME] IAUE\n\njulia> jupitermass(QCD) # mₚ\n𝘩⁻²R∞⁻¹α²μₑᵤ⋅μₚᵤ⁻¹mP²GMJ⋅τ⋅2⁻¹ = 1.13482e54 ± 2.5e49 [mₚ] QCD\n\njulia> jupitermass(Metric)/dalton(Metric) # Da\n𝘩⁻²R∞⁻¹α²μₑᵤ⋅mP²GMJ⋅τ⋅2⁻¹ = 1.143077e54 ± 2.5e49 [𝟙] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.earthmass","page":"Physics Constants","title":"MeasureSystems.earthmass","text":"earthmass(U::UnitSystem) = mass(𝘩⁻¹𝘤⁻¹mP²GME⋅τ = 5.97217e24 ± 1.3e20,U)\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nEarth mass estimated from gravitational constant estimates (kg or slug).\n\njulia> earthmass(Metric) # kg\n𝘩⁻¹𝘤⁻¹mP²GME⋅τ = 5.97217e24 ± 1.3e20 [kg] Metric\n\njulia> earthmass(British) # slug\n𝘩⁻¹𝘤⁻¹g₀⁻¹ft⋅lb⁻¹mP²GME⋅τ = 4.092234e23 ± 9.0e18 [slug] British\n\njulia> earthmass(English) # lb\n𝘩⁻¹𝘤⁻¹lb⁻¹mP²GME⋅τ = 1.316637e25 ± 2.9e20 [lbm] English\n\njulia> earthmass(IAU) # M☉\nau⁻³kG⁻²GME⋅τ⁻²2²⁸3¹⁴5¹⁰ = 3.0034896577e-6 ± 6.0e-15 [M☉] IAU☉\n\njulia> earthmass(IAUJ) # MJ\nGME⋅GMJ⁻¹ = 0.0031463521 ± 2.2e-10 [MJ] IAUJ\n\njulia> earthmass(QCD) # mₚ\n𝘩⁻²R∞⁻¹α²μₑᵤ⋅μₚᵤ⁻¹mP²GME⋅τ⋅2⁻¹ = 3.570542e51 ± 7.899999999999999e46 [mₚ] QCD\n\njulia> earthmass(Metric)/dalton(Metric) # Da\n𝘩⁻²R∞⁻¹α²μₑᵤ⋅mP²GME⋅τ⋅2⁻¹ = 3.596523e51 ± 7.899999999999999e46 [𝟙] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.lunarmass","page":"Physics Constants","title":"MeasureSystems.lunarmass","text":"lunarmass(U::UnitSystem) = earthmass(U)/μE☾\nmass : [M], [FL⁻¹T²], [M], [M], [M]\n\nLunar mass estimated from μE☾ Earth-Moon mass ratio (kg or slug).\n\njulia> lunarmass(Metric) # kg\n7.34579e22 ± 1.6e18 [kg] Metric\n\njulia> lunarmass(British) # slug\n5.03346e21 ± 1.1e17 [slug] British\n\njulia> lunarmass(English) # lb\n1.619469e23 ± 3.6e18 [lbm] English\n\njulia> lunarmass(IAU) # M☉\n3.69430341e-8 ± 1.4e-15 [M☉] IAU☉\n\njulia> lunarmass(IAUE) # ME\n0.01230003707 ± 4.6e-10 [ME] IAUE\n\njulia> lunarmass(IAUJ) # MJ\n3.87002474e-5 ± 3.1e-12 [MJ] IAUJ\n\njulia> lunarmass(QCD) # mₚ\n4.39178e49 ± 9.7e44 [mₚ] QCD\n\njulia> lunarmass(Metric)/dalton(Metric) # Da\n4.423736e49 ± 9.8e44 [𝟙] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.gravity","page":"Physics Constants","title":"MeasureSystems.gravity","text":"gravity(U::UnitSystem) = # mass*acceleration/force\ngravityforce : [F⁻¹MLT⁻²], [𝟙], [𝟙], [𝟙], [𝟙]\n\nGravitational force reference used in technical engineering units (kg⋅m⋅N⁻¹⋅s⁻²).\n\njulia> gravity(Metric)\n𝟏 = 1.0 [𝟙] Metric\n\njulia> gravity(MetricEngineering) # m⋅kg⋅N⁻¹⋅s⁻²\ng₀ = 9.80665 [kgf⁻¹kg⋅m⋅s⁻²] MetricEngineering\n\njulia> gravity(English) # ft⋅lbm⋅lbf⁻¹⋅s⁻²\ng₀⋅ft⁻¹ = 32.17404855643044 [lbf⁻¹lbm⋅ft⋅s⁻²] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.earthradius","page":"Physics Constants","title":"MeasureSystems.earthradius","text":"earthradius(U::UnitSystem) = sqrt(earthmass(U)*gravitation(U)/gforce(U))\nlength : [L], [L], [L], [L], [L]\n\nApproximate length of standard Earth two-body radius consistent with units (m or ft).\n\njulia> earthradius(KKH) # km\ng₀⁻¹ᐟ²GME¹ᐟ²2⁻³5⁻³ = 6375.4163237 ± 6.4e-6 [km] KKH\n\njulia> earthradius(Nautical) # nm\nτ⁻¹2⁵3³5² = 3437.7467707849396 [nm] Nautical\n\njulia> earthradius(IAU) # au\ng₀⁻¹ᐟ²au⁻¹GME¹ᐟ² = 4.2617025856e-5 ± 4.3e-14 [au] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.greatcircle","page":"Physics Constants","title":"MeasureSystems.greatcircle","text":"greatcircle(U::UnitSystem) = τ*earthradius(U)\nlength : [L], [L], [L], [L], [L]\n\nApproximate length of standard Earth two-body circle consistent with units (m or ft).\n\njulia> greatcircle(KKH) # km\ng₀⁻¹ᐟ²GME¹ᐟ²τ⋅2⁻³5⁻³ = 40057.922172 ± 4.0e-5 [km] KKH\n\njulia> greatcircle(Nautical) # nm\n2⁵3³5² = 21600.0 [nm] Nautical\n\njulia> greatcircle(IAU) # au\ng₀⁻¹ᐟ²au⁻¹GME¹ᐟ²τ = 0.0002677706707 ± 2.7e-13 [au] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.gaussianmonth","page":"Physics Constants","title":"MeasureSystems.gaussianmonth","text":"gaussianmonth(U::UnitSystem) = τ*sqrt(lunardistance(U)^3/earthmass(U)/gravitation(U))\ntime : [T], [T], [T], [T], [T]\n\nOrbit time defined by lunardistance and earthmass for neglible mass satellite (s).\n\njulia> gaussianmonth(Metric) # s\nGME⁻¹ᐟ²τ⋅2⁹ᐟ²3⁹ᐟ²5⁹ᐟ²⋅1.6987431854323947e6 = 2.3718343493e6 ± 0.0024 [s] Metric\n\njulia> gaussianmonth(MPH) # h\nGME⁻¹ᐟ²τ⋅2¹ᐟ²3⁵ᐟ²5⁵ᐟ²⋅1.6987431854323947e6 = 658.84287479 ± 6.6e-7 [h] MPH\n\njulia> gaussianmonth(IAU) # D\nGME⁻¹ᐟ²τ⋅2⁻⁵ᐟ²3³ᐟ²5⁵ᐟ²⋅1.6987431854323947e6 = 27.45178645 ± 2.8e-8 [D] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.siderealmonth","page":"Physics Constants","title":"MeasureSystems.siderealmonth","text":"siderealmonth(U::UnitSystem) = gaussianmonth(U)/√(𝟏+lunarmass(IAU))\ntime : [T], [T], [T], [T], [T]\n\nOrbit time defined by standard lunardistance and the Earth-Moon system mass (s).\n\njulia> siderealmonth(Metric) # s\n2.3573807233e6 ± 0.0024 [s] Metric\n\njulia> siderealmonth(MPH) # h\n654.8279787 ± 6.7e-7 [h] MPH\n\njulia> siderealmonth(IAU) # D\n27.284499112 ± 2.8e-8 [D] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.synodicmonth","page":"Physics Constants","title":"MeasureSystems.synodicmonth","text":"synodicmonth(U::UnitSystem) = 𝟏/(𝟏/siderealmonth(U)-𝟏/siderealyear(U))\ntime : [T], [T], [T], [T], [T]\n\nOrbit time defined by siderealmonth and siderealyear of Sun-Earth-Moon system (s).\n\njulia> synodicmonth(Metric) # s\n2.5476922935e6 ± 0.0028 [s] Metric\n\njulia> synodicmonth(MPH) # h\n707.69230376 ± 7.9e-7 [h] MPH\n\njulia> synodicmonth(IAU) # D\n29.487179323 ± 3.3e-8 [D] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.gaussianyear","page":"Physics Constants","title":"MeasureSystems.gaussianyear","text":"gaussianyear(U::UnitSystem) = turn(U)/gaussgravitation(U)\ntime : [T], [T], [T], [T], [T]\n\nOrbit time defined by gaussgravitation constant kG for neglible mass satellite (s).\n\njulia> gaussianyear(Metric) # s\nkG⁻¹2¹⁴3⁷5⁵ = 3.155819598840209e7 [s] Metric\n\njulia> gaussianyear(MPH) # h\nkG⁻¹2¹⁰3⁵5³ = 8766.165552333914 [h] MPH\n\njulia> gaussianyear(IAU) # D\nkG⁻¹2⁷3⁴5³ = 365.2568980139131 [D] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.siderealyear","page":"Physics Constants","title":"MeasureSystems.siderealyear","text":"siderealyear(U::UnitSystem) = gaussianyear(U)/√(𝟏+earthmass(IAU)+lunarmass(IAU))\ntime : [T], [T], [T], [T], [T]\n\nOrbit time defined by gaussgravitation constant kG and Earth-Moon system mass (s).\n\njulia> siderealyear(Metric) # s\n3.15581480132261e7 ± 9.8e-8 [s] Metric\n\njulia> siderealyear(MPH) # h\n8766.152225896138 ± 2.7e-11 [h] MPH\n\njulia> siderealyear(IAU) # D\n365.2563427456724 ± 1.1e-12 [D] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.jovianyear","page":"Physics Constants","title":"MeasureSystems.jovianyear","text":"jovianyear(U::UnitSystem) = τ*day(U)*√(jupiterdistance(U)^3/solarmass(U)/gravitation(U))/√(𝟏+jupitermass(IAU))\ntime : [T], [T], [T], [T], [T]\n\nOrbit time defined by jupiterdistance and the Sun-Jupiter system mass (s).\n\njulia> jovianyear(Metric) # s\n3.7444429214e8 ± 0.017 [s] Metric\n\njulia> jovianyear(MPH) # h\n104012.3033722 ± 4.7e-6 [h] MPH\n\njulia> jovianyear(IAU) # D\n4333.84597384 ± 2.0e-7 [D] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.radarmile","page":"Physics Constants","title":"MeasureSystems.radarmile","text":"radarmile(U::UnitSystem) = 𝟐*nauticalmile(U)/lightspeed(U)\ntime : [T], [T], [T], [T], [T]\n\nUnit of time delay from a two-way nauticalmile radar return (s).\n\njulia> radarmile(Metric)\n𝘤⁻¹g₀⁻¹ᐟ²GME¹ᐟ²τ⋅2⁻⁴3⁻³5⁻² = 1.2372115338e-5 ± 1.2e-14 [s] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.hubble","page":"Physics Constants","title":"MeasureSystems.hubble","text":"hubble(U::UnitSystem) = time(U,Hubble)\nfrequency : [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹]\n\nHubble universe expansion frequency parameter.\n\njulia> hubble(Metric)\nH0⋅au⁻¹τ⋅2⁻¹⁰3⁻⁴5⁻⁶ = 2.193e-18 ± 1.4e-20 [Hz] Metric\n\njulia> hubble(Hubble)\n𝟏 = 1.0 [T⁻¹] Hubble\n\njulia> hubble(Cosmological)\nΩΛ⁻¹ᐟ²τ¹ᐟ²2⋅3⁻¹ᐟ² = 3.487 ± 0.014 [T⁻¹] Cosmological\n\njulia> 𝟏/hubble(Metric)/year(Metric)\nH0⁻¹aⱼ⁻¹au⋅τ⁻¹2³3⋅5⁴ = 1.4452e10 ± 9.0e7 [𝟙] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.cosmological","page":"Physics Constants","title":"MeasureSystems.cosmological","text":"cosmological(U::UnitSystem) = 𝟑*darkenergydensity(U)*(hubble(U)/lightspeed(U))^2\nfuelefficiency : [L⁻²], [L⁻²], [L⁻²], [L⁻²], [L⁻²]\n\nCosmological constant from Einstein's controversial theory expanded on by Hubble.\n\njulia> cosmological(Metric)\n𝘤⁻²ΩΛ⋅H0²au⁻²τ²2⁻²⁰3⁻⁷5⁻¹² = 1.1059999999999999e-52 ± 1.6e-54 [m⁻²] Metric\n\njulia> cosmological(Hubble)\nΩΛ⋅3 = 2.067 ± 0.017 [T⁻²] Hubble\n\njulia> cosmological(Cosmological)\nτ⋅2² = 25.132741228718345 [T⁻²] Cosmological\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Constants-Index-1","page":"Physics Constants","title":"Constants Index","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Pages = [\"constants.md\",\"unitsystems.md\"]","category":"page"},{"location":"unitsystems.html#The-UnitSystem-1","page":"The UnitSystem","title":"The UnitSystem","text":"","category":"section"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Physical unit system constants (Metric, English, Natural, etc...)","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"(Image: DOI)","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Pages = [\"unitsystems.md\"]","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Pages = [\"constants.md\",\"convert.md\",\"units.md\"]\nDepth = 1","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"In aggregate, the UnitSystem data generated here constitutes a new universal standardization for dimensional analysis, which generalizes upon previous historical systems up to the 2019 redefinition and unifies them in a common Universe. This enables a more precise and generalized standardization than the 2019 redefinition, which was comparatively limited in scope. Specified default UnitSystem values are to be taken as a newly defined mutually-compatible recommended standard, verified to be consistent and coherent. A UnitSystem can only be useful as a measuring standard if it can be scientifically reproduced, so the data here has been implemented in several important scientific programming languages (initially in the Julia language but also Wolfram language and Rust langauge) as well as presented abstractly in terms of dimensional formulas.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"In fact there is nothing transcendental about dimensions; the ultimate principle is precisely expressible (in Newton's terminology) as one of similitude, exact or approximate, to be tested by the rule that mere change in the magnitudes of the ordered scheme of units of measurement that is employed must not affect sensibly the forms of the equations that are the adequate expression of the underlying relations of the problem. (J.L.)","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Specifications for dimensional units are in the UnitSystems.jl and Similitude.jl and MeasureSystems.jl repositories. The three packages are designed so that they can be interchanged with compatibility. On its own UnitSystems is the fastest package, while Similitude (provides Quantity type) and MeasureSystems (introduces Measurements.jl uncertainty) build additional features on top of UnitSystems base defintions. Additionally, in the UnitSystems repository there is an equivalent Wolfram language paclet Kernel and also an unmaintained Rust src implementation. Defaults are shared: Metric, SI2019, CODATA, Conventional, International, InternationalMean, MetricTurn, MetricGradian, MetricDegree, MetricArcminute, MetricArcsecond, MetricEngineering, GravitationalMetric, FPS, IPS, British, English, Survey, Gauss, LorentzHeaviside, EMU, ESU, IAU, IAUE, IAUJ, Hubble, Cosmological, CosmologicalQuantum, Meridian, Nautical, MPH, KKH, MTS, FFF, Planck, PlanckGauss, Stoney, Hartree, Rydberg, Schrodinger, Electronic, Natural, NaturalGauss, QCD, QCDGauss, QCDoriginal.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> using UnitSystems # or Similitude or MeasureSystems","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"UnitSystems.similitude","category":"page"},{"location":"unitsystems.html#UnitSystems.similitude","page":"The UnitSystem","title":"UnitSystems.similitude","text":"UnitSystems.similitude() = haskey(ENV,\"SIMILITUDE\")\n\nAn optional environment variable ENV[\"SIMILITUDE\"] induces UnitSystems.similitude() to return true, giving flexibility for building dependencies whenever it is desirable to toggle usage between UnitSystems (default) and Similitude (requires environment variable specification). For example, in MeasureSystems and Geophysics this option is used to increase flexibility with variety in local compilation workflow.\n\n\n\n\n\n","category":"function"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"A UnitSystem is a consistent set of dimensional values selected to accomodate a particular use case standardization. It is possible to convert derived physical quantities from any UnitSystem specification into any other using accurate values. Eleven fundamental constants kB, ħ, 𝘤, μ₀, mₑ, Mᵤ, Kcd, θ, λ, αL, g₀ are used to govern a specific unit system consistent scaling. These are the constants boltzmann, planckreduced, lightspeed, vacuumpermeability, electronmass, molarmass, luminousefficacy, angle, rationalization, lorentz, and gravity. Different choices of natural units or physical measurements result in a variety of unit systems for many purposes.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"k_B qquad hbar qquad c qquad mu_0 qquad m_e qquad M_u qquad K_cd qquad theta qquad lambda qquad alpha_L qquad g_0","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Historically, older electromagnetic unit systems also relied on a rationalization constant λ and a lorentz force proportionality constant αL. In most unit systems these extra constants have a value of 1 unless specified.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"MeasureSystems.UnitSystem","category":"page"},{"location":"unitsystems.html#UnitSystems.UnitSystem","page":"The UnitSystem","title":"UnitSystems.UnitSystem","text":"UnitSystem{kB, ħ, 𝘤, μ₀, mₑ, Mᵤ, (Kcd, θ, λ, αL, g₀, ...)}\n\nFundamental constants of physics are: kB Boltzmann's constant, ħ reduced Planck's constant, 𝘤 speed of light, μ₀ vacuum permeability, mₑ electron rest mass, Mᵤ molar mass, Kcd luminous efficacy, θ angle measure, λ Gauss rationalization, αL Lorentz's constant, and g₀ gravitational force reference. Primarily the Metric SI unit system is used in addition to the historic English engineering unit system. These constants induce derived values for avogadro, boltzmann, molargas, planck, planckreduced, lightspeed, planckmass, dalton, protonmass, electronmass, newton, einstein, vacuumpermeability, vacuumpermittivity, electrostatic, and additional constants molarmass, luminousefficacy, gravity, angle, turn, spat, stefan, radiationdensity, magnetostatic, lorentz, biotsavart, rationalization, vacuumimpedance, elementarycharge, magneton, conductancequantum, faraday, magneticfluxquantum, josephson, klitzing, hartree, rydberg, bohr.\n\nStandardized unit/derived quantities are hyperfine, loschmidt, wienwavelength, wienfrequency, mechanicalheat, eddington, solarmass, jupitermass, earthmass, lunarmass, earthradius, greatcircle, radarmile, hubble, cosmological, radian, steradian, degree, squaredegree, gradian, bradian, arcminute, arcsecond, second, minute, hour, day, gaussianmonth, siderealmonth, synodicmonth, year, gaussianyear, siderealyear, jovianyear, angstrom, inch, foot, surveyfoot, yard, meter, earthmeter, mile, statutemile, meridianmile, admiraltymile, nauticalmile, lunardistance, astronomicalunit, jupiterdistance, lightyear, parsec, barn, hectare, acre, surveyacre, liter, gallon, quart, pint, cup, fluidounce, teaspoon, tablespoon, bubnoff, ips, fps, fpm, ms, kmh, mph, knot, mps, grain, gram, earthgram, kilogram, tonne, ton, pound, ounce, slug, slinch, hyl, dyne, newton, poundal, poundforce, kilopond, psi, pascal, bar, barye, technicalatmosphere, atmosphere, inchmercury, torr, electronvolt, erg, joule, footpound, calorie, kilocalorie, meancalorie, earthcalorie, thermalunit, gasgallon, tontnt, watt, horsepower, horsepowerwatt, horsepowermetric, electricalhorsepower, tonsrefrigeration, boilerhorsepower, coulomb, earthcoulomb, ampere, volt, henry, ohm, siemens, farad, weber, tesla, abcoulomb, abampere, abvolt, abhenry, abohm, abmho, abfarad, maxwell, gauss, oersted, gilbert, statcoulomb, statampere, statvolt, stathenry, statohm, statmho, statfarad, statweber, stattesla, kelvin, rankine, celsius, fahrenheit, sealevel, boiling, mole, earthmole, poundmole, slugmole, slinchmole, katal, amagat, lumen, candela, lux, phot, footcandle, nit, apostilb, stilb, lambert, footlambert, bril, neper, bel, decibel, hertz, apm, rpm, kayser, diopter, gforce, galileo, eotvos, darcy, poise, reyn, stokes, rayl, mpge, langley, jansky, solarflux, curie, sievert, roentgen, rem.\n\nAdditional reference UnitSystem variants: EMU, ESU, Gauss, LorentzHeaviside, SI2019, SI1976, CODATA, Conventional, International, InternationalMean, MetricEngineering, GravitationalMetric, IAU, IAUE, IAUJ, FPS, IPS, British, Survey, Hubble, Cosmological, CosmologicalQuantum, Meridian, Nautical, MPH, KKH, MTS, FFF; and natural atomic units based on gravitational coupling and finestructure constant (Planck, PlanckGauss, Stoney, Hartree, Rydberg, Schrodinger, Electronic, Natural, NaturalGauss, QCD, QCDGauss, and QCDoriginal).\n\nDimensional unit conversions:\n\nMechanics: angle, solidangle, time, length, area, volume, wavenumber, angularwavenumber, fuelefficiency, numberdensity, frequency, angularfrequency, frequencydrift, speed, acceleration, jerk, snap, crackle, pop, volumeflow, inertia, mass, massflow, lineardensity, areadensity, density, specificweight, specificvolume, force, specificforce, gravityforce, pressure, compressibility, viscosity, diffusivity, rotationalinertia, impulse, momentum, angularmomentum, yank, energy, specificenergy, action, fluence, power, powerdensity, irradiance, radiance, radiantintensity, spectralflux, spectralexposure, soundexposure, impedance, specificimpedance, admittance, compliance, inertance; Electromagnetics: charge, chargedensity, linearchargedensity, exposure, mobility, current, currentdensity, resistance, conductance, resistivity, conductivity, capacitance, inductance, reluctance, permeance, permittivity, permeability, susceptibility, specificsusceptibility, demagnetizingfactor, vectorpotential, electricpotential, magneticpotential, electricfield, magneticfield, electricflux, magneticflux, electricfluxdensity, magneticfluxdensity, electricdipolemoment, magneticdipolemoment, electricpolarizability, magneticpolarizability, magneticmoment, specificmagnetization, polestrength; Thermodynamics: temperature, entropy, specificentropy, volumeheatcapacity, thermalconductivity, thermalconductance, thermalresistivity, thermalresistance, thermalexpansion, lapserate, molarmass, molality, molaramount, molarity, molarvolume, molarentropy, molarenergy, molarconductivity, molarsusceptibility, catalysis, specificity, luminousflux, luminousintensity, luminance, illuminance, luminousenergy, luminousexposure, luminousefficacy.\n\n\n\n\n\n","category":"type"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Specification of Universe with the dimensionless Coupling constants coupling, finestructure, electronunit, protonunit, protonelectron, and darkenergydensity. Alterations to these values can be facilitated and quantified using parametric polymorphism. Due to the Coupling interoperability, the MeasureSystems package is made possible to support calculations with Measurements having error standard deviations.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Similar packages: UnitSystems.jl, Similitude.jl, MeasureSystems.jl, PhysicalConstants.jl, MathPhysicalConstants.jl, Unitful.jl, UnitfulUS.jl, UnitfulAstro.jl, UnitfulAtomic.jl, NaturallyUnitful.jl, and UnitfulMoles.jl.","category":"page"},{"location":"unitsystems.html#Default-UnitSystems-1","page":"The UnitSystem","title":"Default UnitSystems","text":"","category":"section"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"By default, this package provides a modern unified re-interpretation of various historical unit systems which were previously incompatible. In order to make each UnitSystem consistently compatible with each other, a few convenience assumptions are made. Specifically, it is assumed that all default modern unit systems share the same common Universe of dimensionless constants, although this can be optionally changed. Therefore, the philosophy is to characterize differences among UnitSystem instances by means of dimensional constants. As a result, all the defaults are ideal modern variants of these historical unit systems based on a common underlying Universe, which are completely consistent and compatible with each other. These default UnitSystem values are to be taken as a newly defined mutually-compatible recommended standard, verified to be consistent and coherent.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Pages = [\"unitsystems.md\"]","category":"page"},{"location":"unitsystems.html#Metric-SI-Unit-Systems-1","page":"The UnitSystem","title":"Metric SI Unit Systems","text":"","category":"section"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"In the Systeme International d'Unites (the SI units) the UnitSystem constants are derived from the most accurate possible physical measurements and a few exactly defined constants. Exact values are the avogadro number, boltzmann constant, planck constant, lightspeed definition, and elementary charge definition.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"N_A = 602214076mathrme23\nk_B = 1380649mathrme-23\nh = 662607015mathrme-34\nc = 299792458\ne = 1602176634mathrme-19","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> NA # avogadro\nNA = 6.02214076e23\n\njulia> kB # boltzmann\nkB = 1.380649e-23\n\njulia> 𝘩 # planck\n𝘩 = 6.62607015e-34\n\njulia> 𝘤 # lightspeed\n𝘤 = 2.99792458e8\n\njulia> 𝘦 # charge\n𝘦 = 1.602176634e-19","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Physical measured values with uncertainty are electron to proton mass ratio μₑᵤ, proton to atomic mass ratio μₚᵤ, inverted fine structure constant αinv, the Rydberg R∞ constant, and the Planck mass mP.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"mu_eu = fracm_em_u approx frac118229\nmu_pu = fracm_pm_u approx 100727647\nalpha approx frac1137036\nR_infty approx 1097373mathrme7\nm_P approx 2176434mathrme-8","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> μₑᵤ # electronunit\nμₑᵤ = 0.000548579909065 ± 1.6e-14\n\njulia> μₚᵤ # protonunit\nμₚᵤ = 1.007276466621 ± 5.3e-11\n\njulia> αinv # 1/finestructure\nα⁻¹ = 137.035999084 ± 2.1e-8\n\njulia> R∞ # rydbgerg\nR∞ = 1.097373156816e7 ± 2.1e-5\n\njulia> mP # planckmass\nmP = 2.176434e-8 ± 2.4e-13","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"From these numbers along with the optional 4π Gaussian rationalization value, the constants planckreduced, permeability, electronmass, molarmass, and proton to electon mass ratio are computed.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"hbar = frach2pi qquad\nmu_0 = frac2halphace^2 qquad\nm_e = frac2hR_inftycalpha^2 qquad\nM_u = fracm_emu_euN_A = frac2h R_infty N_Acalpha^2mu_eu qquad\nmu_pe = fracmu_pumu_eu = fracm_pm_e","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> ħ # planckreduced\n𝘩*τ⁻¹ = 1.0545718176461565e-34\n\njulia> μ₀ # vacuumpermeability\n𝘩*𝘤⁻¹𝘦⁻²α*2 = 1.25663706212e-6 ± 1.9e-16\n\njulia> mₑ # electronmass\n𝘩*𝘤⁻¹R∞*α⁻²2 = 9.1093837016e-31 ± 2.8e-40\n\njulia> Mᵤ # molarmass\n𝘩*𝘤⁻¹NA*R∞*α⁻²μₑᵤ⁻¹2 = 0.00099999999966 ± 3.1e-13\n\njulia> μₚₑ # protonelectron\nμₑᵤ⁻¹μₚᵤ = 1836.15267343 ± 1.1e-7","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Additional reference values include the ground state hyperfine structure transition frequency of caesium-133 ΔνCs and luminousefficacy of monochromatic radiation Kcd of 540 THz.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> ΔνCs # hyperfine\nΔνCs = 9.19263177e9\n\njulia> Kcd # luminousefficacy\nKcd = 683.01969009009","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"As result, there are variants based on the original molarmass constant and Gaussian permeability along with the 2019 redefined exact values. The main difference between the two is determined by M_u and mu_0 offset.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"(M_umu_0R_ug_0hcR_inftyalphamu_eu) quad mapsto quad\nm_e = frac2R_infty hcalpha^2 quad\nk_B = fracm_e R_umu_eu g_0 M_u quad\nK_cd = 683frac555016tilde h555h","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Construction of UnitSystem instances based on specifying the the constants molarmass, the vacuumpermeability, and the molargas along with some other options is facilitated by MetricSystem. This construction helps characterize the differences between ","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"MetricSystem\nMeasureSystems.Metric\nSI2019\nSI1976\nMetricEngineering","category":"page"},{"location":"unitsystems.html#MeasureSystems.MetricSystem","page":"The UnitSystem","title":"MeasureSystems.MetricSystem","text":"MetricSystem(Mu=Mᵤ,μ0=μ₀,Ru=Rᵤ,g0=𝟏,θ=𝟏,h=𝘩)\n\nConstructs new UnitSystem from molarmass constant, vacuumpermeability, molargas constant, gravity force reference, angle scale, and planck constant.\n\nExamples include SI2019, Metric, SI2019Engineering, MetricEngineering, SI1976, MetricDegree, MetricGradian. In addition, the ConventionalSystem constructor further builds on MetricSystem, resulting in variations.\n\n\n\n\n\n","category":"function"},{"location":"unitsystems.html#MeasureSystems.Metric","page":"The UnitSystem","title":"MeasureSystems.Metric","text":"Metric = MetricSystem(milli,𝟐*τ/𝟏𝟎^7)\n\nStandard Metric system based on exact molarmass and vacuumpermeability.\n\njulia> boltzmann(Metric) # J⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³ = 1.3806489995299998e-23 ± 4.2999999999999996e-33 [J⋅K⁻¹] Metric\n\njulia> planckreduced(Metric) # J⋅s⋅rad⁻¹\n𝘩⋅τ⁻¹ = 1.0545718176461565e-34 [J⋅s] Metric\n\njulia> lightspeed(Metric) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] Metric\n\njulia> vacuumpermeability(Metric) # H⋅m⁻¹\nτ⋅2⁻⁶5⁻⁷ = 1.2566370614359173e-6 [H⋅m⁻¹] Metric\n\njulia> electronmass(Metric) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2 = 9.1093837016e-31 ± 2.8e-40 [kg] Metric\n\njulia> molarmass(Metric) # kg⋅mol⁻¹\n2⁻³5⁻³ = 0.001 [kg⋅mol⁻¹] Metric\n\njulia> luminousefficacy(Metric) # lm⋅W⁻¹\nKcd = 683.01969009009 [lm⋅W⁻¹] Metric\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.SI2019","page":"The UnitSystem","title":"MeasureSystems.SI2019","text":"SI2019 = MetricSystem(Mᵤ,μ₀)\n\nSysteme International d'Unites based on approximate molarmass and vacuumpermeability.\n\njulia> boltzmann(SI2019) # J⋅K⁻¹\nkB = 1.380649e-23 [J⋅K⁻¹] SI2019\n\njulia> planckreduced(SI2019) # J⋅s⋅rad⁻¹\n𝘩⋅τ⁻¹ = 1.0545718176461565e-34 [J⋅s] SI2019\n\njulia> lightspeed(SI2019) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] SI2019\n\njulia> vacuumpermeability(SI2019) # H⋅m⁻¹\n𝘩⋅𝘤⁻¹𝘦⁻²α⋅2 = 1.25663706212e-6 ± 1.9e-16 [H⋅m⁻¹] SI2019\n\njulia> electronmass(SI2019) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2 = 9.1093837016e-31 ± 2.8e-40 [kg] SI2019\n\njulia> molarmass(SI2019) # kg⋅mol⁻¹\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2 = 0.00099999999966 ± 3.1e-13 [kg⋅mol⁻¹] SI2019\n\njulia> luminousefficacy(SI2019) # lm⋅W⁻¹\nKcd = 683.01969009009 [lm⋅W⁻¹] SI2019\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.SI1976","page":"The UnitSystem","title":"MeasureSystems.SI1976","text":"SI1976 = MetricSystem(milli,𝟐*τ/𝟏𝟎^7,8.31432)\n\nReference UnitSystem with universal gas constant of 8.31432 from 1976 standard atmosphere.\n\njulia> boltzmann(SI1976) # J⋅K⁻¹\n𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³⋅8.31432 = 1.38062531722e-23 ± 4.2999999999999996e-33 [kg⋅m²s⁻²K⁻¹] SI1976\n\njulia> planckreduced(SI1976) # J⋅s⋅rad⁻¹\n𝘩⋅τ⁻¹ = 1.0545718176461565e-34 [kg⋅m²s⁻¹] SI1976\n\njulia> lightspeed(SI1976) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] SI1976\n\njulia> vacuumpermeability(SI1976) # H⋅m⁻¹\nτ⋅2⁻⁶5⁻⁷ = 1.2566370614359173e-6 [kg⋅m⋅C⁻²] SI1976\n\njulia> electronmass(SI1976) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2 = 9.1093837016e-31 ± 2.8e-40 [kg] SI1976\n\njulia> molarmass(SI1976) # kg⋅mol⁻¹\n2⁻³5⁻³ = 0.001 [kg⋅mol⁻¹] SI1976\n\njulia> luminousefficacy(SI1976) # lm⋅W⁻¹\nKcd = 683.01969009009 [kg⁻¹m⁻²s³lm] SI1976\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.MetricEngineering","page":"The UnitSystem","title":"MeasureSystems.MetricEngineering","text":"MetricEngineering = MetricSystem(milli,𝟐*τ/𝟏𝟎^7,Rᵤ,g₀)\n\nStandard MetricEngineering system based on kilogram and kilopond (kilogram-force) units.\n\njulia> boltzmann(MetricEngineering) # kgf⋅m⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹g₀⁻¹2⁴5³ = 1.40787016925e-24 ± 4.3e-34 [kgf⋅m⋅K⁻¹] MetricEngineering\n\njulia> planckreduced(MetricEngineering) # kgf⋅m⋅s⋅rad⁻¹\n𝘩⋅g₀⁻¹τ⁻¹ = 1.0753639802033891e-35 [kgf⋅m⋅s⋅rad⁻¹] MetricEngineering\n\njulia> lightspeed(MetricEngineering) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] MetricEngineering\n\njulia> vacuumpermeability(MetricEngineering) # kgf⋅s²⋅C⁻²\ng₀⁻¹τ⋅2⁻⁶5⁻⁷ = 1.2814131853751459e-7 [kgf⋅s²C⁻²rad⁻²] MetricEngineering\n\njulia> electronmass(MetricEngineering) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2 = 9.1093837016e-31 ± 2.8e-40 [kg] MetricEngineering\n\njulia> molarmass(MetricEngineering) # kg⋅mol⁻¹\n2⁻³5⁻³ = 0.001 [kg⋅mol⁻¹] MetricEngineering\n\njulia> luminousefficacy(MetricEngineering) # lm⋅s⋅m⁻¹⋅kgf⁻¹\nKcd⋅g₀ = 6698.135043821981 [kgf⁻¹m⁻¹s⋅lm] MetricEngineering\n\njulia> gravity(MetricEngineering) # kg⋅m⋅kgf⁻¹⋅s⁻²\ng₀ = 9.80665 [kgf⁻¹kg⋅m⋅s⁻²] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Additional Metric variants with angle scaling include MetricTurn, MetricGradian, MetricDegree, MetricArcminute, MetricArcsecond.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Historically, the josephson and klitzing constants have been used to define Conventional and CODATA variants.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"(R_KK_J) quad mapsto quad\nmu_0 = frac2R_Kalphac quad\nh = frac4R_KK_J^2 quad\nm_e = frac2R_infty hcalpha^2 quad\nk_B = fracm_e R_umu_eu M_u quad\nK_cd = 683frac555016times 4555R_KK_J^2h","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"ConventionalSystem\nConventional\nCODATA","category":"page"},{"location":"unitsystems.html#MeasureSystems.ConventionalSystem","page":"The UnitSystem","title":"MeasureSystems.ConventionalSystem","text":"ConventionalSystem(RK,KJ,Ru=Rᵤ,g0=𝟏) = MetricSystem(milli,𝟐*RK/𝘤*α,Ru,g0,𝟐^2/RK/KJ^2)\n\nConstructs new UnitSystem from von klitzing constant and josephson constant, with an optional specification of universal gas constant and gravity reference constant.\n\nExamples include Conventional (based on 1990) and CODATA (based on 2014).\n\n\n\n\n\n","category":"function"},{"location":"unitsystems.html#MeasureSystems.Conventional","page":"The UnitSystem","title":"MeasureSystems.Conventional","text":"Conventional = ConventionalSystem(RK1990,KJ2014)\n\nConventional electronic UnitSystem with 1990 tuned josephson and klitzing constants.\n\njulia> josephson(Conventional) # Hz⋅V⁻¹\nKJ90 = 4.835979e14 [Hz⋅V⁻¹] Conventional\n\njulia> klitzing(Conventional) # Ω\nRK90 = 25812.807 [Ω] Conventional\n\njulia> boltzmann(Conventional) # J⋅K⁻¹\nkB⋅NA⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹RK90⁻¹KJ90⁻²2⁶5³ = 1.3806487295599998e-23 ± 4.2999999999999996e-33 [J⋅K⁻¹] Conventional\n\njulia> planckreduced(Conventional) # J⋅s⋅rad⁻¹\nRK90⁻¹KJ90⁻²τ⁻¹2² = 1.054571611438857e-34 [J⋅s] Conventional\n\njulia> lightspeed(Conventional) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] Conventional\n\njulia> vacuumpermeability(Conventional) # H⋅m⁻¹\n𝘤⁻¹α⋅RK90⋅2 = 1.25663703976e-6 ± 1.9e-16 [H⋅m⁻¹] Conventional\n\njulia> electronmass(Conventional) # kg\n𝘤⁻¹R∞⋅α⁻²RK90⁻¹KJ90⁻²2³ = 9.1093819203e-31 ± 2.8e-40 [kg] Conventional\n\njulia> molarmass(Conventional) # kg⋅mol⁻¹\n2⁻³5⁻³ = 0.001 [kg⋅mol⁻¹] Conventional\n\njulia> luminousefficacy(Conventional) # lm⋅W⁻¹\n𝘩⋅Kcd⋅RK90⋅KJ90²2⁻² = 683.0198236454071 [lm⋅W⁻¹] Conventional\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.CODATA","page":"The UnitSystem","title":"MeasureSystems.CODATA","text":"CODATA = ConventionalSystem(RK2014,KJ2014,Rᵤ2014)\n\nReference UnitSystem based on Committee on Data of the International Science Council.\n\njulia> josephson(CODATA) # Hz⋅V⁻¹\nKJ = 4.835978525e14 ± 3.0e6 [Hz⋅V⁻¹] CODATA\n\njulia> klitzing(CODATA) # Ω\nRK = 25812.8074555 ± 5.9e-6 [Ω] CODATA\n\njulia> boltzmann(CODATA) # J⋅K⁻¹\n𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹RK⁻¹KJ⁻²Rᵤ2014⋅2⁶5³ = 1.38064851e-23 ± 8.0e-30 [J⋅K⁻¹] CODATA\n\njulia> planckreduced(CODATA) # J⋅s⋅rad⁻¹\nRK⁻¹KJ⁻²τ⁻¹2² = 1.0545718e-34 ± 1.3e-42 [J⋅s] CODATA\n\njulia> lightspeed(CODATA) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] CODATA\n\njulia> vacuumpermeability(CODATA) # H⋅m⁻¹\n𝘤⁻¹α⋅RK⋅2 = 1.25663706194e-6 ± 3.5e-16 [H⋅m⁻¹] CODATA\n\njulia> electronmass(CODATA) # kg\n𝘤⁻¹R∞⋅α⁻²RK⁻¹KJ⁻²2³ = 9.10938355e-31 ± 1.0999999999999999e-38 [kg] CODATA\n\njulia> molarmass(CODATA) # kg⋅mol⁻¹\n2⁻³5⁻³ = 0.001 [kg⋅mol⁻¹] CODATA\n\njulia> luminousefficacy(CODATA) # lm⋅W⁻¹\n𝘩⋅Kcd⋅RK⋅KJ²2⁻² = 683.0197015 ± 8.5e-6 [lm⋅W⁻¹] CODATA\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Originally, the practical units where specified by resistance and electricpotential.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"(OmegaV) quad mapsto quad\nk_BfracOmegaV^2 quad\nhfracOmegaV^2 quad\ncfrac11 quad\nmu_0fracOmegaV^2 quad\nm_efracOmegaV^2 quad\nM_ufracOmegaV^2 quad\nK_cdfracV^2Omega","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"ElectricSystem\nInternational\nInternationalMean","category":"page"},{"location":"unitsystems.html#UnitSystems.ElectricSystem","page":"The UnitSystem","title":"UnitSystems.ElectricSystem","text":"ElectricSystem(U::UnitSystem,Ω,V) = EntropySystem(U,𝟏,𝟏,V^2/Ω,𝟏,vacuumpermeability(U)/Ω)\n\nConstructs new UnitSystem from U with mass rescaled by electricpotential and resistance. In the International system, Ωᵢₜ and Vᵢₜ are used as definitions from the more recent United States results, while in InternationalMean an earlier estimate based on other nations was used.\n\n\n\n\n\n","category":"function"},{"location":"unitsystems.html#MeasureSystems.International","page":"The UnitSystem","title":"MeasureSystems.International","text":"International = ElectricSystem(Metric,Ωᵢₜ = 1.000495,Vᵢₜ = 1.00033)\n\nInternational UnitSystem with United States measurements of Ωᵢₜ and Vᵢₜ.\n\njulia> resistance(International,Metric) # Ω⋅Ω⁻¹\nΩᵢₜ = 1.000495 [kg⋅m⋅s⁻²C⁻²]/[kg⋅m⋅s⁻²C⁻²] International -> Metric\n\njulia> electricpotential(International,Metric) # V⋅V⁻¹\nVᵢₜ = 1.00033 [V⋅m⁻¹]/[V⋅m⁻¹] International -> Metric\n\njulia> boltzmann(International) # J⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹Ωᵢₜ⋅Vᵢₜ⁻²2⁴5³ = 1.3804211924699998e-23 ± 4.2e-33 [J⋅K⁻¹] International\n\njulia> planckreduced(International) # J⋅s⋅rad⁻¹\n𝘩⋅Ωᵢₜ⋅Vᵢₜ⁻²τ⁻¹ = 1.0543978133151816e-34 [J⋅s] International\n\njulia> lightspeed(International) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] International\n\njulia> vacuumpermeability(International) # H⋅m⁻¹\nΩᵢₜ⁻¹τ⋅2⁻⁶5⁻⁷ = 1.2560153338456637e-6 [H⋅m⁻¹] International\n\njulia> electronmass(International) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²Ωᵢₜ⋅Vᵢₜ⁻²2 = 9.1078806534e-31 ± 2.8e-40 [kg] International\n\njulia> molarmass(International) # kg⋅mol⁻¹\nΩᵢₜ⋅Vᵢₜ⁻²2⁻³5⁻³ = 0.0009998350000179567 [kg⋅mol⁻¹] International\n\njulia> luminousefficacy(International) # lm⋅W⁻¹\nKcd⋅Ωᵢₜ⁻¹Vᵢₜ² = 683.1324069249656 [lm⋅W⁻¹] International\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.InternationalMean","page":"The UnitSystem","title":"MeasureSystems.InternationalMean","text":"InternationalMean = ElectricSystem(Metric,1.00049,1.00034)\n\nInternational UnitSystem with mean measurements of Ωᵢₜ and Vᵢₜ.\n\njulia> resistance(InternationalMean,Metric) # Ω⋅Ω⁻¹\n1.00049 = 1.00049 [kg⋅m⋅s⁻²C⁻²]/[kg⋅m⋅s⁻²C⁻²] InternationalMean -> Metric\n\njulia> electricpotential(InternationalMean,Metric) # V⋅V⁻¹\n1.00034 = 1.00034 [V⋅m⁻¹]/[V⋅m⁻¹] InternationalMean -> Metric\n\njulia> boltzmann(InternationalMean) # J⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³/1.0001900224889804 = 1.38038669501e-23 ± 4.2e-33 [J⋅K⁻¹] InternationalMean\n\njulia> planckreduced(InternationalMean) # J⋅s⋅rad⁻¹\n𝘩⋅τ⁻¹/1.0001900224889804 = 1.0543714633563797e-34 [J⋅s] InternationalMean\n\njulia> lightspeed(InternationalMean) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] InternationalMean\n\njulia> vacuumpermeability(InternationalMean) # H⋅m⁻¹\nτ⋅2⁻⁶5⁻⁷/1.00049 = 1.2560216108466022e-6 [H⋅m⁻¹] InternationalMean\n\njulia> electronmass(InternationalMean) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2/1.0001900224889804 = 9.1076530427e-31 ± 2.8e-40 [kg] InternationalMean\n\njulia> molarmass(InternationalMean) # kg⋅mol⁻¹\n2⁻³5⁻³/1.0001900224889804 = 0.0009998100136127059 [kg⋅mol⁻¹] InternationalMean\n\njulia> luminousefficacy(International) # lm⋅W⁻¹\nKcd⋅Ωᵢₜ⁻¹Vᵢₜ² = 683.1324069249656 [lm⋅W⁻¹] International\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#Electromagnetic-CGS-Systems-1","page":"The UnitSystem","title":"Electromagnetic CGS Systems","text":"","category":"section"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Alternatives to the SI unit system are the centimetre-gram-second variants, where the constants are rescaled with centi meter and milli kilogram units along with introduction of additional rationalization and lorentz constants or electromagnetic units.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"(mu_0lambdaalpha_Ltlmg_0) quad mapsto quad\nfrack_Bt^2m l^2g_0 quad\nfrachtml^2g_0 quad\ncfractl quad\nfracm_em quad\nmu_0 quad\nfracM_um quad\nK_cdfracml^2g_0t^3 quad\nlambda quad alpha_L","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"There are multiple choices of elctromagnetic units for these variants based on electromagnetic units, electrostatic units, Gaussian non-rationalized units, and Lorentz-Heaviside rationalized units.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"GaussSystem","category":"page"},{"location":"unitsystems.html#UnitSystems.GaussSystem","page":"The UnitSystem","title":"UnitSystems.GaussSystem","text":"GaussSystem(U::UnitSystem,μ0,λ,αL=𝟏,l=centi,m=milli,g0=gravity(U))\n\nConstructs new UnitSystem from U rescaled for CGS with electromagnetic options. The first three options are to set the values for vacuumpermeability, rationalization, and lorentz constants. The following two parameters are scaling for length and mass, while the last is an option to change the gravity reference.\n\nExamples include EMU, ESU, Gauss, LorentzHeaviside, and Kennelly.\n\n\n\n\n\n","category":"function"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Note that CGS is an alias for the Gauss system.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"EMU\nESU\nGauss\nLorentzHeaviside","category":"page"},{"location":"unitsystems.html#MeasureSystems.EMU","page":"The UnitSystem","title":"MeasureSystems.EMU","text":"EMU = GaussSystem(Metric,𝟏,𝟐*τ)\n\nCentimetre-gram-second UnitSystem variant based on EMU (non-rationalized).\n\njulia> boltzmann(EMU) # erg⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2¹¹5¹⁰ = 1.3806489995299999e-16 ± 4.3e-26 [erg⋅K⁻¹] EMU\n\njulia> planckreduced(EMU) # erg⋅s⋅rad⁻¹\n𝘩⋅τ⁻¹2⁷5⁷ = 1.0545718176461565e-27 [erg⋅s] EMU\n\njulia> lightspeed(EMU) # cm⋅s⁻¹\n𝘤⋅2²5² = 2.99792458e10 [cm⋅s⁻¹] EMU\n\njulia> vacuumpermeability(EMU) # statH⋅cm⁻¹\n𝟏 = 1.0 [s²] EMU\n\njulia> electronmass(EMU) # g\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2⁴5³ = 9.1093837016e-28 ± 2.8e-37 [g] EMU\n\njulia> molarmass(EMU) # g⋅mol⁻¹\n𝟏 = 1.0 [g⋅mol⁻¹] EMU\n\njulia> luminousefficacy(EMU) # lm⋅s⋅erg⁻¹\nKcd⋅2⁻⁷5⁻⁷ = 6.830196900900899e-5 [lm⋅s⋅erg⁻¹] EMU\n\njulia> rationalization(EMU)\nτ⋅2 = 12.566370614359172 [𝟙] EMU\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.ESU","page":"The UnitSystem","title":"MeasureSystems.ESU","text":"ESU = GaussSystem(Metric,(𝟏𝟎*𝘤)^-2,𝟐*τ)\n\nCentimetre-gram-second UnitSystem variant based on ESU (non-rationalized).\n\njulia> boltzmann(ESU) # erg⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2¹¹5¹⁰ = 1.3806489995299999e-16 ± 4.3e-26 [erg⋅K⁻¹] ESU\n\njulia> planckreduced(ESU) # erg⋅s⋅rad⁻¹\n𝘩⋅τ⁻¹2⁷5⁷ = 1.0545718176461565e-27 [erg⋅s] ESU\n\njulia> lightspeed(ESU) # cm⋅s⁻¹\n𝘤⋅2²5² = 2.99792458e10 [cm⋅s⁻¹] ESU\n\njulia> vacuumpermeability(ESU) # statH⋅cm⁻¹\n𝘤⁻²2⁻⁴5⁻⁴ = 1.1126500560536186e-21 [cm⁻²s⁴] ESU\n\njulia> electronmass(ESU) # g\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2⁴5³ = 9.1093837016e-28 ± 2.8e-37 [g] ESU\n\njulia> molarmass(ESU) # g⋅mol⁻¹\n𝟏 = 1.0 [g⋅mol⁻¹] ESU\n\njulia> luminousefficacy(ESU) # lm⋅s⋅erg⁻¹\nKcd⋅2⁻⁷5⁻⁷ = 6.830196900900899e-5 [lm⋅s⋅erg⁻¹] ESU\n\njulia> rationalization(ESU)\nτ⋅2 = 12.566370614359172 [𝟙] ESU\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.Gauss","page":"The UnitSystem","title":"MeasureSystems.Gauss","text":"Gauss = GaussSystem(Metric,𝟏,𝟐*τ,𝟏𝟎^-2/𝘤)\n\nCentimetre-gram-second UnitSystem variant CGS (Gauss-Lorentz, non-rationalized).\n\njulia> boltzmann(Gauss) # erg⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2¹¹5¹⁰ = 1.3806489995299999e-16 ± 4.3e-26 [erg⋅K⁻¹] Gauss\n\njulia> planckreduced(Gauss) # erg⋅s⋅rad⁻¹\n𝘩⋅τ⁻¹2⁷5⁷ = 1.0545718176461565e-27 [erg⋅s] Gauss\n\njulia> lightspeed(Gauss) # cm⋅s⁻¹\n𝘤⋅2²5² = 2.99792458e10 [cm⋅s⁻¹] Gauss\n\njulia> vacuumpermeability(Gauss) # statH⋅cm⁻¹\n𝟏 = 1.0 [s²] Gauss\n\njulia> electronmass(Gauss) # g\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2⁴5³ = 9.1093837016e-28 ± 2.8e-37 [g] Gauss\n\njulia> molarmass(Gauss) # g⋅mol⁻¹\n𝟏 = 1.0 [g⋅mol⁻¹] Gauss\n\njulia> luminousefficacy(Gauss) # lm⋅s⋅erg⁻¹\nKcd⋅2⁻⁷5⁻⁷ = 6.830196900900899e-5 [lm⋅s⋅erg⁻¹] Gauss\n\njulia> rationalization(Gauss)\nτ⋅2 = 12.566370614359172 [𝟙] Gauss\n\njulia> lorentz(Gauss)\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [cm⁻¹s] Gauss\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.LorentzHeaviside","page":"The UnitSystem","title":"MeasureSystems.LorentzHeaviside","text":"LorentzHeaviside = GaussSystem(Metric,𝟏,𝟏,centi/𝘤)\n\nCentimetre-gram-second UnitSystem variant HLU (Heaviside-Lorentz, rationalized).\n\njulia> boltzmann(LorentzHeaviside) # erg⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2¹¹5¹⁰ = 1.3806489995299999e-16 ± 4.3e-26 [erg⋅K⁻¹] LorentzHeaviside\n\njulia> planckreduced(LorentzHeaviside) # erg⋅s⋅rad⁻¹\n𝘩⋅τ⁻¹2⁷5⁷ = 1.0545718176461565e-27 [erg⋅s] LorentzHeaviside\n\njulia> lightspeed(LorentzHeaviside) # cm⋅s⁻¹\n𝘤⋅2²5² = 2.99792458e10 [cm⋅s⁻¹] LorentzHeaviside\n\njulia> vacuumpermeability(HLU) # hlH⋅cm⁻¹\n𝟏 = 1.0 [s²] LorentzHeaviside\n\njulia> electronmass(LorentzHeaviside) # g\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2⁴5³ = 9.1093837016e-28 ± 2.8e-37 [g] LorentzHeaviside\n\njulia> molarmass(LorentzHeaviside) # g⋅mol⁻¹\n𝟏 = 1.0 [g⋅mol⁻¹] LorentzHeaviside\n\njulia> luminousefficacy(LorentzHeaviside) # lm⋅s⋅erg⁻¹\nKcd⋅2⁻⁷5⁻⁷ = 6.830196900900899e-5 [lm⋅s⋅erg⁻¹] LorentzHeaviside\n\njulia> rationalization(LorentzHeaviside)\n𝟏 = 1.0 [𝟙] LorentzHeaviside\n\njulia> lorentz(LorentzHeaviside)\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [cm⁻¹s] LorentzHeaviside\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"When Thomson originally derived Maxwell's equations using electromagnetic notation, he arrived at a factor of 1/2 for the lorentz force constant, resulting in a slightly different system. This can be represented here, but is not included by default.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Kennelly","category":"page"},{"location":"unitsystems.html#MeasureSystems.Kennelly","page":"The UnitSystem","title":"MeasureSystems.Kennelly","text":"Kennelly = GaussSystem(Metric,𝟏𝟎^-7,𝟐*τ,𝟏,𝟏,𝟏)\n\nKennelly ? variant UnitSystem of the standard Metric units ???\n\njulia> boltzmann(Kennelly) # J⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³ = 1.3806489995299998e-23 ± 4.2999999999999996e-33 [kg⋅m²s⁻²K⁻¹] Kennelly\n\njulia> planckreduced(Kennelly) # J⋅s⋅rad⁻¹\n𝘩⋅τ⁻¹ = 1.0545718176461565e-34 [kg⋅m²s⁻¹] Kennelly\n\njulia> lightspeed(Kennelly) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] Kennelly\n\njulia> vacuumpermeability(Kennelly) # H⋅m⁻¹\n2⁻⁷5⁻⁷ = 1.0e-7 [s²] Kennelly\n\njulia> electronmass(Kennelly) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2 = 9.1093837016e-31 ± 2.8e-40 [kg] Kennelly\n\njulia> molarmass(Kennelly) # kg⋅mol⁻¹\n2⁻³5⁻³ = 0.001 [kg⋅mol⁻¹] Kennelly\n\njulia> luminousefficacy(Kennelly) # lm⋅W⁻¹\nKcd = 683.01969009009 [kg⁻¹m⁻²s³lm] Kennelly\n\njulia> rationalization(Kennelly)\nτ⋅2 = 12.566370614359172 [𝟙] Kennelly\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#Modified-(Entropy)-Unit-Systems-1","page":"The UnitSystem","title":"Modified (Entropy) Unit Systems","text":"","category":"section"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Most other un-natural unit systems are derived from the construction above by rescaling time, length, mass, temperature, and gravity; which results in modified entropy constants:","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"(tlmTg_0) quad mapsto quad\nk_Bfract^2Tm l^2g_0 quad\nhfractml^2g_0 quad\ncfractl quad\nmu_0frac1ml quad\nm_efrac1m quad\nM_ufrac1m quad\nK_cdfracml^2g_0t^3","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"EntropySystem\nGravitationalMetric","category":"page"},{"location":"unitsystems.html#UnitSystems.EntropySystem","page":"The UnitSystem","title":"UnitSystems.EntropySystem","text":"EntropySystem(U::UnitSystem,t,l,m,θ=𝟏)\nEntropySystem(U::UnitSystem,t,l,m,θ,μ0,Mu=molarmass(U)/m,g0=gravity(U))\n\nConstructs new UnitSystem from U rescaled along time, length, mass, and temperature by the first four parameters. Additional optional parameters allow for customization of the vacuumpermeability, molarmass, and gravity constants.\n\nExamples of this type include Nautical, Meridian, MeridianEngineering, GravitatonalMeridian, GravitationalMetric, GravitationalSI2019, MTS, KKH, MPH, IAU☉, IAUE, IAUJ, Hubble, Cosmological, CosmologicalQuantum. However, most other constructors for UnitSystem derivations are based on internally calling EntropySystem, such as AstronomicalSystem, ElectricSystem, GaussSystem, and RankineSystem. This means EntropySystem also constructs the examples listed there.\n\n\n\n\n\n","category":"function"},{"location":"unitsystems.html#MeasureSystems.GravitationalMetric","page":"The UnitSystem","title":"MeasureSystems.GravitationalMetric","text":"GravitationalMetric = EntropySystem(Metric,𝟏,𝟏,g₀)\n\nStandard GravitationalMetric system based on hyl and kilopond units.\n\njulia> boltzmann(GravitationalMetric) # kgf⋅m⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹g₀⁻¹2⁴5³ = 1.40787016925e-24 ± 4.3e-34 [kgf⋅m⋅K⁻¹] GravitationalMetric\n\njulia> planckreduced(GravitationalMetric) # kgf⋅m⋅s⋅rad⁻¹\n𝘩⋅g₀⁻¹τ⁻¹ = 1.0753639802033891e-35 [kgf⋅m⋅s] GravitationalMetric\n\njulia> lightspeed(GravitationalMetric) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] GravitationalMetric\n\njulia> vacuumpermeability(GravitationalMetric) # H⋅m⁻¹\ng₀⁻¹τ⋅2⁻⁶5⁻⁷ = 1.2814131853751459e-7 [kgf⋅s²C⁻²] GravitationalMetric\n\njulia> electronmass(GravitationalMetric) # hyl\n𝘩⋅𝘤⁻¹R∞⋅α⁻²g₀⁻¹2 = 9.288986250700001e-32 ± 2.8e-41 [hyl] GravitationalMetric\n\njulia> molarmass(GravitationalMetric) # hyl⋅mol⁻¹\ng₀⁻¹2⁻³5⁻³ = 0.00010197162129779284 [kgf⋅m⁻¹s²mol⁻¹] GravitationalMetric\n\njulia> luminousefficacy(GravitationalMetric) # lm⋅s⋅m⁻¹⋅kgf⁻¹\nKcd⋅g₀ = 6698.135043821981 [kgf⁻¹m⁻¹s⋅lm] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"In the Soviet Union, a metre-tonne-second system was also used briefly.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"MTS\nKKH\nMPH\nNautical\nMeridian","category":"page"},{"location":"unitsystems.html#MeasureSystems.MTS","page":"The UnitSystem","title":"MeasureSystems.MTS","text":"MTS = EntropySystem(SI2019,𝟏,𝟏,kilo)\n\nMetre-tonne-second UnitSystem variant of Metric system.\n\njulia> boltzmann(MTS) # kJ⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2 = 1.38064899953e-26 ± 4.3e-36 [t⋅m²s⁻²K⁻¹] MTS\n\njulia> planckreduced(MTS) # kJ⋅s⋅rad⁻¹\n𝘩⋅τ⁻¹2⁻³5⁻³ = 1.0545718176461566e-37 [t⋅m²s⁻¹] MTS\n\njulia> lightspeed(MTS) # m⋅s⁻¹\n𝘤 = 2.99792458e8 [m⋅s⁻¹] MTS\n\njulia> vacuumpermeability(MTS) # kH⋅m⁻¹\nτ⋅2⁻⁹5⁻¹⁰ = 1.2566370614359174e-9 [t⋅m⋅C⁻²] MTS\n\njulia> electronmass(MTS) # t\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2⁻²5⁻³ = 9.1093837016e-34 ± 2.8e-43 [t] MTS\n\njulia> molarmass(MTS) # t⋅mol⁻¹\n2⁻⁶5⁻⁶ = 1.0e-6 [t⋅mol⁻¹] MTS\n\njulia> luminousefficacy(MTS) # lm⋅kW⁻¹\nKcd⋅2³5³ = 683019.6900900899 [t⁻¹m⁻²s³lm] MTS\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.KKH","page":"The UnitSystem","title":"MeasureSystems.KKH","text":"KKH = EntropySystem(Metric,HOUR,kilo,𝟏)\n\nKilometer-kilogram-hour UnitSystem variant of Metric system.\n\njulia> boltzmann(KKH) # kg⋅km²⋅h⁻²⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁶3⁴5 = 1.7893211033800002e-22 ± 5.5e-32 [kg⋅km²h⁻²K⁻¹] KKH\n\njulia> planckreduced(KKH) # kg⋅km²⋅h⁻¹\n𝘩⋅τ⁻¹2⁻²3²5⁻⁴ = 3.7964585435261634e-37 [kg⋅km²h⁻¹] KKH\n\njulia> lightspeed(KKH) # km⋅hr⁻¹\n𝘤⋅2⋅3²5⁻¹ = 1.0792528488e9 [km⋅h⁻¹] KKH\n\njulia> vacuumpermeability(KKH) # kg⋅km⋅C⁻²\nτ⋅2⁻⁹5⁻¹⁰ = 1.2566370614359174e-9 [kg⋅km⋅C⁻²] KKH\n\njulia> electronmass(KKH) # kg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2 = 9.1093837016e-31 ± 2.8e-40 [kg] KKH\n\njulia> molarmass(KKH) # kg⋅mol⁻¹\n2⁻³5⁻³ = 0.001 [kg⋅mol⁻¹] KKH\n\njulia> luminousefficacy(KKH) # lm⋅h³⋅kg⁻¹⋅km⁻²\nKcd⋅2⁻⁶3⁻⁶ = 0.014639482383618185 [kg⁻¹km⁻²h³lm] KKH\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.MPH","page":"The UnitSystem","title":"MeasureSystems.MPH","text":"MPH = EntropySystem(FPS,HOUR,mi,𝟏)\n\nMile-pound-hour specification based on FPS absolute UnitSystem.\n\njulia> boltzmann(MPH) # lbf⋅mi²⋅hr⁻²⋅F⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹ft⁻²lb⁻¹2²5⁶11⁻² = 8.4615956484e-23 ± 2.6000000000000003e-32 [lb⋅mi²h⁻²°R⁻¹] MPH\n\njulia> planckreduced(MPH) # lbf⋅mi²⋅hr⁻¹⋅rad⁻¹\n𝘩⋅ft⁻²lb⁻¹τ⁻¹2⁻⁶11⁻² = 3.2315817800735083e-37 [lb⋅mi²h⁻¹] MPH\n\njulia> lightspeed(MPH) # mi⋅hr⁻¹\n𝘤⋅ft⁻¹2⁻¹3⋅5⋅11⁻¹ = 6.706166293843951e8 [mi⋅h⁻¹] MPH\n\njulia> vacuumpermeability(MPH) # lbm⋅mi⋅C⁻²\nft⁻¹lb⁻¹τ⋅2⁻¹¹3⁻¹5⁻⁸11⁻¹ = 1.7214532710813804e-9 [lb⋅mi⋅C⁻²] MPH\n\njulia> electronmass(MPH) # lbm\n𝘩⋅𝘤⁻¹R∞⋅α⁻²lb⁻¹2 = 2.00827533796e-30 ± 6.2e-40 [lb] MPH\n\njulia> molarmass(MPH) # lbm⋅lb-mol⁻¹\n𝟏 = 1.0 [lb⋅lb-mol⁻¹] MPH\n\njulia> luminousefficacy(MPH) # lm⋅h³⋅lb⁻¹⋅mi⁻²\nKcd⋅ft²lb⋅2⁻²3⁻⁴5⁻⁴11² = 0.017198446999173198 [lb⁻¹mi⁻²h³lm] MPH\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.Nautical","page":"The UnitSystem","title":"MeasureSystems.Nautical","text":"Nautical = EntropySystem(Metric,HOUR,nm,em^3,𝟏,τ*𝟑^3/𝟐^10/𝟓^12,milli)\n\nNautical miles, kilo-earthgram, hour specification based on Meridian definition.\n\njulia> greatcircle(Nautical) # nm\n2⁵3³5² = 21600.0 [nm] Nautical\n\njulia> boltzmann(Nautical) # keg⋅nm²⋅hr⁻²⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹g₀⁵ᐟ²GME⁻⁵ᐟ²τ⁻⁵2⁴⁹3¹⁰5³² = 5.1800466179999995e-23 ± 2.6e-31 [keg⋅nm²h⁻²K⁻¹] Nautical\n\njulia> planckreduced(Nautical) # keg⋅nm²⋅hr⁻¹⋅rad⁻¹\n𝘩⋅g₀⁵ᐟ²GME⁻⁵ᐟ²τ⁻⁶2⁴¹3⁸5²⁷ = 1.0990666906999999e-37 ± 5.5e-46 [keg⋅nm²h⁻¹] Nautical\n\njulia> lightspeed(Nautical) # nm⋅hr⁻¹\n𝘤⋅g₀¹ᐟ²GME⁻¹ᐟ²τ⁻¹2⁹3⁵5⁴ = 5.8195383759e8 ± 0.58 [nm⋅h⁻¹] Nautical\n\njulia> vacuumpermeability(Nautical) # keg⋅nm⋅eC⁻²\nτ⋅2⁻¹⁰3³5⁻¹² = 6.785840131753953e-10 [keg⋅nm⋅eC⁻²] Nautical\n\njulia> electronmass(Nautical) # keg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²g₀³ᐟ²GME⁻³ᐟ²τ⁻³2²⁸5²¹ = 9.069925385e-31 ± 2.7e-39 [keg] Nautical\n\njulia> molarmass(Nautical) # keg⋅eg-mol⁻¹\n2⁻³5⁻³ = 0.001 [keg⋅eg-mol⁻¹] Nautical\n\njulia> luminousefficacy(Nautical) # lm⋅h³⋅keg⁻¹⋅nm⁻²\nKcd⋅g₀⁻⁵ᐟ²GME⁵ᐟ²τ⁵2⁻⁴⁹3⁻¹²5⁻³¹ = 0.05056853095 ± 2.5e-10 [keg⁻¹nm⁻²h³lm] Nautical\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.Meridian","page":"The UnitSystem","title":"MeasureSystems.Meridian","text":"Meridian = EntropySystem(Metric,𝟏,em,em^3,𝟏,τ/𝟐^6/𝟓^7,milli)\n\nModern ideal Meridian system defined by France's original earthmeter definition.\n\njulia> greatcircle(Meridian) # em\n2⁹5⁷ = 4.0e7 [em] Meridian\n\njulia> boltzmann(Meridian) # eJ⋅K⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹g₀⁵ᐟ²GME⁻⁵ᐟ²τ⁻⁵2⁴⁹5³⁸ = 1.370696005e-23 ± 6.9e-32 [eJ⋅K⁻¹] Meridian\n\njulia> planckreduced(Meridian) # eJ⋅s⋅rad⁻¹\n𝘩⋅g₀⁵ᐟ²GME⁻⁵ᐟ²τ⁻⁶2⁴⁵5³⁵ = 1.046969489e-34 ± 5.2999999999999995e-43 [eJ⋅s] Meridian\n\njulia> lightspeed(Meridian) # em⋅s⁻¹\n𝘤⋅g₀¹ᐟ²GME⁻¹ᐟ²τ⁻¹2⁹5⁷ = 2.9935896996e8 ± 0.3 [em⋅s⁻¹] Meridian\n\njulia> vacuumpermeability(Meridian) # kegf⋅s²⋅eC⁻²\nτ⋅2⁻⁶5⁻⁷ = 1.2566370614359173e-6 [eH⋅em⁻¹] Meridian\n\njulia> electronmass(Meridian) # keg\n𝘩⋅𝘤⁻¹R∞⋅α⁻²g₀³ᐟ²GME⁻³ᐟ²τ⁻³2²⁸5²¹ = 9.069925385e-31 ± 2.7e-39 [keg] Meridian\n\njulia> molarmass(Meridian) # keg⋅eg-mol⁻¹\n2⁻³5⁻³ = 0.001 [keg⋅eg-mol⁻¹] Meridian\n\njulia> luminousefficacy(Meridian) # lm⋅W⁻¹\nKcd⋅g₀⁻⁵ᐟ²GME⁵ᐟ²τ⁵2⁻⁴⁵5⁻³⁵ = 687.9792808 ± 3.5e-6 [lm⋅eW⁻¹] Meridian\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#Foot-Pound-Second-Rankine-1","page":"The UnitSystem","title":"Foot-Pound-Second-Rankine","text":"","category":"section"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"In Britain and the United States an English system of engineering units was commonly used.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"(tlmg_0) quad mapsto quad\nk_Bfrac5t^29m l^2g_0 quad\nhfractml^2g_0 quad\ncfractl quad\nmu_0frac1mlg_0 quad\nm_efrac1m quad\nM_u 10^3 quad\nK_cdfracml^2g_0t^3","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"RankineSystem\nFPS\nIPS\nMeasureSystems.British\nMeasureSystems.English\nSurvey","category":"page"},{"location":"unitsystems.html#MeasureSystems.RankineSystem","page":"The UnitSystem","title":"MeasureSystems.RankineSystem","text":"RankineSystem(U::UnitSystem,l,m,g0=𝟏) = EntropySystem(U,𝟏,l,m,°R,vacuumpermeability(U)/m/l/g0,kilo*molarmass(U),g0)\n\nConstructs new UnitSystem from U rescaled along length and mass with optional gravity reference constant used to define technical and engineering units.\n\nExamples: FPS, British, IPS, English, Survey.\n\n\n\n\n\n","category":"function"},{"location":"unitsystems.html#MeasureSystems.FPS","page":"The UnitSystem","title":"MeasureSystems.FPS","text":"FPS = RankineSystem(Metric,ft,lb)\n\nAbsolute English UnitSystem based on the foot, pound, second, and poundal.\n\njulia> boltzmann(FPS) # ft⋅pdl⋅°R⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹ft⁻²lb⁻¹2⁴3⁻²5⁴ = 1.8201832416900001e-22 ± 5.6e-32 [lb⋅ft²s⁻²°R⁻¹] FPS\n\njulia> planckreduced(FPS) # ft⋅pdl⋅s⋅rad⁻¹\n𝘩⋅ft⁻²lb⁻¹τ⁻¹ = 2.5025369304889247e-33 [lb⋅ft²s⁻¹] FPS\n\njulia> lightspeed(FPS) # ft⋅s⁻¹\n𝘤⋅ft⁻¹ = 9.835710564304461e8 [ft⋅s⁻¹] FPS\n\njulia> vacuumpermeability(FPS) # lb⋅ft⋅C⁻²\nft⁻¹lb⁻¹τ⋅2⁻⁶5⁻⁷ = 9.089273271309687e-6 [lb⋅ft⋅C⁻²] FPS\n\njulia> electronmass(FPS) # lb\n𝘩⋅𝘤⁻¹R∞⋅α⁻²lb⁻¹2 = 2.00827533796e-30 ± 6.2e-40 [lb] FPS\n\njulia> molarmass(FPS) # lb⋅lb-mol⁻¹\n𝟏 = 1.0 [lb⋅lb-mol⁻¹] FPS\n\njulia> luminousefficacy(FPS) # lm⋅s³⋅lb⁻¹⋅ft⁻²\nKcd⋅ft²lb = 28.78252493663283 [lb⁻¹ft⁻²s³lm] FPS\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.IPS","page":"The UnitSystem","title":"MeasureSystems.IPS","text":"IPS = RankineSystem(Metric,ft/𝟐^2/𝟑,lb*g₀*𝟐^2*𝟑/ft)\n\nBritish Gravitational UnitSystem historically used in the United States of America.\n\njulia> boltzmann(IPS) # in⋅lb⋅°R⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹g₀⁻¹ft⁻¹lb⁻¹2⁶3⁻¹5⁴ = 6.7887629566e-23 ± 2.1000000000000002e-32 [lb⋅in⋅°R⁻¹] IPS\n\njulia> planckreduced(IPS) # in⋅lb⋅s⋅rad⁻¹\n𝘩⋅g₀⁻¹ft⁻¹lb⁻¹τ⁻¹2²3 = 9.333747076683978e-34 [lb⋅in⋅s] IPS\n\njulia> lightspeed(IPS) # in⋅s⁻¹\n𝘤⋅ft⁻¹2²3 = 1.1802852677165354e10 [in⋅s⁻¹] IPS\n\njulia> vacuumpermeability(IPS) # slinch⋅in⋅C⁻²\ng₀⁻¹lb⁻¹τ⋅2⁻⁶5⁻⁷ = 2.8250324964133447e-7 [lb⋅s²C⁻²] IPS\n\njulia> electronmass(IPS) # slinch\n𝘩⋅𝘤⁻¹R∞⋅α⁻²g₀⁻¹ft⋅lb⁻¹2⁻¹3⁻¹ = 5.2015921425e-33 ± 1.6e-42 [slinch] IPS\n\njulia> molarmass(IPS) # slinch⋅slinch-mol⁻¹\n𝟏 = 1.0 [lb⋅in⁻¹s²slinch-mol⁻¹] IPS\n\njulia> luminousefficacy(IPS) # lm⋅s⋅in⁻¹⋅lb⁻¹\nKcd⋅g₀⋅ft⋅lb⋅2⁻²3⁻¹ = 77.17086290732456 [lb⁻¹in⁻¹s⋅lm] IPS\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.British","page":"The UnitSystem","title":"MeasureSystems.British","text":"British = RankineSystem(Metric,ft,slug)\n\nBritish Gravitational UnitSystem historically used by Britain and United States.\n\njulia> boltzmann(British) # ft⋅lb⋅°R⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹g₀⁻¹ft⁻¹lb⁻¹2⁴3⁻²5⁴ = 5.6573024638e-24 ± 1.7e-33 [lb⋅ft⋅°R⁻¹] British\n\njulia> planckreduced(British) # ft⋅lb⋅s⋅rad⁻¹\n𝘩⋅g₀⁻¹ft⁻¹lb⁻¹τ⁻¹ = 7.778122563903315e-35 [lb⋅ft⋅s] British\n\njulia> lightspeed(British) # ft⋅s⁻¹\n𝘤⋅ft⁻¹ = 9.835710564304461e8 [ft⋅s⁻¹] British\n\njulia> vacuumpermeability(British) # slug⋅ft⋅C⁻²\ng₀⁻¹lb⁻¹τ⋅2⁻⁶5⁻⁷ = 2.8250324964133447e-7 [lb⋅s²C⁻²] British\n\njulia> electronmass(British) # slugs\n𝘩⋅𝘤⁻¹R∞⋅α⁻²g₀⁻¹ft⋅lb⁻¹2 = 6.241910571000001e-32 ± 1.9000000000000002e-41 [slug] British\n\njulia> molarmass(British) # slug⋅slug-mol⁻¹\n𝟏 = 1.0 [lb⋅ft⁻¹s²slug-mol⁻¹] British\n\njulia> luminousefficacy(British) # lm⋅s⋅ft⁻¹⋅lb⁻¹\nKcd⋅g₀⋅ft⋅lb = 926.0503548878947 [lb⁻¹ft⁻¹s⋅lm] British\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.English","page":"The UnitSystem","title":"MeasureSystems.English","text":"English = RankineSystem(Metric,ft,lb,g₀/ft)\n\nEnglish Engineering UnitSystem historically used in the United States of America.\n\njulia> boltzmann(English) # ft⋅lbf⋅°R⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹g₀⁻¹ft⁻¹lb⁻¹2⁴3⁻²5⁴ = 5.6573024638e-24 ± 1.7e-33 [lbf⋅ft⋅°R⁻¹] English\n\njulia> planckreduced(English) # ft⋅lbf⋅s⋅rad⁻¹\n𝘩⋅g₀⁻¹ft⁻¹lb⁻¹τ⁻¹ = 7.778122563903315e-35 [lbf⋅ft⋅s⋅rad⁻¹] English\n\njulia> lightspeed(English) # ft⋅s⁻¹\n𝘤⋅ft⁻¹ = 9.835710564304461e8 [ft⋅s⁻¹] English\n\njulia> vacuumpermeability(English) # lbm⋅ft⋅C⁻²\ng₀⁻¹lb⁻¹τ⋅2⁻⁶5⁻⁷ = 2.8250324964133447e-7 [lbf⋅s²C⁻²rad⁻²] English\n\njulia> electronmass(English) # lbm\n𝘩⋅𝘤⁻¹R∞⋅α⁻²lb⁻¹2 = 2.00827533796e-30 ± 6.2e-40 [lbm] English\n\njulia> molarmass(English) # lbm⋅lb-mol⁻¹\n𝟏 = 1.0 [lbm⋅lb-mol⁻¹] English\n\njulia> luminousefficacy(English) # lm⋅s⋅ft⁻¹⋅lbf⁻¹\nKcd⋅g₀⋅ft⋅lb = 926.0503548878947 [lbf⁻¹ft⁻¹s⋅lm] English\n\njulia> gravity(English) # lbm⋅ft⋅lbf⁻¹⋅s⁻²\ng₀⋅ft⁻¹ = 32.17404855643044 [lbf⁻¹lbm⋅ft⋅s⁻²] English\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.Survey","page":"The UnitSystem","title":"MeasureSystems.Survey","text":"Survey = RankineSystem(Metric,ftUS,lb,g₀/ftUS)\n\nEnglish Engineering UnitSystem based on the geophysical US survey foot (1200/3937).\n\njulia> boltzmann(Survey) # ftUS⋅lbf⋅°R⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹g₀⁻¹ftUS⁻¹lb⁻¹2⁴3⁻²5⁴ = 5.6572911492e-24 ± 1.7e-33 [lbf⋅ft⋅°R⁻¹] Survey\n\njulia> planckreduced(Survey) # ftUS⋅lbf⋅s⋅rad⁻¹\n𝘩⋅g₀⁻¹ftUS⁻¹lb⁻¹τ⁻¹ = 7.77810700765819e-35 [lbf⋅ft⋅s⋅rad⁻¹] Survey\n\njulia> lightspeed(Survey) # ftUS⋅s⁻¹\n𝘤⋅ftUS⁻¹ = 9.835690892883334e8 [ft⋅s⁻¹] Survey\n\njulia> vacuumpermeability(Survey) # lbm⋅ftUS⋅C⁻²\ng₀⁻¹lb⁻¹τ⋅2⁻⁶5⁻⁷ = 2.8250324964133447e-7 [lbf⋅s²C⁻²rad⁻²] Survey\n\njulia> electronmass(Survey) # lbm\n𝘩⋅𝘤⁻¹R∞⋅α⁻²lb⁻¹2 = 2.00827533796e-30 ± 6.2e-40 [lbm] Survey\n\njulia> molarmass(Survey) # lbm⋅lb-mol⁻¹\n𝟏 = 1.0 [lbm⋅lb-mol⁻¹] Survey\n\njulia> luminousefficacy(Survey) # lm⋅s⋅ft⁻¹⋅lbf⁻¹\nKcd⋅g₀⋅ftUS⋅lb = 926.0522069923087 [lbf⁻¹ft⁻¹s⋅lm] Survey\n\njulia> gravity(Survey) # lbm⋅ftUS⋅lbf⁻¹⋅s⁻²\ng₀⋅ftUS⁻¹ = 32.17398420833334 [lbf⁻¹lbm⋅ft⋅s⁻²] Survey\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"An impractical yet humorous unit system is the FFF specification.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"FFF","category":"page"},{"location":"unitsystems.html#MeasureSystems.FFF","page":"The UnitSystem","title":"MeasureSystems.FFF","text":"FFF = EntropySystem(Metric,𝟐*𝟕*DAY,fur,𝟐*𝟑^2*𝟓*lb,°R,0,𝟏)\n\nFurlong–firkin–fortnight FFF is a humorous UnitSystem based on unusal impractical units.\n\njulia> boltzmann(FFF) # fir⋅fur²⋅ftn⁻²⋅F⁻¹\nkB⋅NA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹ft⁻²lb⁻¹2¹⁵5⁵7²11⁻² = 6.793104372e-18 ± 2.1e-27 [fir⋅fur²ftn⁻²°R⁻¹] FFF\n\njulia> planckreduced(FFF) # fir⋅fur²⋅ftn⁻¹⋅rad⁻¹\n𝘩⋅ft⁻²lb⁻¹τ⁻¹2³3⁻¹5⁻¹7⋅11⁻² = 7.721326066522302e-35 [fir⋅fur²ftn⁻¹] FFF\n\njulia> lightspeed(FFF) # fur⋅ftn⁻¹\n𝘤⋅ft⁻¹2⁶3²5⋅7⋅11⁻¹ = 1.8026174997852542e12 [fur⋅ftn⁻¹] FFF\n\njulia> vacuumpermeability(FFF) # fir⋅fur⋅Inf⁻²\n𝟏/Inf = 0.0 [fir⋅fur⋅Inf⁻²] FFF\n\njulia> electronmass(FFF) # fir\n𝘩⋅𝘤⁻¹R∞⋅α⁻²lb⁻¹3⁻²5⁻¹ = 2.2314170421699998e-32 ± 6.8e-42 [fir] FFF\n\njulia> molarmass(FFF) # fir⋅fir-mol⁻¹\n𝟏 = 1.0 [fir⋅fir-mol⁻¹] FFF\n\njulia> luminousefficacy(FFF) # lm⋅ftn³⋅fir⁻¹⋅fur⁻²\nKcd⋅ft²lb⋅2⁻¹⁹3⁻⁵5⁻³7⁻³11² = 6.375788993269436e-10 [fir⁻¹fur⁻²ftn³lm] FFF\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#Astronomical-Unit-Systems-1","page":"The UnitSystem","title":"Astronomical Unit Systems","text":"","category":"section"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"The International Astronomical Union (IAU) units are based on the solar mass, distance from the sun to the earth, and the length of a terrestrial day.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"IAU\nIAUE\nIAUJ\nAstronomicalSystem\nHubble\nCosmological\nCosmologicalQuantum","category":"page"},{"location":"unitsystems.html#MeasureSystems.IAU","page":"The UnitSystem","title":"MeasureSystems.IAU","text":"IAU☉ = EntropySystem(Metric,DAY,au,GM☉/G)\n\nSolar UnitSystem defined by International Astronomical Union and solarmass.\n\njulia> boltzmann(IAU) # M⊙⋅au²⋅D⁻²⋅K⁻¹\nkB⋅NA⋅𝘩²R∞⋅α⁻²μₑᵤ⁻¹au⁻⁵kG⁻²mP⁻²τ⁻³2⁴⁶3²⁰5¹⁷ = 2.316083e-66 ± 5.1e-71 [M☉⋅au²D⁻²K⁻¹] IAU☉\n\njulia> planckreduced(IAU) # M⊙⋅au²⋅D⁻¹⋅rad⁻¹\n𝘩²𝘤⋅au⁻⁵kG⁻²mP⁻²τ⁻⁴2³⁵3¹⁷5¹² = 2.0475440000000002e-82 ± 4.5000000000000005e-87 [M☉⋅au²D⁻¹] IAU☉\n\njulia> lightspeed(IAU) # au⋅D⁻¹\n𝘤⋅au⁻¹2⁷3³5² = 173.1446326742 ± 3.5e-9 [au⋅D⁻¹] IAU☉\n\njulia> vacuumpermeability(IAU) # M⊙⋅au²⋅C⁻²\n𝘩⋅𝘤⋅au⁻⁴kG⁻²mP⁻²τ⁻²2²²3¹⁴5³ = 4.2245329999999997e-48 ± 9.3e-53 [M☉⋅au⋅C⁻²] IAU☉\n\njulia> electronmass(IAU) # M⊙\n𝘩²R∞⋅α⁻²au⁻³kG⁻²mP⁻²τ⁻³2²⁹3¹⁴5¹⁰ = 4.58124e-61 ± 1.0000000000000001e-65 [M☉] IAU☉\n\njulia> molarmass(IAU) # M☉⋅mol⁻¹\n𝘩⋅𝘤⋅au⁻³kG⁻²mP⁻²τ⁻³2²⁵3¹⁴5⁷ = 5.02915e-34 ± 1.0999999999999999e-38 [M☉⋅mol⁻¹] IAU☉\n\njulia> luminousefficacy(IAU) # lm⋅D³⋅M☉⁻¹⋅au⁻²\n𝘩⁻¹𝘤⁻¹Kcd⋅au⁵kG²mP²τ³2⁻⁴⁹3⁻²³5⁻¹⁶ = 4.71247e40 ± 9.999999999999999e35 [M☉⁻¹au⁻²D³lm] IAU☉\n\njulia> gaussgravitation(IAU) # D⁻¹\nkG⋅τ⋅2⁻⁷3⁻⁴5⁻³ = 0.017202098964713464 [D⁻¹] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.IAUE","page":"The UnitSystem","title":"MeasureSystems.IAUE","text":"IAUE = EntropySystem(Metric,DAY,LD,GME/G)\n\nAstronomical (Earth) UnitSystem defined by lunardistance around the earthmass.\n\njulia> boltzmann(IAUE) # ME⋅LD²⋅D⁻²⋅K⁻¹\nkB⋅NA⋅𝘩²R∞⋅α⁻²μₑᵤ⁻¹mP⁻²GME⁻¹τ⁻¹2¹²5/202692169 = 1.1679229999999999e-55 ± 2.6e-60 [ME⋅LD²D⁻²K⁻¹] IAUE\n\njulia> planckreduced(IAUE) # ME⋅LD²⋅D⁻¹⋅rad⁻¹\n𝘩²𝘤⋅mP⁻²GME⁻¹τ⁻²2⋅3⁻³5⁻⁴/202692169 = 1.032508e-71 ± 2.3e-76 [ME⋅LD²D⁻¹] IAUE\n\njulia> lightspeed(IAUE) # LD⋅D⁻¹\n𝘤⋅2⁴5⁻¹/14237 = 67383.2876027253 [LD⋅D⁻¹] IAUE\n\njulia> vacuumpermeability(IAUE) # ME⋅LD²⋅C⁻²\n𝘩⋅𝘤⋅mP⁻²GME⁻¹2⁻⁹3⁻³5⁻¹⁰/14237 = 5.4738900000000006e-40 ± 1.2e-44 [ME⋅LD⋅C⁻²] IAUE\n\njulia> electronmass(IAUE) # ME\n𝘩²R∞⋅α⁻²mP⁻²GME⁻¹τ⁻¹2 = 1.5253059999999998e-55 ± 3.3999999999999995e-60 [ME] IAUE\n\njulia> molarmass(IAUE) # ME⋅mol⁻¹\n𝘩⋅𝘤⋅mP⁻²GME⁻¹τ⁻¹2⁻³5⁻³ = 1.674434e-28 ± 3.6999999999999995e-33 [ME⋅mol⁻¹] IAUE\n\njulia> luminousefficacy(IAUE) # lm⋅D³⋅ME⁻¹⋅LD⁻²\n𝘩⁻¹𝘤⁻¹Kcd⋅mP²GME⋅τ⋅2⁻¹⁵3⁻³⋅202692169 = 9.3452e29 ± 2.1e25 [ME⁻¹LD⁻²D³lm] IAUE\n\njulia> turn(IAU)/gaussianmonth(IAU) # D⁻¹\nGME¹ᐟ²2⁵ᐟ²3⁻³ᐟ²5⁻⁵ᐟ²/1.6987431854323947e6 = 0.22888074402 ± 2.3e-10 [D⁻¹] IAU☉\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.IAUJ","page":"The UnitSystem","title":"MeasureSystems.IAUJ","text":"IAUJ = EntropySystem(Metric,DAY,JD,GMJ/G)\n\nAstronomical (Jupiter) UnitSystem defined by jupiterdistance around the solarmass.\n\njulia> boltzmann(IAUJ) # MJ⋅JD²⋅D⁻²⋅K⁻¹\nkB⋅NA⋅𝘩²R∞⋅α⁻²μₑᵤ⁻¹mP⁻²GMJ⁻¹τ⁻¹2⁶3⁴5⁻⁵/67336617049 = 8.95968e-65 ± 2.0000000000000002e-69 [MJ⋅JD²D⁻²K⁻¹] IAUJ\n\njulia> planckreduced(IAUJ) # MJ⋅JD²⋅D⁻¹⋅rad⁻¹\n𝘩²𝘤⋅mP⁻²GMJ⁻¹τ⁻²2⁻⁵3⋅5⁻¹⁰/67336617049 = 7.92084e-81 ± 1.7e-85 [MJ⋅JD²D⁻¹] IAUJ\n\njulia> lightspeed(IAUJ) # JD⋅D⁻¹\n𝘤⋅2⋅3²5⁻⁴/259493 = 33.272661653300865 [JD⋅D⁻¹] IAUJ\n\njulia> vacuumpermeability(IAUJ) # MJ⋅JD²⋅C⁻²\n𝘩⋅𝘤⋅mP⁻²GMJ⁻¹2⁻¹²3⁻¹5⁻¹³/259493 = 8.5043e-46 ± 1.9e-50 [MJ⋅JD⋅C⁻²] IAUJ\n\njulia> electronmass(IAUJ) # MJ\n𝘩²R∞⋅α⁻²mP⁻²GMJ⁻¹τ⁻¹2 = 4.7991499999999996e-58 ± 1.0999999999999999e-62 [MJ] IAUJ\n\njulia> molarmass(IAUJ) # MJ⋅mol⁻¹\n𝘩⋅𝘤⋅mP⁻²GMJ⁻¹τ⁻¹2⁻³5⁻³ = 5.2683599999999994e-31 ± 1.1999999999999999e-35 [MJ⋅mol⁻¹] IAUJ\n\njulia> luminousefficacy(IAUJ) # lm⋅D³⋅MJ⁻¹⋅JD⁻²\n𝘩⁻¹𝘤⁻¹Kcd⋅mP²GMJ⋅τ⋅2⁻⁹3⁻⁷5⁶⋅67336617049 = 1.2181769999999999e39 ± 2.7e34 [MJ⁻¹JD⁻²D³lm] IAUJ\n\njulia> sqrt(gravitation(IAUJ)*solarmass(IAUJ)/jupiterdistance(IAUJ)^3) # D⁻¹\nau³ᐟ²kG⋅τ⋅2⁻¹⁶3⁻¹¹ᐟ²5⁻¹²/1.3218691602384917e8 = 0.001449102839405 ± 4.4e-14 [D⁻¹] IAUJ\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#UnitSystems.AstronomicalSystem","page":"The UnitSystem","title":"UnitSystems.AstronomicalSystem","text":"AstronomicalSystem(U::UnitSystem,t,l,m)\n\nConstructs new UnitSystem from U rescaled along time, length, mass, and dimensionless boltzmann and molarmass constants. Examples are Hubble, Cosmological, CosmologicalQuantum.\n\n\n\n\n\n","category":"function"},{"location":"unitsystems.html#MeasureSystems.Hubble","page":"The UnitSystem","title":"MeasureSystems.Hubble","text":"Hubble = AstronomicalSystem(Metric,th,𝘤*th,mₑ)\n\nHubble UnitSystem defined by hubble parameter.\n\njulia> boltzmann(Hubble)\n𝟏 = 1.0 [𝟙] Hubble\n\njulia> planckreduced(Hubble)\n𝘤⁻¹R∞⁻¹α²H0⋅au⁻¹2⁻¹¹3⁻⁴5⁻⁶ = 2.8240000000000002e-39 ± 1.8000000000000003e-41 [T] Hubble\n\njulia> lightspeed(Hubble)\n𝟏 = 1.0 [𝟙] Hubble\n\njulia> vacuumpermeability(Hubble)\nτ⋅2 = 12.566370614359172 [TQ⁻²] Hubble\n\njulia> electronmass(Hubble)\n𝟏 = 1.0 [𝟙] Hubble\n\njulia> molarmass(Hubble)\n𝟏 = 1.0 [𝟙] Hubble\n\njulia> luminousefficacy(Hubble)\n𝟏 = 1.0 [𝟙] Hubble\n\njulia> hubble(Hubble)\n𝟏 = 1.0 [T⁻¹] Hubble\n\njulia> cosmological(Hubble)\nΩΛ⋅3 = 2.067 ± 0.017 [T⁻²] Hubble\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.Cosmological","page":"The UnitSystem","title":"MeasureSystems.Cosmological","text":"Cosmological = AstronomicalSystem(Metric,lc/𝘤,lc,mc)\n\nCosmological scale UnitSystem defined by darkenergydensity.\n\njulia> boltzmann(Cosmological)\n𝟏 = 1.0 [𝟙] Cosmological\n\njulia> planckreduced(Cosmological)\n𝘩²𝘤⁻⁴ΩΛ⋅H0²au⁻²mP⁻²2⁻²⁰3⁻⁷5⁻¹² = 2.888e-122 ± 4.3e-124 [MT] Cosmological\n\njulia> lightspeed(Cosmological)\n𝟏 = 1.0 [𝟙] Cosmological\n\njulia> vacuumpermeability(Cosmological)\nτ⋅2 = 12.566370614359172 [MTQ⁻²] Cosmological\n\njulia> electronmass(Cosmological)\n𝘩²𝘤⁻³R∞⋅α⁻²ΩΛ¹ᐟ²H0⋅au⁻¹mP⁻²τ¹ᐟ²2⁻⁸3⁻⁷ᐟ²5⁻⁶ = 3.566e-83 ± 2.6e-85 [M] Cosmological\n\njulia> molarmass(Cosmological)\n𝟏 = 1.0 [𝟙] Cosmological\n\njulia> luminousefficacy(Cosmological)\n𝟏 = 1.0 [M⁻¹TJ] Cosmological\n\njulia> hubble(Cosmological)\nΩΛ⁻¹ᐟ²τ¹ᐟ²2⋅3⁻¹ᐟ² = 3.487 ± 0.014 [T⁻¹] Cosmological\n\njulia> cosmological(Cosmological)\nτ⋅2² = 25.132741228718345 [T⁻²] Cosmological\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#MeasureSystems.CosmologicalQuantum","page":"The UnitSystem","title":"MeasureSystems.CosmologicalQuantum","text":"CosmologicalQuantum = AstronomicalSystem(Metric,tcq,lcq,mcq)\n\nCosmological quantum scale UnitSystem defined by darkenergydensity.\n\njulia> boltzmann(CosmologicalQuantum)\n𝟏 = 1.0 [𝟙] CosmologicalQuantum\n\njulia> planckreduced(CosmologicalQuantum)\n𝟏 = 1.0 [𝟙] CosmologicalQuantum\n\njulia> lightspeed(CosmologicalQuantum)\n𝟏 = 1.0 [𝟙] CosmologicalQuantum\n\njulia> vacuumpermeability(CosmologicalQuantum)\nτ⋅2 = 12.566370614359172 [Q⁻²] CosmologicalQuantum\n\njulia> electronmass(CosmologicalQuantum)\n𝘩¹ᐟ²R∞⋅α⁻²ΩΛ⁻¹ᐟ⁴H0⁻¹ᐟ²au¹ᐟ²mP⁻¹ᐟ²τ¹ᐟ⁴2¹³ᐟ²3⁷ᐟ⁴5³ = 2.2733e8 ± 840000.0 [M] CosmologicalQuantum\n\njulia> molarmass(CosmologicalQuantum)\n𝟏 = 1.0 [𝟙] CosmologicalQuantum\n\njulia> luminousefficacy(CosmologicalQuantum)\n𝟏 = 1.0 [𝟙] CosmologicalQuantum\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#Natural-Unit-Systems-1","page":"The UnitSystem","title":"Natural Unit Systems","text":"","category":"section"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"With the introduction of the planckmass a set of natural atomic unit systems can be derived in terms of the gravitational coupling constant.","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"alpha_G = left(fracm_em_Pright)^2 qquad\ntilde k_B = 1 qquad\n(tilde M_u = 1 quad tilde lambda = 1 quad tilde alpha_L = 1)","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> αG # (mₑ/mP)^2\n𝘩²𝘤⁻²mP⁻²R∞²α⁻⁴2² = 1.75181e-45 ± 3.9e-50","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Some of the notable variants include","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Planck       ::UnitSystem{1,1,1,1,√(4π*αG)}\nPlanckGauss  ::UnitSystem{1,1,1,4π,√αG}\nStoney       ::UnitSystem{1,αinv,1,4π,√(αG*αinv)}\nHartree      ::UnitSystem{1,1,αinv,4π/αinv^2,1}\nRydberg      ::UnitSystem{1,1,2αinv,π/αinv^2,1/2}\nSchrodinger  ::UnitSystem{1,1,αinv,4π/αinv^2,√(αG*αinv)}\nElectronic   ::UnitSystem{1,αinv,1,4π,1}\nNatural      ::UnitSystem{1,1,1,1,1}\nNaturalGauss ::UnitSystem{1,1,1,4π,1}\nQCD          ::UnitSystem{1,1,1,1,1/μₚₑ}\nQCDGauss     ::UnitSystem{1,1,1,4π,1/μₚₑ}\nQCDoriginal  ::UnitSystem{1,1,1,4π/αinv,1/μₚₑ}","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 1 qquad\ntilde m_e = sqrt4pi alpha_G","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Planck","category":"page"},{"location":"unitsystems.html#MeasureSystems.Planck","page":"The UnitSystem","title":"MeasureSystems.Planck","text":"Planck = UnitSystem(𝟏,𝟏,𝟏,𝟏,√(𝟐*τ*αG))\n\nPlanck UnitSystem with the electronmass value √(4π*αG) using gravitational coupling.\n\njulia> boltzmann(Planck)\n𝟏 = 1.0 [𝟙] Planck\n\njulia> planckreduced(Planck)\n𝟏 = 1.0 [𝟙] Planck\n\njulia> lightspeed(Planck)\n𝟏 = 1.0 [𝟙] Planck\n\njulia> vacuumpermeability(Planck)\n𝟏 = 1.0 [𝟙] Planck\n\njulia> electronmass(Planck)\n𝘩⋅𝘤⁻¹R∞⋅α⁻²mP⁻¹τ¹ᐟ²2³ᐟ² = 1.483708e-22 ± 1.6000000000000001e-27 [M] Planck\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pi qquad\ntilde m_e = sqrt4pi alpha_G","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"PlanckGauss","category":"page"},{"location":"unitsystems.html#MeasureSystems.PlanckGauss","page":"The UnitSystem","title":"MeasureSystems.PlanckGauss","text":"PlanckGauss = UnitSystem(𝟏,𝟏,𝟏,𝟐*τ,√αG)\n\nPlanck (Gauss) UnitSystem with permeability of 4π and electronmass coupling √αG.\n\njulia> boltzmann(PlanckGauss)\n𝟏 = 1.0 [𝟙] PlanckGauss\n\njulia> planckreduced(PlanckGauss)\n𝟏 = 1.0 [𝟙] PlanckGauss\n\njulia> lightspeed(PlanckGauss)\n𝟏 = 1.0 [𝟙] PlanckGauss\n\njulia> vacuumpermeability(PlanckGauss)\nτ⋅2 = 12.566370614359172 [𝘦ₙ⁻²] PlanckGauss\n\njulia> electronmass(PlanckGauss)\n𝘩⋅𝘤⁻¹R∞⋅α⁻²mP⁻¹2 = 4.185463e-23 ± 4.6e-28 [mP] PlanckGauss\n\nThe well known PlanckGauss values for length, time, mass, and temperature are:\n\njulia> length(PlanckGauss,SI2019) # ℓP\n𝘩⋅𝘤⁻¹mP⁻¹τ⁻¹ = 1.616255e-35 ± 1.8e-40 [m]/[mP⁻¹] PlanckGauss -> SI2019\n\njulia> time(PlanckGauss,SI2019) # tP\n𝘩⋅𝘤⁻²mP⁻¹τ⁻¹ = 5.391246999999999e-44 ± 5.8999999999999996e-49 [s]/[mP⁻¹] PlanckGauss -> SI2019\n\njulia> mass(PlanckGauss,SI2019) # mP\nmP = 2.176434e-8 ± 2.4e-13 [kg]/[mP] PlanckGauss -> SI2019\n\njulia> temperature(PlanckGauss,SI2019) # TP\nkB⁻¹𝘤²mP = 1.416784e32 ± 1.6e27 [K]/[mP] PlanckGauss -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = frac1alpha qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pi qquad\ntilde m_e = sqrtfracalpha_Galpha","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Stoney","category":"page"},{"location":"unitsystems.html#MeasureSystems.Stoney","page":"The UnitSystem","title":"MeasureSystems.Stoney","text":"Stoney = UnitSystem(𝟏,𝟏/α,𝟏,𝟐*τ,√(αG/α)}\n\nStoney UnitSystem with permeability of 4π and electronmass coupling √(αG/α).\n\njulia> boltzmann(Stoney)\n𝟏 = 1.0 [𝟙] Stoney\n\njulia> planckreduced(Stoney)\nα⁻¹ = 137.035999084 ± 2.1e-8 [MT] Stoney\n\njulia> lightspeed(Stoney)\n𝟏 = 1.0 [𝟙] Stoney\n\njulia> vacuumpermeability(Stoney)\nτ⋅2 = 12.566370614359172 [MTQ⁻²] Stoney\n\njulia> electronmass(Stoney)\n𝘩⋅𝘤⁻¹R∞⋅α⁻⁵ᐟ²mP⁻¹2 = 4.899602000000001e-22 ± 5.4000000000000005e-27 [M] Stoney\n\nThe well known Stoney values for length, time, mass, and charge are:\n\njulia> length(Stoney,SI2019) # lS\n𝘩⋅𝘤⁻¹α¹ᐟ²mP⁻¹τ⁻¹ = 1.3806790000000002e-36 ± 1.5000000000000002e-41 [m]/[T] Stoney -> SI2019\n\njulia> time(Stoney,SI2019) # tS\n𝘩⋅𝘤⁻²α¹ᐟ²mP⁻¹τ⁻¹ = 4.605448e-45 ± 5.1e-50 [s]/[T] Stoney -> SI2019\n\njulia> mass(Stoney,SI2019) # mS\nα¹ᐟ²mP = 1.859209e-9 ± 2.1e-14 [kg]/[M] Stoney -> SI2019\n\njulia> charge(Stoney,SI2019) # qS\n𝘦 = 1.602176634e-19 [C]/[𝘦] Stoney -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = frac1alpha qquad\ntilde mu_0 = 4pialpha^2 qquad\ntilde m_e = 1","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Hartree","category":"page"},{"location":"unitsystems.html#MeasureSystems.Hartree","page":"The UnitSystem","title":"MeasureSystems.Hartree","text":"Hartree = UnitSystem(𝟏,𝟏,𝟏/α,𝟐*τ*α^2,𝟏)\n\nHartree atomic UnitSystem based on bohr radius and elementarycharge scale.\n\njulia> boltzmann(Hartree)\n𝟏 = 1.0 [𝟙] Hartree\n\njulia> planckreduced(Hartree)\n𝟏 = 1.0 [𝟙] Hartree\n\njulia> lightspeed(Hartree)\nα⁻¹ = 137.035999084 ± 2.1e-8 [a₀⁻¹] Hartree\n\njulia> vacuumpermeability(Hartree)\nα²τ⋅2 = 0.00066917625662 ± 2.1e-13 [a₀⋅𝘦⁻²] Hartree\n\njulia> electronmass(Hartree)\n𝟏 = 1.0 [𝟙] Hartree\n\nThe well known Hartree atomic unit values for length, time, mass, and charge are:\n\njulia> length(Hartree,SI2019) # lA\nR∞⁻¹α⋅τ⁻¹2⁻¹ = 5.29177210902e-11 ± 8.1e-21 [m]/[a₀] Hartree -> SI2019\n\njulia> time(Hartree,SI2019) # tA\n𝘤⁻¹R∞⁻¹τ⁻¹2⁻¹ = 2.4188843265857e-17 ± 4.6e-29 [s]/[a₀²] Hartree -> SI2019\n\njulia> mass(Hartree,SI2019) # mA\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2 = 9.1093837016e-31 ± 2.8e-40 [kg]/[𝟙] Hartree -> SI2019\n\njulia> charge(Hartree,SI2019) # qA\n𝘦 = 1.602176634e-19 [C]/[𝘦] Hartree -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = frac2alpha qquad\ntilde mu_0 = pialpha^2 qquad\ntilde m_e = frac12","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Rydberg","category":"page"},{"location":"unitsystems.html#MeasureSystems.Rydberg","page":"The UnitSystem","title":"MeasureSystems.Rydberg","text":"Rydberg = UnitSystem(𝟏,𝟏,𝟐/α,τ/𝟐*α^2,𝟏/𝟐)\n\nRydberg UnitSystem with lightspeed of 𝟐/α and permeability of π*α^2.\n\njulia> boltzmann(Rydberg)\n𝟏 = 1.0 [ML²T⁻¹] Rydberg\n\njulia> planckreduced(Rydberg)\n𝟏 = 1.0 [ML²T⁻¹] Rydberg\n\njulia> lightspeed(Rydberg)\nα⁻¹2 = 274.071998168 ± 4.2e-8 [LT⁻¹] Rydberg\n\njulia> vacuumpermeability(Rydberg)\nα²τ⋅2⁻¹ = 0.000167294064155 ± 5.1e-14 [MLQ⁻²] Rydberg\n\njulia> electronmass(Rydberg)\n2⁻¹ = 0.5 [M] Rydberg\n\nThe well known Rydberg atomic unit values for length, time, mass, and charge are:\n\njulia> length(Rydberg,SI2019) # lR\nR∞⁻¹α⋅τ⁻¹2⁻¹ = 5.29177210902e-11 ± 8.1e-21 [m]/[a₀] Rydberg -> SI2019\n\njulia> time(Rydberg,SI2019) # tR\n𝘤⁻¹R∞⁻¹τ⁻¹ = 4.8377686531712996e-17 ± 9.3e-29 [s]/[T] Rydberg -> SI2019\n\njulia> mass(Rydberg,SI2019) # mR\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2² = 1.8218767403099998e-30 ± 5.6e-40 [kg]/[M] Rydberg -> SI2019\n\njulia> charge(Rydberg,SI2019) # qR\n𝘦⋅2⁻¹ᐟ² = 1.1329099625600371e-19 [C]/[Q] Rydberg -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = frac1alpha qquad\ntilde mu_0 = 4pialpha^2 qquad\ntilde m_e = sqrtfracalpha_Galpha","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Schrodinger","category":"page"},{"location":"unitsystems.html#MeasureSystems.Schrodinger","page":"The UnitSystem","title":"MeasureSystems.Schrodinger","text":"Schrodinger = UnitSystem(𝟏,𝟏,𝟏/α,𝟐*τ*α^2,√(αG/α))\n\nSchrodinger UnitSystem with permeability of 4π/αinv^2 and electronmass of √(αG*αinv).\n\njulia> boltzmann(Schrodinger)\n𝟏 = 1.0 [ML²T⁻¹] Schrodinger\n\njulia> planckreduced(Schrodinger)\n𝟏 = 1.0 [ML²T⁻¹] Schrodinger\n\njulia> lightspeed(Schrodinger)\nα⁻¹ = 137.035999084 ± 2.1e-8 [LT⁻¹] Schrodinger\n\njulia> vacuumpermeability(Schrodinger)\nα²τ⋅2 = 0.00066917625662 ± 2.1e-13 [MLQ⁻²] Schrodinger\n\njulia> electronmass(Schrodinger)\n𝘩⋅𝘤⁻¹R∞⋅α⁻⁵ᐟ²mP⁻¹2 = 4.899602000000001e-22 ± 5.4000000000000005e-27 [M] Schrodinger\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = frac1alpha qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pi qquad\ntilde m_e = 1","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Electronic","category":"page"},{"location":"unitsystems.html#MeasureSystems.Electronic","page":"The UnitSystem","title":"MeasureSystems.Electronic","text":"Electronic = UnitSystem(𝟏,𝟏/α,𝟏,𝟐*τ,𝟏}\n\nElectronic UnitSystem with planckreduced of 1/α and permeability of 4π.\n\njulia> boltzmann(Electronic)\n𝟏 = 1.0 [𝟙] Electronic\n\njulia> planckreduced(Electronic)\nα⁻¹ = 137.035999084 ± 2.1e-8 [T] Electronic\n\njulia> lightspeed(Electronic)\n𝟏 = 1.0 [𝟙] Electronic\n\njulia> vacuumpermeability(Electronic)\nτ⋅2 = 12.566370614359172 [TQ⁻²] Electronic\n\njulia> electronmass(Electronic)\n𝟏 = 1.0 [𝟙] Electronic\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 1 qquad\ntilde m_e = 1","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Natural","category":"page"},{"location":"unitsystems.html#MeasureSystems.Natural","page":"The UnitSystem","title":"MeasureSystems.Natural","text":"Natural = UnitSystem(𝟏,𝟏,𝟏,𝟏,𝟏)\n\nNatural UnitSystem with all primary constants having unit value.\n\njulia> boltzmann(Natural)\n𝟏 = 1.0 [𝟙] Natural\n\njulia> planckreduced(Natural)\n𝟏 = 1.0 [𝟙] Natural\n\njulia> lightspeed(Natural)\n𝟏 = 1.0 [𝟙] Natural\n\njulia> vacuumpermeability(Natural)\n𝟏 = 1.0 [𝟙] Natural\n\njulia> electronmass(Natural)\n𝟏 = 1.0 [𝟙] Natural\n\nThe well known Natural values for length, time, mass, and charge are:\n\njulia> length(Natural,SI2019)\nR∞⁻¹α²τ⁻¹2⁻¹ = 3.8615926796000003e-13 ± 1.2e-22 [m]/[𝟙] Natural -> SI2019\n\njulia> time(Natural,SI2019)\n𝘤⁻¹R∞⁻¹α²τ⁻¹2⁻¹ = 1.28808866819e-21 ± 3.8999999999999997e-31 [s]/[𝟙] Natural -> SI2019\n\njulia> mass(Natural,SI2019)\n𝘩⋅𝘤⁻¹R∞⋅α⁻²2 = 9.1093837016e-31 ± 2.8e-40 [kg]/[𝟙] Natural -> SI2019\n\njulia> charge(Natural,SI2019)\n𝘦⋅α⁻¹ᐟ²τ⁻¹ᐟ²2⁻¹ᐟ² = 5.2908176899e-19 ± 4.1e-29 [C]/[𝟙] Natural -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pi qquad\ntilde m_e = 1","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"NaturalGauss","category":"page"},{"location":"unitsystems.html#MeasureSystems.NaturalGauss","page":"The UnitSystem","title":"MeasureSystems.NaturalGauss","text":"NaturalGauss = UnitSystem(𝟏,𝟏,𝟏,𝟐*τ,𝟏}\n\nNatural (Gauss) UnitSystem with the Gaussian permeability value of 4π.\n\njulia> boltzmann(NaturalGauss)\n𝟏 = 1.0 [𝟙] NaturalGauss\n\njulia> planckreduced(NaturalGauss)\n𝟏 = 1.0 [𝟙] NaturalGauss\n\njulia> lightspeed(NaturalGauss)\n𝟏 = 1.0 [𝟙] NaturalGauss\n\njulia> vacuumpermeability(NaturalGauss)\nτ⋅2 = 12.566370614359172 [𝘦ₙ⁻²] NaturalGauss\n\njulia> electronmass(NaturalGauss)\n𝟏 = 1.0 [𝟙] NaturalGauss\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 1 qquad\ntilde m_e = frac1mu_pe = fracm_em_p","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"QCD","category":"page"},{"location":"unitsystems.html#MeasureSystems.QCD","page":"The UnitSystem","title":"MeasureSystems.QCD","text":"QCD = UnitSystem(𝟏,𝟏,𝟏,𝟏,𝟏/μₚₑ)\n\nQunatum chromodynamics UnitSystem based on the protonmass scale.\n\njulia> boltzmann(QCD)\n𝟏 = 1.0 [𝟙] QCD\n\njulia> planckreduced(QCD)\n𝟏 = 1.0 [𝟙] QCD\n\njulia> lightspeed(QCD)\n𝟏 = 1.0 [𝟙] QCD\n\njulia> vacuumpermeability(QCD)\n𝟏 = 1.0 [𝟙] QCD\n\njulia> electronmass(QCD)\nμₑᵤ⋅μₚᵤ⁻¹ = 0.000544617021487 ± 3.3e-14 [mₚ] QCD\n\nThe well known QCD values for length, time, mass, and charge are:\n\njulia> length(QCD,SI2019) # lQCD\nR∞⁻¹α²μₑᵤ⋅μₚᵤ⁻¹τ⁻¹2⁻¹ = 2.10308910335e-16 ± 6.6e-26 [m]/[mₚ⁻¹] QCD -> SI2019\n\njulia> time(QCD,SI2019) # tQCD\n𝘤⁻¹R∞⁻¹α²μₑᵤ⋅μₚᵤ⁻¹τ⁻¹2⁻¹ = 7.0151501388e-25 ± 2.2e-34 [s]/[mₚ⁻¹] QCD -> SI2019\n\njulia> mass(QCD,SI2019) # mQCD\n𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹μₚᵤ⋅2 = 1.67262192369e-27 ± 5.2000000000000004e-37 [kg]/[mₚ] QCD -> SI2019\n\njulia> charge(QCD,SI2019) # qQCD\n𝘦⋅α⁻¹ᐟ²τ⁻¹ᐟ²2⁻¹ᐟ² = 5.2908176899e-19 ± 4.1e-29 [C]/[𝟙] QCD -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pi qquad\ntilde m_e = frac1mu_pe = fracm_em_p","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"QCDGauss","category":"page"},{"location":"unitsystems.html#MeasureSystems.QCDGauss","page":"The UnitSystem","title":"MeasureSystems.QCDGauss","text":"QCDGauss = UnitSystem(𝟏,𝟏,𝟏,𝟐*τ,𝟏/μₚₑ)\n\nQunatum chromodynamics (Gauss) UnitSystem based on the protonmass scale.\n\njulia> boltzmann(QCDGauss)\n𝟏 = 1.0 [𝟙] QCDGauss\n\njulia> planckreduced(QCDGauss)\n𝟏 = 1.0 [𝟙] QCDGauss\n\njulia> lightspeed(QCDGauss)\n𝟏 = 1.0 [𝟙] QCDGauss\n\njulia> vacuumpermeability(QCDGauss)\nτ⋅2 = 12.566370614359172 [𝘦ₙ⁻²] QCDGauss\n\njulia> electronmass(QCDGauss)\nμₑᵤ⋅μₚᵤ⁻¹ = 0.000544617021487 ± 3.3e-14 [mₚ] QCDGauss\n\nThe well known QCDGauss values for length, time, mass, and charge are:\n\njulia> length(QCDGauss,SI2019) # lQCD\nR∞⁻¹α²μₑᵤ⋅μₚᵤ⁻¹τ⁻¹2⁻¹ = 2.10308910335e-16 ± 6.6e-26 [m]/[mₚ⁻¹] QCDGauss -> SI2019\n\njulia> time(QCDGauss,SI2019) # tQCD\n𝘤⁻¹R∞⁻¹α²μₑᵤ⋅μₚᵤ⁻¹τ⁻¹2⁻¹ = 7.0151501388e-25 ± 2.2e-34 [s]/[mₚ⁻¹] QCDGauss -> SI2019\n\njulia> mass(QCDGauss,SI2019) # mQCD\n𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹μₚᵤ⋅2 = 1.67262192369e-27 ± 5.2000000000000004e-37 [kg]/[mₚ] QCDGauss -> SI2019\n\njulia> charge(QCDGauss,SI2019) # qQCD\n𝘦⋅α⁻¹ᐟ² = 1.8755460377799998e-18 ± 1.4e-28 [C]/[𝘦ₙ] QCDGauss -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pialpha qquad\ntilde m_e = frac1mu_pe = fracm_em_p","category":"page"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"QCDoriginal","category":"page"},{"location":"unitsystems.html#MeasureSystems.QCDoriginal","page":"The UnitSystem","title":"MeasureSystems.QCDoriginal","text":"QCDoriginal = UnitSystem(𝟏,𝟏,𝟏,𝟐*τ*α,𝟏/μₚₑ)\n\nQunatum chromodynamics (original) UnitSystem scaled by protonmass and elementarycharge.\n\njulia> boltzmann(QCDoriginal)\n𝟏 = 1.0 [𝟙] QCDoriginal\n\njulia> planckreduced(QCDoriginal)\n𝟏 = 1.0 [𝟙] QCDoriginal\n\njulia> lightspeed(QCDoriginal)\n𝟏 = 1.0 [𝟙] QCDoriginal\n\njulia> vacuumpermeability(QCDoriginal)\nα⋅τ⋅2 = 0.091701236889 ± 1.4e-11 [𝘦⁻²] QCDoriginal\n\njulia> electronmass(QCDoriginal)\nμₑᵤ⋅μₚᵤ⁻¹ = 0.000544617021487 ± 3.3e-14 [mₚ] QCDoriginal\n\nThe well known QCDoriginal values for length, time, mass, and charge are:\n\njulia> length(QCDoriginal,SI2019) # lQCD\nR∞⁻¹α²μₑᵤ⋅μₚᵤ⁻¹τ⁻¹2⁻¹ = 2.10308910335e-16 ± 6.6e-26 [m]/[mₚ⁻¹] QCDoriginal -> SI2019\n\njulia> time(QCDoriginal,SI2019) # tQCD\n𝘤⁻¹R∞⁻¹α²μₑᵤ⋅μₚᵤ⁻¹τ⁻¹2⁻¹ = 7.0151501388e-25 ± 2.2e-34 [s]/[mₚ⁻¹] QCDoriginal -> SI2019\n\njulia> mass(QCDoriginal,SI2019) # mQCD\n𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹μₚᵤ⋅2 = 1.67262192369e-27 ± 5.2000000000000004e-37 [kg]/[mₚ] QCDoriginal -> SI2019\n\njulia> charge(QCDoriginal,SI2019) # qQCD\n𝘦 = 1.602176634e-19 [C]/[𝘦] QCDoriginal -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"unitsystems.html#UnitSystem-Index-1","page":"The UnitSystem","title":"UnitSystem Index","text":"","category":"section"},{"location":"unitsystems.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Pages = [\"unitsystems.md\"]","category":"page"},{"location":"index.html#Geophysics.jl-1","page":"Home","title":"Geophysics.jl","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Planetary science data for atmospheric geophysical models","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"(Image: DOI) (Image: Build Status) (Image: Build status) (Image: Coverage Status) (Image: codecov.io) (Image: Gitter)","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Provides Atmosphere models based on Air Research and Development Command ARDC and the United States (1922, 1925, 1956, 1959, 1962, 1966, 1976) Standard Atmosphere US22,US25,US56,US59,US62,US66,US76 available also in English units US22E,US25E,US56E,US59E,US62E,US66E,US76E. Provided the local absolute sea level and gravitational acceleration, the Weather can be initialized based on temperature and pressure. Presets for the Standard atmosphere are provided: Earth1922, Earth1925, Earth1956, Earth1959, Earth1962, Earth1966, Earth1976, Earth1922English, Earth1925English, Earth1956English, Earth1959English, Earth1962English, Earth1966English, Earth1976English. By default the 1959 model with metric units is used for Standard atmosphere, although a different year can be specified with environment variable STDATM and the default unit system can be specified with the GEOUNITS environment variable.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"julia> using Geophysics\n\njulia> h = 1000 # altitude, m\n1000\n\njulia> gravity(h)\n9.803565306802405\n\njulia> temperature(h)\n281.66102237169474\n\njulia> pressure(h)\n89876.28158431675\n\njulia> sonicspeed(h)\n336.4347118683662","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Values which can be obtained at geometric altitude include gravity, temperature, pressure, density, sonicspeed, conductivity, viscosity, kinematic, volume, energy, enthalpy, heatcapacity, diffusivity, prandtl, and impedance. In the future, more varieties of atmospheric models will be added for various planets along with winds aloft and turbulent gust distribution data. Weather data from internet sources may be imported in the future.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Pages = [\"unitsystems.md\",\"references.md\"]\nDepth = 3","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"This package is not limited to atmospheric data: other geophysical data features are intended to be added for oceans, temperature and pressure inside the planets, as well as electrical and magnetic properties of planets. In this package, any simple Geophysical properties of planets may be added. Other simple geophysical data about planets, can be added in a collaborative effort. Complicated models will be excluded from this package, as it is only intended to provide a minimal foundation for geophysical data and constants of various planets, more complicated models should be built separately in packages to build on Geophysics. For example, some geographic conditions can be calculated externally, and then Geophysics is used to load that data.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"This Geophysics package for the Julia language was created by github.com/chakravala for research.","category":"page"},{"location":"convert.html#Unit-Conversions-1","page":"Unit Conversions","title":"Unit Conversions","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"Pages = [\"unitsystems.md\",\"constants.md\"]\nDepth = 1","category":"page"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"Pages = [\"convert.md\"]","category":"page"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"Pages = [\"units.md\"]\nDepth = 1","category":"page"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"Standardized conversion factors for physics units between UnitSystem specifications:  (Image: DOI)","category":"page"},{"location":"convert.html#Kinematic-Units-1","page":"Unit Conversions","title":"Kinematic Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"MeasureSystems.A\nsolidangle\nMeasureSystems.T\nMeasureSystems.L\narea\nMeasureSystems.volume\nMeasureSystems.wavenumber\nangularwavenumber\nfuelefficiency\nMeasureSystems.frequency\nangularfrequency\nfrequencydrift\nMeasureSystems.speed\nacceleration\njerk\nsnap\ncrackle\npop\nvolumeflow","category":"page"},{"location":"convert.html#MeasureSystems.A","page":"Unit Conversions","title":"MeasureSystems.A","text":"angle : [A], [𝟙], [𝟙], [𝟙], [𝟙]\nangle(U::UnitSystem,S::UnitSystem) = angle(U,S)\nangle(v::Real,U::UnitSystem,S::UnitSystem) = v/angle(U,S)\n\nExtent of one-dimensional angle or angle (rad), unit conversion factor.\n\njulia> angle(CGS,Metric) # rad⋅rad⁻¹\n𝟏 = 1.0 [𝟙]/[𝟙] Gauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.solidangle","page":"Unit Conversions","title":"MeasureSystems.solidangle","text":"solidangle : [A²], [𝟙], [𝟙], [𝟙], [𝟙]\nsolidangle(U::UnitSystem,S::UnitSystem) = angle(U,S)^2\nsolidangle(v::Real,U::UnitSystem,S::UnitSystem) = v/solidangle(U,S)\n\nExtent of two-dimensional angle or solidangle (rad²), unit conversion factor.\n\njulia> solidangle(CGS,Metric) # rad²⋅rad⁻²\n𝟏 = 1.0 [𝟙]/[𝟙] Gauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.T","page":"Unit Conversions","title":"MeasureSystems.T","text":"time : [T], [T], [T], [T], [T]\ntime(U::UnitSystem,S::UnitSystem) = length(U,S)/speed(U,S)\ntime(v::Real,U::UnitSystem,S::UnitSystem) = v/time(U,S)\n\nDimension along which events are ordered or T (s), unit conversion factor.\n\njulia> T(MPH,Metric) # s⋅h⁻¹\n2⁴3²5² = 3600.0 [s]/[h] MPH -> Metric\n\njulia> T(IAU,Metric) # s⋅D⁻¹\n2⁷3³5² = 86400.0 [s]/[D] IAU☉ -> Metric\n\njulia> T(Hubble,Metric)\nH0⁻¹au⋅τ⁻¹2¹⁰3⁴5⁶ = 4.561e17 ± 2.8e15 [s]/[T] Hubble -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.L","page":"Unit Conversions","title":"MeasureSystems.L","text":"length : [L], [L], [L], [L], [L]\nlength(U::UnitSystem,S::UnitSystem) = planck(U,S)/mass(U,S)/speed(U,S)\nlength(v::Real,U::UnitSystem,S::UnitSystem) = v/length(U,S)\n\nExtent of one-dimensional shape or length (m), unit conversion factor.\n\njulia> L(CGS,Metric) # m⋅cm⁻¹\n2⁻²5⁻² = 0.01 [m]/[cm] Gauss -> Metric\n\njulia> L(IAU,Metric) # m⋅au⁻¹\nau = 1.495978707e11 ± 3.0 [m]/[au] IAU☉ -> Metric\n\njulia> L(English,Metric) # m⋅ft⁻¹\nft = 0.3048 [m]/[ft] English -> Metric\n\njulia> L(EnglishUS,English) # ft⋅ftUS⁻¹\nft⁻¹ftUS = 1.0000020000039997 [ft]/[ft] Survey -> English\n\njulia> L(PlanckGauss,Metric) # m⋅ℓP⁻¹\n𝘩⋅𝘤⁻¹mP⁻¹τ⁻¹ = 1.616255e-35 ± 1.8e-40 [m]/[mP⁻¹] PlanckGauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.area","page":"Unit Conversions","title":"MeasureSystems.area","text":"area : [L²], [L²], [L²], [L²], [L²]\narea(U::UnitSystem,S::UnitSystem) = length(U,S)^2\narea(v::Real,U::UnitSystem,S::UnitSystem) = v/area(U,S)\n\nExtent of two-dimensional shape or area (m²), unit conversion factor.\n\njulia> area(CGS,Metric) # m²⋅cm⁻²\n2⁻⁴5⁻⁴ = 0.0001 [m²]/[cm²] Gauss -> Metric\n\njulia> area(English,Metric) # m²⋅ft⁻²\nft² = 0.09290304 [m²]/[ft²] English -> Metric\n\njulia> area(Survey,English) # ft²⋅ftUS⁻²\nft⁻²ftUS² = 1.0000040000119996 [ft²]/[ft²] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.volume","page":"Unit Conversions","title":"MeasureSystems.volume","text":"volume : [L³], [L³], [L³], [L³], [L³]\nvolume(U::UnitSystem,S::UnitSystem) = length(U,S)^3\nvolume(v::Real,U::UnitSystem,S::UnitSystem) = v/volume(U,S)\n\nExtent of three-dimensional shape or volume (m³), unit conversion factor.\n\njulia> volume(CGS,Metric) # m³⋅cm⁻³\n2⁻⁶5⁻⁶ = 1.0e-6 [m³]/[cm³] Gauss -> Metric\n\njulia> volume(English,Metric) # m³⋅ft⁻³\nft³ = 0.028316846592000004 [m³]/[ft³] English -> Metric\n\njulia> volume(Survey,English) # ft³⋅ftUS⁻³\nft⁻³ftUS³ = 1.0000060000239996 [ft³]/[ft³] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.wavenumber","page":"Unit Conversions","title":"MeasureSystems.wavenumber","text":"wavenumber : [L⁻¹], [L⁻¹], [L⁻¹], [L⁻¹], [L⁻¹]\nwavenumber(U::UnitSystem,S::UnitSystem) = 1/length(U,S)\nwavenumber(v::Real,U::UnitSystem,S::UnitSystem) = v/wavenumber(U,S)\n\nNumber of occurences per unit of space (m⁻¹), unit conversion factor.\n\njulia> wavenumber(CGS,Metric) # cm⋅m⁻¹\n2²5² = 100.0 [m⁻¹]/[cm⁻¹] Gauss -> Metric\n\njulia> wavenumber(English,Metric) # ft⋅m⁻¹\nft⁻¹ = 3.280839895013123 [m⁻¹]/[ft⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.angularwavenumber","page":"Unit Conversions","title":"MeasureSystems.angularwavenumber","text":"angularwavenumber : [L⁻¹A], [L⁻¹], [L⁻¹], [L⁻¹], [L⁻¹]\nangularwavenumber(U::UnitSystem,S::UnitSystem) = angle(U,S)/length(U,S)\nangularwavenumber(v::Real,U::UnitSystem,S::UnitSystem) = v/angularwavenumber(U,S)\n\nNumber of occurences per unit of space (m⁻¹), unit conversion factor.\n\njulia> angularwavenumber(CGS,Metric) # cm⋅m⁻¹\n2²5² = 100.0 [m⁻¹]/[cm⁻¹] Gauss -> Metric\n\njulia> angularwavenumber(English,Metric) # ft⋅m⁻¹\nft⁻¹ = 3.280839895013123 [m⁻¹]/[ft⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.fuelefficiency","page":"Unit Conversions","title":"MeasureSystems.fuelefficiency","text":"fuelefficiency : [L⁻²], [L⁻²], [L⁻²], [L⁻²], [L⁻²]\nfuelefficiency(U::UnitSystem,S::UnitSystem) = 1/area(U,S)\nfuelefficiency(v::Real,U::UnitSystem,S::UnitSystem) = v/fuelefficiency(U,S)\n\nDistance per volume or fuelefficiency (m⋅m⁻³, m⁻²), unit conversion factor.\n\njulia> fuelefficiency(CGS,Metric) # cm²⋅m⁻²\n2⁴5⁴ = 10000.0 [m⁻²]/[cm⁻²] Gauss -> Metric\n\njulia> fuelefficiency(English,Metric) # ft²⋅m⁻²\nft⁻² = 10.76391041670972 [m⁻²]/[ft⁻²] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.frequency","page":"Unit Conversions","title":"MeasureSystems.frequency","text":"frequency : [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹], [T⁻¹]\nfrequency(U::UnitSystem,S::UnitSystem) = 1/time(U,S)\nfrequency(v::Real,U::UnitSystem,S::UnitSystem) = v/frequency(U,S)\n\nNumber of occurences per unit of time (Hz or s⁻¹), unit conversion factor.\n\njulia> frequency(IAU,Metric) day⋅s⁻¹\n2⁻⁷3⁻³5⁻² = 1.1574074074074073e-5 [Hz]/[D⁻¹] IAU☉ -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Similitude.angularfrequency","page":"Unit Conversions","title":"Similitude.angularfrequency","text":"angularfrequency(P::Planet) = 2π/period(P)\n\nRate of angularfrequency of sidereal Planet rotation (rad⋅s⁻¹).\n\njulia> angularfrequency(Earth) # rad⋅s⁻¹\n7.292115146706924e-5 [Hz] Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.frequencydrift","page":"Unit Conversions","title":"MeasureSystems.frequencydrift","text":"frequencydrift : [T⁻²], [T⁻²], [T⁻²], [T⁻²], [T⁻²]\nfrequencydrift(U::UnitSystem,S::UnitSystem) = 1/time(U,S)^2\nfrequencydrift(v::Real,U::UnitSystem,S::UnitSystem) = v/frequencydrift(U,S)\n\nDrift of frequency per time or frequencydrift (Hz⋅s⁻¹, s⁻²), unit conversion factor.\n\njulia> frequencydrift(IAU,Metric) day²⋅Hz⋅s⁻¹\n2⁻¹⁴3⁻⁶5⁻⁴ = 1.3395919067215366e-10 [Hz⋅s⁻¹]/[D⁻²] IAU☉ -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.speed","page":"Unit Conversions","title":"MeasureSystems.speed","text":"speed : [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹], [LT⁻¹]\nspeed(U::UnitSystem,S::UnitSystem) = lightspeed(S)/lightspeed(U)\nspeed(v::Real,U::UnitSystem,S::UnitSystem) = v/speed(U,S)\n\nVelocity or length per time or speed (m⋅s⁻¹), unit conversion factor.\n\njulia> speed(CGS,Metric) # m⋅cm⁻¹\n2⁻²5⁻² = 0.01 [m]/[cm] Gauss -> Metric\n\njulia> speed(IAU,Metric) # m⋅day⋅s⁻¹⋅au⁻¹\nau⋅2⁻⁷3⁻³5⁻² = 1.731456836806e6 ± 3.5e-5 [m⋅s⁻¹]/[au⋅D⁻¹] IAU☉ -> Metric\n\njulia> speed(English,Metric) # m⋅ft⁻¹\nft = 0.3048 [m]/[ft] English -> Metric\n\njulia> speed(Survey,English) # ft⋅ftUS⁻¹\nft⁻¹ftUS = 1.0000020000039997 [ft]/[ft] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.acceleration","page":"Unit Conversions","title":"MeasureSystems.acceleration","text":"acceleration : [LT⁻²], [LT⁻²], [LT⁻²], [LT⁻²], [LT⁻²]\nacceleration(U::UnitSystem,S::UnitSystem) = speed(U,S)/time(U,S)\nacceleration(v::Real,U::UnitSystem,S::UnitSystem) = v/acceleration(U,S)\n\nSpecific force or speed per time or acceleration (m⋅s⁻²), unit conversion factor.\n\njulia> acceleration(CGS,Metric) # m⋅s⁻¹⋅gal⁻¹\n2⁻²5⁻² = 0.01 [m]/[cm] Gauss -> Metric\n\njulia> acceleration(IAU,Metric) # m⋅day²⋅s⁻²⋅au⁻¹\nau⋅2⁻¹⁴3⁻⁶5⁻⁴ = 20.04000968525 ± 4.0e-10 [m⋅s⁻²]/[au⋅D⁻²] IAU☉ -> Metric\n\njulia> acceleration(English,Metric) # m⋅ft⁻¹\nft = 0.3048 [m]/[ft] English -> Metric\n\njulia> acceleration(Survey,English) # ft⋅ftUS⁻¹\nft⁻¹ftUS = 1.0000020000039997 [ft]/[ft] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.jerk","page":"Unit Conversions","title":"MeasureSystems.jerk","text":"jerk : [LT⁻³], [LT⁻³], [LT⁻³], [LT⁻³], [LT⁻³]\njerk(U::UnitSystem,S::UnitSystem) = speed(U,S)/time(U,S)^2\njerk(v::Real,U::UnitSystem,S::UnitSystem) = v/jerk(U,S)\n\nJolt or acceleration per time or jerk (m⋅s⁻³), unit conversion factor.\n\njulia> jerk(CGS,Metric) # m⋅cm⁻¹\n2⁻²5⁻² = 0.01 [m]/[cm] Gauss -> Metric\n\njulia> jerk(IAU,Metric) # m⋅day³⋅s⁻³⋅au⁻¹\nau⋅2⁻²¹3⁻⁹5⁻⁶ = 0.0002319445565422 ± 4.7e-15 [m⋅s⁻³]/[au⋅D⁻³] IAU☉ -> Metric\n\njulia> jerk(English,Metric) # m⋅ft⁻¹\nft = 0.3048 [m]/[ft] English -> Metric\n\njulia> jerk(Survey,English) # ft⋅ftUS⁻¹\nft⁻¹ftUS = 1.0000020000039997 [ft]/[ft] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.snap","page":"Unit Conversions","title":"MeasureSystems.snap","text":"snap : [LT⁻⁴], [LT⁻⁴], [LT⁻⁴], [LT⁻⁴], [LT⁻⁴]\nsnap(U::UnitSystem,S::UnitSystem) = speed(U,S)/time(U,S)^3\nsnap(v::Real,U::UnitSystem,S::UnitSystem) = v/snap(U,S)\n\nJounce or jerk per time or snap (m⋅s⁻⁴), unit conversion factor.\n\njulia> snap(CGS,Metric) # m⋅cm⁻¹\n2⁻²5⁻² = 0.01 [m]/[cm] Gauss -> Metric\n\njulia> snap(IAU,Metric) # m⋅day⁴⋅s⁻⁴⋅au⁻¹\nau⋅2⁻²⁸3⁻¹²5⁻⁸ = 2.684543478498e-9 ± 5.4e-20 [m⋅s⁻⁴]/[au⋅D⁻⁴] IAU☉ -> Metric\n\njulia> snap(English,Metric) # m⋅ft⁻¹\nft = 0.3048 [m]/[ft] English -> Metric\n\njulia> snap(Survey,English) # ft⋅ftUS⁻¹\nft⁻¹ftUS = 1.0000020000039997 [ft]/[ft] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.crackle","page":"Unit Conversions","title":"MeasureSystems.crackle","text":"crackle : [LT⁻⁵], [LT⁻⁵], [LT⁻⁵], [LT⁻⁵], [LT⁻⁵]\ncrackle(U::UnitSystem,S::UnitSystem) = speed(U,S)/time(U,S)^4\ncrackle(v::Real,U::UnitSystem,S::UnitSystem) = v/crackle(U,S)\n\nA snap per time or crackle (m⋅s⁻⁵), unit conversion factor.\n\njulia> crackle(CGS,Metric) # m⋅cm⁻¹\n2⁻²5⁻² = 0.01 [m]/[cm] Gauss -> Metric\n\njulia> crackle(IAU,Metric) # m⋅day⁵⋅s⁻⁵⋅au⁻¹\nau⋅2⁻³⁵3⁻¹⁵5⁻¹⁰ = 3.1071105075209996e-14 ± 6.2e-25 [m⋅s⁻⁵]/[au⋅D⁻⁵] IAU☉ -> Metric\n\njulia> crackle(English,Metric) # m⋅ft⁻¹\nft = 0.3048 [m]/[ft] English -> Metric\n\njulia> crackle(Survey,English) # ft⋅ftUS⁻¹\nft⁻¹ftUS = 1.0000020000039997 [ft]/[ft] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.pop","page":"Unit Conversions","title":"MeasureSystems.pop","text":"pop : [LT⁻⁶], [LT⁻⁶], [LT⁻⁶], [LT⁻⁶], [LT⁻⁶]\npop(U::UnitSystem,S::UnitSystem) = speed(U,S)/time(U,S)^5\npop(v::Real,U::UnitSystem,S::UnitSystem) = v/pop(U,S)\n\nA crackle per time or pop (m⋅s⁻⁶), unit conversion factor.\n\njulia> pop(CGS,Metric) # m⋅cm⁻¹\n2⁻²5⁻² = 0.01 [m]/[cm] Gauss -> Metric\n\njulia> pop(IAU,Metric) # m⋅day⁶⋅s⁻⁶⋅au⁻¹\nau⋅2⁻⁴²3⁻¹⁸5⁻¹² = 3.5961927170380003e-19 ± 7.2e-30 [m⋅s⁻⁶]/[au⋅D⁻⁶] IAU☉ -> Metric\n\njulia> pop(English,Metric) # m⋅ft⁻¹\nft = 0.3048 [m]/[ft] English -> Metric\n\njulia> pop(Survey,English) # ft⋅ftUS⁻¹\nft⁻¹ftUS = 1.0000020000039997 [ft]/[ft] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.volumeflow","page":"Unit Conversions","title":"MeasureSystems.volumeflow","text":"volumeflow : [L³T⁻¹], [L³T⁻¹], [L³T⁻¹], [L³T⁻¹], [L³T⁻¹]\nvolumeflow(U::UnitSystem,S::UnitSystem) = area(U,S)*speed(U,S)\nvolumeflow(v::Real,U::UnitSystem,S::UnitSystem) = v/volumeflow(U,S)\n\nVolumetric flow rate or volumeflow (m³⋅s⁻¹), unit conversion factor.\n\njulia> volumeflow(CGS,Metric) # m³⋅cm⁻³\n2⁻⁶5⁻⁶ = 1.0e-6 [m³]/[cm³] Gauss -> Metric\n\njulia> volumeflow(English,Metric) # m³⋅ft⁻³\nft³ = 0.028316846592000004 [m³]/[ft³] English -> Metric\n\njulia> volumeflow(Survey,English) # ft³⋅ftUS⁻³\nft⁻³ftUS³ = 1.0000060000239996 [ft³]/[ft³] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Mechanical-Units-1","page":"Unit Conversions","title":"Mechanical Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"inertia\nMeasureSystems.mass\nmassflow\nlineardensity\nareadensity\nMeasureSystems.density\nMeasureSystems.specificweight\nMeasureSystems.specificvolume\nforce\nspecificforce\ngravityforce\nMeasureSystems.pressure\ncompressibility\nMeasureSystems.viscosity\ndiffusivity\nrotationalinertia\nimpulse\nmomentum\nangularmomentum\nyank\nenergy\nMeasureSystems.specificenergy\naction\nfluence\npower\npowerdensity\nMeasureSystems.irradiance\nradiance\nradiantintensity\nspectralflux\nspectralexposure\nsoundexposure\nimpedance(::UnitSystem,::UnitSystem)\nMeasureSystems.specificimpedance\nadmittance\ncompliance\ninertance","category":"page"},{"location":"convert.html#MeasureSystems.inertia","page":"Unit Conversions","title":"MeasureSystems.inertia","text":"inertia : [FL⁻¹T²], [FL⁻¹T²], [M], [M], [M]\ninertia(U::UnitSystem,S::UnitSystem) = mass(U,S)/gravity(U,S)\ninertia(v::Real,U::UnitSystem,S::UnitSystem) = v/inertia(U,S)\n\nInertal mass or matter quantity or resistance to aceleration (kg), unit conversion factor.\n\njulia> inertia(CGS,Metric) # kg⋅g⁻¹\n2⁻³5⁻³ = 0.001 [N⋅m⁻¹]/[dyn⋅cm⁻¹] Gauss -> Metric\n\njulia> inertia(CODATA,Metric) # kg⋅kg⁻¹\n𝘩⋅RK⋅KJ²2⁻² = 1.000000017 ± 1.2e-8 [N]/[N] CODATA -> Metric\n\njulia> inertia(Conventional,Metric) # kg⋅kg⁻¹\n𝘩⋅RK90⋅KJ90²2⁻² = 1.000000195536555 [N]/[N] Conventional -> Metric\n\njulia> inertia(English,Metric) # kg⋅slug⁻¹\ng₀⋅ft⁻¹lb = 14.593902937206364 [N⋅m⁻¹]/[lbf⋅ft⁻¹] English -> Metric\n\njulia> inertia(IAU,Metric) # kg⋅m⊙⁻¹\n𝘩⁻¹𝘤⁻¹au³kG²mP²τ³2⁻²⁸3⁻¹⁴5⁻¹⁰ = 1.988409e30 ± 4.4e25 [kg]/[M☉] IAU☉ -> Metric\n\njulia> inertia(PlanckGauss,Metric) # kg⋅mP⁻¹\nmP = 2.176434e-8 ± 2.4e-13 [kg]/[mP] PlanckGauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.mass","page":"Unit Conversions","title":"MeasureSystems.mass","text":"mass : [M], [FL⁻¹T²], [M], [M], [M]\nmass(U::UnitSystem,S::UnitSystem) = electronmass(S)/electronmass(U)\nmass(v::Real,U::UnitSystem,S::UnitSystem) = v/mass(U,S)\n\nInertal mass or matter quantity or resistance to aceleration (kg), unit conversion factor.\n\njulia> mass(CGS,Metric) # kg⋅g⁻¹\n2⁻³5⁻³ = 0.001 [kg]/[g] Gauss -> Metric\n\njulia> mass(CODATA,Metric) # kg⋅kg⁻¹\n𝘩⋅RK⋅KJ²2⁻² = 1.000000017 ± 1.2e-8 [kg]/[kg] CODATA -> Metric\n\njulia> mass(Conventional,Metric) # kg⋅kg⁻¹\n𝘩⋅RK90⋅KJ90²2⁻² = 1.000000195536555 [kg]/[kg] Conventional -> Metric\n\njulia> mass(English,Metric) # kg⋅slug⁻¹\nlb = 0.45359237 [kg]/[lbm] English -> Metric\n\njulia> mass(IAU,Metric) # kg⋅m⊙⁻¹\n𝘩⁻¹𝘤⁻¹au³kG²mP²τ³2⁻²⁸3⁻¹⁴5⁻¹⁰ = 1.988409e30 ± 4.4e25 [kg]/[M☉] IAU☉ -> Metric\n\njulia> mass(PlanckGauss,Metric) # kg⋅mP⁻¹\nmP = 2.176434e-8 ± 2.4e-13 [kg]/[mP] PlanckGauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.massflow","page":"Unit Conversions","title":"MeasureSystems.massflow","text":"massflow : [MT⁻¹], [FL⁻¹T], [MT⁻¹], [MT⁻¹], [MT⁻¹]\nmassflow(U::UnitSystem,S::UnitSystem) = mass(U,S)/time(U,S)\nmassflow(v::Real,U::UnitSystem,S::UnitSystem) = v/massflow(U,S)\n\nRate of massflow or mass per time (kg⋅s⁻¹), unit conversion factor.\n\njulia> massflow(CGS,Metric) # kg⋅g⁻¹\n2⁻³5⁻³ = 0.001 [kg]/[g] Gauss -> Metric\n\njulia> massflow(CODATA,Metric) # kg⋅kg⁻¹\n𝘩⋅RK⋅KJ²2⁻² = 1.000000017 ± 1.2e-8 [kg]/[kg] CODATA -> Metric\n\njulia> massflow(Conventional,Metric) # kg⋅kg⁻¹\n𝘩⋅RK90⋅KJ90²2⁻² = 1.000000195536555 [kg]/[kg] Conventional -> Metric\n\njulia> massflow(English,Metric) # kg⋅slug⁻¹\nlb = 0.45359237 [kg]/[lbm] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.lineardensity","page":"Unit Conversions","title":"MeasureSystems.lineardensity","text":"lineardensity : [ML⁻¹], [FL⁻²T²], [ML⁻¹], [ML⁻¹], [ML⁻¹]\nlineardensity(U::UnitSystem,S::UnitSystem) = mass(U,S)/length(U,S)\nlineardensity(v::Real,U::UnitSystem,S::UnitSystem) = v/lineardensity(U,S)\n\nAmount of lineardensity or mass per length (kg⋅m⁻¹), unit conversion factor.\n\njulia> lineardensity(CGS,Metric) # kg⋅cm¹⋅g⁻¹⋅m⁻¹\n2⁻¹5⁻¹ = 0.1 [kg⋅m⁻¹]/[g⋅cm⁻¹] Gauss -> Metric\n\njulia> lineardensity(CGS,British) # slug⋅cm¹⋅g⁻¹⋅ft⁻¹\ng₀⁻¹ft²lb⁻¹2⁻¹5⁻¹ = 0.002088543423315013 [lb⋅ft⁻²s²]/[g⋅cm⁻¹] Gauss -> British\n\njulia> lineardensity(English,Metric) # kg⋅ft¹⋅lb⁻¹⋅m⁻¹\nft⁻¹lb = 1.4881639435695537 [kg⋅m⁻¹]/[lbm⋅ft⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.areadensity","page":"Unit Conversions","title":"MeasureSystems.areadensity","text":"areadensity : [ML⁻²], [FL⁻³T²], [ML⁻²], [ML⁻²], [ML⁻²]\nareadensity(U::UnitSystem,S::UnitSystem) = mass(U,S)/area(U,S)\nareadensity(v::Real,U::UnitSystem,S::UnitSystem) = v/areadensity(U,S)\n\nSurface or areadensity or mass per area (kg⋅m⁻²), unit conversion factor.\n\njulia> areadensity(CGS,Metric) # kg⋅cm²⋅g⁻¹⋅m⁻²\n2⋅5 = 10.0 [kg⋅m⁻²]/[g⋅cm⁻²] Gauss -> Metric\n\njulia> areadensity(CGS,English) # lb⋅cm²⋅g⁻¹⋅ft⁻²\nft²lb⁻¹2⋅5 = 2.048161436225217 [lbm⋅ft⁻²]/[g⋅cm⁻²] Gauss -> English\n\njulia> areadensity(English,Metric) # kg⋅ft²⋅lb⁻¹⋅m⁻²\nft⁻²lb = 4.88242763638305 [kg⋅m⁻²]/[lbm⋅ft⁻²] English -> Metric\n\njulia> areadensity(British,Metric) # kg⋅ft²⋅slug⁻¹⋅m⁻²\ng₀⋅ft⁻³lb = 157.08746384624618 [kg⋅m⁻²]/[lb⋅ft⁻³s²] British -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.density","page":"Unit Conversions","title":"MeasureSystems.density","text":"density : [ML⁻³], [FL⁻⁴T²], [ML⁻³], [ML⁻³], [ML⁻³]\ndensity(U::UnitSystem,S::UnitSystem) = mass(U,S)/volume(U,S)\ndensity(v::Real,U::UnitSystem,S::UnitSystem) = v/density(U,S)\n\nSpecific mass or mass per volume or density (kg⋅m⁻³), unit conversion factor.\n\njulia> density(CGS,Metric) # kg⋅cm³⋅g⁻¹⋅m⁻³\n2³5³ = 1000.0 [kg⋅m⁻³]/[g⋅cm⁻³] Gauss -> Metric\n\njulia> density(CGS,Brtish) # slug⋅cm³⋅g⁻¹⋅ft⁻³\ng₀⁻¹ft⁴lb⁻¹2³5³ = 1.940320331979716 [slug⋅ft⁻³]/[g⋅cm⁻³] Gauss -> British\n\njulia> density(English,Metric) # kg⋅ft³⋅lb⁻¹⋅m⁻³\nft⁻³lb = 16.018463373960138 [kg⋅m⁻³]/[lbm⋅ft⁻³] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificweight","page":"Unit Conversions","title":"MeasureSystems.specificweight","text":"specificweight : [FL⁻³], [FL⁻³], [ML⁻²T⁻²], [ML⁻²T⁻²], [ML⁻²T⁻²]\nspecificweight(U::UnitSystem,S::UnitSystem) = force(U,S)/volume(U,S)\nspecificweight(v::Real,U::UnitSystem,S::UnitSystem) = v/specificweight(U,S)\n\nSpecific weight or force per volume (N⋅m⁻³ or lb⋅ft⁻³), unit conversion factor.\n\njulia> specificweight(CGS,Metric) # N⋅cm³⋅dyn⁻¹⋅m⁻³\n2⋅5 = 10.0 [kg⋅m⁻²s⁻²]/[g⋅cm⁻²s⁻²] Gauss -> Metric\n\njulia> specificweight(CGS,Brtish) # lb⋅cm³⋅dyn⁻¹⋅ft⁻³\ng₀⁻¹ft³lb⁻¹2⋅5 = 0.0636588035426416 [lb⋅ft⁻³]/[g⋅cm⁻²s⁻²] Gauss -> British\n\njulia> specificweight(English,Metric) # N⋅ft³⋅lb⁻¹⋅m⁻³\ng₀⋅ft⁻³lb = 157.08746384624618 [kg⋅m⁻²s⁻²]/[lbf⋅ft⁻³] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificvolume","page":"Unit Conversions","title":"MeasureSystems.specificvolume","text":"specificvolume : [M⁻¹L³], [F⁻¹L⁴T⁻²], [M⁻¹L³], [M⁻¹L³], [M⁻¹L³]\nspecificvolume(U::UnitSystem,S::UnitSystem) = volume(U,S)/mass(U,S)\nspecificvolume(v::Real,U::UnitSystem,S::UnitSystem) = v/specificvolume(U,S)\n\nReciprocal density or volume per mass or specificvolume (m³⋅kg), unit conversion factor.\n\njulia> specificvolume(CGS,Metric) # g⋅m³⋅kg⁻¹⋅cm⁻³\n2⁻³5⁻³ = 0.001 [kg⁻¹m³]/[g⁻¹cm³] Gauss -> Metric\n\njulia> specificvolume(CGS,British) # kg⋅ft³⋅slug⁻¹⋅cm⁻³\ng₀⋅ft⁻⁴lb⋅2⁻³5⁻³ = 0.5153788183931961 [lb⁻¹ft⁴s⁻²]/[g⁻¹cm³] Gauss -> British\n\njulia> specificvolume(English,Metric) # lb⋅m³⋅kg⁻¹⋅ft⁻³\nft³lb⁻¹ = 0.062427960576144616 [kg⁻¹m³]/[lbm⁻¹ft³] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.force","page":"Unit Conversions","title":"MeasureSystems.force","text":"force : [F], [F], [MLT⁻²], [MLT⁻²], [MLT⁻²]\nforce(U::UnitSystem,S::UnitSystem) = inertia(U,S)*acceleration(U,S)\nforce(v::Real,U::UnitSystem,S::UnitSystem) = v/force(U,S)\n\nWeight or force or inertia times acceleration (N, kg⋅m⋅s⁻²), unit conversion factor.\n\njulia> force(CGS,Metric) # N⋅dyn⁻¹\n2⁻⁵5⁻⁵ = 9.999999999999999e-6 [N]/[dyn] Gauss -> Metric\n\njulia> force(CGS,English) # lb⋅dyn⁻¹\ng₀⁻¹lb⁻¹2⁻⁵5⁻⁵ = 2.2480894309971044e-6 [lbf]/[dyn] Gauss -> English\n\njulia> force(English,Metric) # N⋅lb⁻¹\ng₀⋅lb = 4.4482216152605 [N]/[lbf] English -> Metric\n\njulia> force(FPS,Metric) # pdl⋅N⁻¹\nft⋅lb = 0.13825495437600002 [N]/[pdl] FPS -> Metric\n\njulia> force(MetricEngineering,Metric) # kp⋅N⁻¹\ng₀ = 9.80665 [N]/[kgf] MetricEngineering -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificforce","page":"Unit Conversions","title":"MeasureSystems.specificforce","text":"specificforce : [FM⁻¹], [LT⁻²], [LT⁻²], [LT⁻²], [LT⁻²]\nspecificforce(U::UnitSystem,S::UnitSystem) = acceleration(U,S)/gravity(U,S)\nspecificforce(v::Real,U::UnitSystem,S::UnitSystem) = v/specificforce(U,S)\n\nWeight or force per mass or gforce (N/kg, m⋅s⁻²), unit conversion factor.\n\njulia> specificforce(CGS,Metric)\n2⁻²5⁻² = 0.01 [m⋅s⁻²]/[gal] Gauss -> Metric\n\njulia> specificforce(MetricEngineering,Metric)\ng₀ = 9.80665 [N]/[kgf] MetricEngineering -> Metric\n\njulia> specificforce(English,Metric)\ng₀ = 9.80665 [m⋅s⁻²]/[g₀] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.gravityforce","page":"Unit Conversions","title":"MeasureSystems.gravityforce","text":"gravityforce : [F⁻¹MLT⁻²], [𝟙], [𝟙], [𝟙], [𝟙]\ngravityforce(U::UnitSystem,S::UnitSystem) = acceleration(U,S)/specificforce(U,S)\ngravityforce(v::Real,U::UnitSystem,S::UnitSystem) = v/gravityforce(U,S)\n\nReference acceleration per specificforce (𝟏, F⁻¹MLT⁻²), unit conversion factor.\n\njulia> gravityforce(Metric,CGS)\n𝟏 = 1.0 [s²]/[s²] Metric -> Gauss\n\njulia> gravityforce(Metric,MetricEngineering)\ng₀ = 9.80665 [kgf⁻¹]/[N⁻¹] Metric -> MetricEngineering\n\njulia> gravityforce(Metric,English)\ng₀⋅ft⁻¹ = 32.17404855643044 [lbf⁻¹lbm⋅ft]/[s²] Metric -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.pressure","page":"Unit Conversions","title":"MeasureSystems.pressure","text":"pressure : [FL⁻²], [FL⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²], [ML⁻¹T⁻²]\npressure(U::UnitSystem,S::UnitSystem) = force(U,S)/area(U,S)\npressure(v::Real,U::UnitSystem,S::UnitSystem) = v/pressure(U,S)\n\nPressure or stress or force per area (Pa, N⋅m⁻², kg⋅m⁻¹⋅s⁻²), unit conversion factor.\n\njulia> pressure(CGS,Metric) # Pa⋅Ba⁻¹\n2⁻¹5⁻¹ = 0.1 [Pa]/[Ba] Gauss -> Metric\n\njulia> 1/atm # Pa⋅atm⁻¹\natm⁻¹ = 9.869232667160129e-6\n\njulia> pressure(English,Metric) # Pa⋅ft²⋅lb⁻¹\ng₀⋅ft⁻²lb = 47.88025898033583 [Pa]/[lbf⋅ft⁻²] English -> Metric\n\njulia> pressure(Metric,IPS) # psi⋅Pa⁻¹\ng₀⁻¹ft²lb⁻¹2⁻⁴3⁻² = 0.0001450377377302092 [lb⋅in⁻²]/[Pa] Metric -> IPS\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.compressibility","page":"Unit Conversions","title":"MeasureSystems.compressibility","text":"compressibility : [F⁻¹L²], [F⁻¹L²], [M⁻¹LT²], [M⁻¹LT²], [M⁻¹LT²]\ncompressibility(U::UnitSystem,S::UnitSystem) = 1/pressure(U,S)\ncompressibility(v::Real,U::UnitSystem,S::UnitSystem) = v/compressibility(U,S)\n\nRelative volume change or compressibility (Pa⁻¹), unit conversion factor.\n\njulia> compressibility(CGS,Metric) # Ba⋅Pa⁻¹\n2⋅5 = 10.0 [Pa⁻¹]/[Ba⁻¹] Gauss -> Metric\n\njulia> compressibility(English,Metric) # lb⋅ft⁻²⋅Pa⁻¹\ng₀⁻¹ft²lb⁻¹ = 0.02088543423315013 [Pa⁻¹]/[lbf⁻¹ft²] English -> Metric\n\njulia> compressibility(Metric,IPS) # Pa⋅psi⁻¹\ng₀⋅ft⁻²lb⋅2⁴3² = 6894.75729316836 [lb⁻¹in²]/[Pa⁻¹] Metric -> IPS\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.viscosity","page":"Unit Conversions","title":"MeasureSystems.viscosity","text":"viscosity : [FL⁻²T], [FL⁻²T], [ML⁻¹T⁻¹], [ML⁻¹T⁻¹], [ML⁻¹T⁻¹]\nviscosity(U::UnitSystem,S::UnitSystem) = inertia(U,S)/length(U,S)/time(U,S)\nviscosity(v::Real,U::UnitSystem,S::UnitSystem) = v/viscosity(U,S)\n\nResistance to deformation or viscosity (Pa⋅s, kg⋅m⁻¹⋅s⁻¹), unit conversion factor.\n\njulia> viscosity(CGS,Metric) # Pa⋅Ba⁻¹\n2⁻¹5⁻¹ = 0.1 [Pa]/[Ba] Gauss -> Metric\n\njulia> viscosity(English,Metric) # Pa⋅ft²⋅lb⁻¹\ng₀⋅ft⁻²lb = 47.88025898033583 [Pa]/[lbf⋅ft⁻²] English -> Metric\n\njulia> viscosity(British,Metric) # Pa⋅ft²⋅lb⁻¹\ng₀⋅ft⁻²lb = 47.88025898033583 [Pa]/[lb⋅ft⁻²] British -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.diffusivity","page":"Unit Conversions","title":"MeasureSystems.diffusivity","text":"diffusivity : [L²T⁻¹], [L²T⁻¹], [L²T⁻¹], [L²T⁻¹], [L²T⁻¹]\ndiffusivity(U::UnitSystem,S::UnitSystem) = speed(U,S)*length(U,S)\ndiffusivity(v::Real,U::UnitSystem,S::UnitSystem) = v/diffusivity(U,S)\n\nThermal diffusivity or kinematic viscostiy (m²⋅s⁻¹), unit conversion factor.\n\njulia> diffusivity(CGS,Metric) # m²⋅cm⁻²\n2⁻⁴5⁻⁴ = 0.0001 [m²]/[cm²] Gauss -> Metric\n\njulia> diffusivity(English,Metric) # m²⋅ft⁻²\nft² = 0.09290304 [m²]/[ft²] English -> Metric\n\njulia> diffusivity(Survey,English) # ft²⋅ftUS⁻²\nft⁻²ftUS² = 1.0000040000119996 [ft²]/[ft²] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.rotationalinertia","page":"Unit Conversions","title":"MeasureSystems.rotationalinertia","text":"rotationalinertia : [ML²], [FLT²], [ML²], [ML²], [ML²]\nrotationalinertia(U::UnitSystem,S::UnitSystem) = mass(U,S)*area(U,S)\nrotationalinertia(v::Real,U::UnitSystem,S::UnitSystem) = v/rotationalinertia(U,S)\n\nMoment of inertia or rotationalinertia (kg⋅m²), unit conversion factor.\n\njulia> rotationalinertia(CGS,Metric) # kg⋅m²⋅g⁻¹⋅cm⁻²\n2⁻⁷5⁻⁷ = 1.0e-7 [kg⋅m²]/[g⋅cm²] Gauss -> Metric\n\njulia> rotationalinertia(CGS,British) # slug⋅ft²⋅g⁻¹⋅cm⁻²\ng₀⁻¹ft⁻¹lb⁻¹2⁻⁷5⁻⁷ = 7.375621492772652e-8 [lb⋅ft⋅s²]/[g⋅cm²] Gauss -> British\n\njulia> rotationalinertia(English,Metric) # kg⋅m²⋅lb⁻¹⋅ft⁻²\nft²lb = 0.042140110093804806 [kg⋅m²]/[lbm⋅ft²] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.impulse","page":"Unit Conversions","title":"MeasureSystems.impulse","text":"impulse : [FT], [FT], [MLT⁻¹], [MLT⁻¹], [MLT⁻¹]\nimpulse(U::UnitSystem,S::UnitSystem) = force(U,S)*time(U,S)\nimpulse(v::Real,U::UnitSystem,S::UnitSystem) = v/impulse(U,S)\n\nLinear impulse or force times time (N⋅s, kg⋅m⋅s⁻¹), unit conversion factor.\n\njulia> impulse(CGS,Metric) # N⋅dyn⁻¹\n2⁻⁵5⁻⁵ = 9.999999999999999e-6 [N]/[dyn] Gauss -> Metric\n\njulia> impulse(CGS,English) # lb⋅dyn⁻¹\ng₀⁻¹lb⁻¹2⁻⁵5⁻⁵ = 2.2480894309971044e-6 [lbf]/[dyn] Gauss -> English\n\njulia> impulse(English,Metric) # N⋅lb⁻¹\ng₀⋅lb = 4.4482216152605 [N]/[lbf] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.momentum","page":"Unit Conversions","title":"MeasureSystems.momentum","text":"momentum : [MLT⁻¹], [FT], [MLT⁻¹], [MLT⁻¹], [MLT⁻¹]\nmomentum(U::UnitSystem,S::UnitSystem) = mass(U,S)*speed(U,S)\nmomentum(v::Real,U::UnitSystem,S::UnitSystem) = v/momentum(U,S)\n\nLinear momentum or mass times speed (N⋅s, kg⋅m⋅s⁻¹), unit conversion factor.\n\njulia> momentum(CGS,Metric) # N⋅dyn⁻¹\n2⁻⁵5⁻⁵ = 9.999999999999999e-6 [kg⋅m]/[g⋅cm] Gauss -> Metric\n\njulia> momentum(CGS,English) # lb⋅dyn⁻¹\nft⁻¹lb⁻¹2⁻⁵5⁻⁵ = 7.233013851209893e-5 [lbm⋅ft]/[g⋅cm] Gauss -> English\n\njulia> momentum(British,Metric) # N⋅lb⁻¹\ng₀⋅lb = 4.4482216152605 [kg⋅m]/[lb⋅s²] British -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.angularmomentum","page":"Unit Conversions","title":"MeasureSystems.angularmomentum","text":"angularmomentum : [FLTA], [FLT], [ML²T⁻¹], [ML²T⁻¹], [ML²T⁻¹]\nangularmomentum(U::UnitSystem,S::UnitSystem) = momentum(U,S)*lengt(U,S)*angle(U,S)\nangularmomentum(v::Real,U::UnitSystem,S::UnitSystem) = v/angularmomentum(U,S)\n\nRotational momentum or angularmomentum (N⋅m⋅s, kg⋅m²⋅s⁻¹), unit conversion factor.\n\njulia> momentum(CGS,Metric) # N⋅m⋅dyn⁻¹⋅cm⁻¹\n2⁻⁵5⁻⁵ = 9.999999999999999e-6 [kg⋅m]/[g⋅cm] Gauss -> Metric\n\njulia> momentum(CGS,English) # lb⋅ft⋅dyn⁻¹⋅cm⁻¹\nft⁻¹lb⁻¹2⁻⁵5⁻⁵ = 7.233013851209893e-5 [lbm⋅ft]/[g⋅cm] Gauss -> English\n\njulia> momentum(British,Metric) # N⋅m⋅lb⁻¹⋅ft⁻¹\ng₀⋅lb = 4.4482216152605 [kg⋅m]/[lb⋅s²] British -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.yank","page":"Unit Conversions","title":"MeasureSystems.yank","text":"yank : [MLT⁻³], [FT⁻¹], [MLT⁻³], [MLT⁻³], [MLT⁻³]\nyank(U::UnitSystem,S::UnitSystem) = mass(U,S)*jerk(U,S)\nyank(v::Real,U::UnitSystem,S::UnitSystem) = v/yank(U,S)\n\nRate of change of force or yank (N⋅s⁻¹, kg⋅m⋅s⁻³), unit conversion factor.\n\njulia> yank(CGS,Metric) # N⋅dyn⁻¹\n2⁻⁵5⁻⁵ = 9.999999999999999e-6 [kg⋅m]/[g⋅cm] Gauss -> Metric\n\njulia> yank(CGS,English) # lb⋅dyn⁻¹\nft⁻¹lb⁻¹2⁻⁵5⁻⁵ = 7.233013851209893e-5 [lbm⋅ft]/[g⋅cm] Gauss -> English\n\njulia> yank(British,Metric) # N⋅lb⁻¹⋅\ng₀⋅lb = 4.4482216152605 [kg⋅m]/[lb⋅s²] British -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.energy","page":"Unit Conversions","title":"MeasureSystems.energy","text":"energy : [FL], [FL], [ML²T⁻²], [ML²T⁻²], [ML²T⁻²]\nenergy(U::UnitSystem,S::UnitSystem) = mass(U,S)*specificenergy(U,S)\nenergy(v::Real,U::UnitSystem,S::UnitSystem) = v/energy(U,S)\n\nWork or heat or energy (J, N⋅m, kg⋅m²⋅s⁻²), unit conversion factor.\n\njulia> energy(CGS,Metric) # J⋅erg⁻¹\n2⁻⁷5⁻⁷ = 1.0e-7 [J]/[erg] Gauss -> Metric\n\njulia> energy(CGS,English) # ft⋅lb⋅erg⁻¹\ng₀⁻¹ft⁻¹lb⁻¹2⁻⁷5⁻⁷ = 7.375621492772652e-8 [lbf⋅ft]/[erg] Gauss -> English\n\njulia> energy(English,Metric) # J⋅ft⁻¹⋅lb⁻¹\ng₀⋅ft⋅lb = 1.3558179483314003 [J]/[lbf⋅ft] English -> Metric\n\njulia> 0.001/3600 # J⋅kW⁻¹⋅h⁻¹\n2.7777777777777776e-7\n\njulia> 1/elementarycharge(SI2019) # J⋅eV⁻¹\n𝘦⁻¹ = 6.241509074460763e18 [C⁻¹] SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificenergy","page":"Unit Conversions","title":"MeasureSystems.specificenergy","text":"specificenergy : [FM⁻¹L], [L²T⁻²], [L²T⁻²], [L²T⁻²], [L²T⁻²]\nspecificenergy(U::UnitSystem,S::UnitSystem) = speed(U,S)^2\nspecificenergy(v::Real,U::UnitSystem,S::UnitSystem) = v/specificenergy(U,S)\n\nMassic energy or energy per mass or specificenergy (J⋅kg⁻¹), unit conversion factor.\n\njulia> specificenergy(CGS,Metric) # m²⋅cm⁻²\n2⁻⁴5⁻⁴ = 0.0001 [J⋅kg⁻¹]/[erg⋅g⁻¹] Gauss -> Metric\n\njulia> specificenergy(IAU,Metric) # m²⋅day²⋅s⁻²⋅au⁻²\nau²2⁻¹⁴3⁻⁶5⁻⁴ = 2.99794277772e12 ± 120.0 [J⋅kg⁻¹]/[au²D⁻²] IAU☉ -> Metric\n\njulia> specificenergy(English,Metric) # m²⋅ft⁻²\ng₀⋅ft = 2.98906692 [J⋅kg⁻¹]/[lbf⋅lbm⁻¹ft] English -> Metric\n\njulia> specificenergy(Survey,English) # ft²⋅ftUS⁻²\nft⁻¹ftUS = 1.0000020000039997 [ft]/[ft] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.action","page":"Unit Conversions","title":"MeasureSystems.action","text":"action : [FLT], [FLT], [ML²T⁻¹], [ML²T⁻¹], [ML²T⁻¹]\naction(U::UnitSystem,S::UnitSystem) = energy(U,S)*time(U,S)\naction(v::Real,U::UnitSystem,S::UnitSystem) = v/action(U,S)\n\nIntegrated momentum over length or action (J⋅s, N⋅m⋅s), unit conversion factor.\n\njulia> action(CGS,Metric) # J⋅erg⁻¹\n2⁻⁷5⁻⁷ = 1.0e-7 [J]/[erg] Gauss -> Metric\n\njulia> action(CGS,English) # ft⋅lb⋅erg⁻¹\ng₀⁻¹ft⁻¹lb⁻¹2⁻⁷5⁻⁷ = 7.375621492772652e-8 [lbf⋅ft]/[erg] Gauss -> English\n\njulia> action(English,Metric) # J⋅ft⁻¹⋅lb⁻¹\ng₀⋅ft⋅lb = 1.3558179483314003 [J]/[lbf⋅ft] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.fluence","page":"Unit Conversions","title":"MeasureSystems.fluence","text":"fluence : [FL⁻¹], [FL⁻¹], [MT⁻²], [MT⁻²], [MT⁻²]\nfluence(U::UnitSystem,S::UnitSystem) = energy(U,S)/area(U,S\nfluence(v::Real,U::UnitSystem,S::UnitSystem) = v/fluence(U,S)\n\nRadiant exposure or force per length or stiffness (N⋅m⁻¹, J⋅m⁻²), unit conversion factor.\n\njulia> fluence(CGS,Metric) # kg⋅g⁻¹\n2⁻³5⁻³ = 0.001 [kg]/[g] Gauss -> Metric\n\njulia> fluence(CGS,English) # lb⋅g⁻¹\ng₀⁻¹ft⋅lb⁻¹2⁻³5⁻³ = 6.852176585679177e-5 [lbf⋅ft⁻¹]/[dyn⋅cm⁻¹] Gauss -> English\n\njulia> fluence(CODATA,Metric) # kg⋅kg⁻¹\n𝘩⋅RK⋅KJ²2⁻² = 1.000000017 ± 1.2e-8 [kg]/[kg] CODATA -> Metric\n\njulia> fluence(Conventional,Metric) # kg⋅kg⁻¹\n𝘩⋅RK90⋅KJ90²2⁻² = 1.000000195536555 [N]/[N] Conventional -> Metric\n\njulia> fluence(English,Metric) # kg⋅lb⁻¹\ng₀⋅ft⁻¹lb = 14.593902937206364 [N⋅m⁻¹]/[lbf⋅ft⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.power","page":"Unit Conversions","title":"MeasureSystems.power","text":"power : [FLT⁻¹], [FLT⁻¹], [ML²T⁻³], [ML²T⁻³], [ML²T⁻³]\npower(U::UnitSystem,S::UnitSystem) = energy(U,S)/time(U,S))\npower(v::Real,U::UnitSystem,S::UnitSystem) = v/power(U,S)\n\nRadiant flux or power or energy per time (W, J⋅s⁻¹, kg⋅m²⋅s⁻³), unit conversion factor.\n\njulia> power(CGS,Metric) # W⋅s⋅erg⁻¹\n2⁻⁷5⁻⁷ = 1.0e-7 [J]/[erg] Gauss -> Metric\n\njulia> power(English,Metric) # W⋅s⋅ft⁻¹⋅lb⁻¹\ng₀⋅ft⋅lb = 1.3558179483314003 [J]/[lbf⋅ft] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.powerdensity","page":"Unit Conversions","title":"MeasureSystems.powerdensity","text":"powerdensity : [FL⁻²T⁻¹], [FL⁻²T⁻¹], [ML⁻¹T⁻³], [ML⁻¹T⁻³], [ML⁻¹T⁻³]\npowerdensity(U::UnitSystem,S::UnitSystem) = power(U,S)/volume(U,S)\npowerdensity(v::Real,U::UnitSystem,S::UnitSystem) = v/powerdensity(U,S)\n\nSpectral irradiance (volume) or powerdensity (W⋅m⁻³), unit conversion factor.\n\njulia> powerdensity(CGS,Metric) # kg⋅cm⋅g⁻¹⋅m⁻¹\n2⁻¹5⁻¹ = 0.1 [Pa]/[Ba] Gauss -> Metric\n\njulia> powerdensity(CGS,English) # lb⋅cm⋅g⁻¹⋅ft⁻¹\ng₀⁻¹ft²lb⁻¹2⁻¹5⁻¹ = 0.002088543423315013 [lbf⋅ft⁻²]/[Ba] Gauss -> English\n\njulia> powerdensity(English,Metric) # kg⋅ft⋅lb⁻¹⋅m⁻¹\ng₀⋅ft⁻²lb = 47.88025898033583 [Pa]/[lbf⋅ft⁻²] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.irradiance","page":"Unit Conversions","title":"MeasureSystems.irradiance","text":"irradiance : [FL⁻¹T⁻¹], [FL⁻¹T⁻¹], [MT⁻³], [MT⁻³], [MT⁻³]\nirradiance(U::UnitSystem,S::UnitSystem) = power(U,S)/area(U,S)\nirradiance(v::Real,U::UnitSystem,S::UnitSystem) = v/irradiance(U,S)\n\nHeat flux density or irradiance or power per area (W⋅m⁻², kg⋅s⁻³), unit conversion factor.\n\njulia> irradiance(CGS,Metric) # kg⋅g⁻¹\n2⁻³5⁻³ = 0.001 [N⋅m⁻¹]/[dyn⋅cm⁻¹] Gauss -> Metric\n\njulia> irradiance(CGS,English) # lb⋅g⁻¹\ng₀⁻¹ft⋅lb⁻¹2⁻³5⁻³ = 6.852176585679177e-5 [lbf⋅ft⁻¹]/[dyn⋅cm⁻¹] Gauss -> English\n\njulia> irradiance(English,Metric) # kg⋅lb⁻¹\ng₀⋅ft⁻¹lb = 14.593902937206364 [N⋅m⁻¹]/[lbf⋅ft⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.radiance","page":"Unit Conversions","title":"MeasureSystems.radiance","text":"radiance : [FL⁻¹T⁻¹A⁻²], [FL⁻¹T⁻¹], [MT⁻³], [MT⁻³], [MT⁻³]\nradiance(U::UnitSystem,S::UnitSystem) = irradiance(U,S)/solidangle(U,S)\nradiance(v::Real,U::UnitSystem,S::UnitSystem) = v/radiance(U,S)\n\nRadiance or irradiance per solidangle (W⋅m⁻²⋅sr⁻¹, kg⋅s⁻³⋅sr⁻¹), unit conversion factor.\n\njulia> radiance(CGS,Metric) # kg⋅g⁻¹\n2⁻³5⁻³ = 0.001 [N⋅m⁻¹]/[dyn⋅cm⁻¹] Gauss -> Metric\n\njulia> radiance(CGS,English) # lb⋅g⁻¹\ng₀⁻¹ft⋅lb⁻¹2⁻³5⁻³ = 6.852176585679177e-5 [lbf⋅ft⁻¹]/[dyn⋅cm⁻¹] Gauss -> English\n\njulia> radiance(English,Metric) # kg⋅lb⁻¹\ng₀⋅ft⁻¹lb = 14.593902937206364 [N⋅m⁻¹]/[lbf⋅ft⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.radiantintensity","page":"Unit Conversions","title":"MeasureSystems.radiantintensity","text":"radiantintensity : [FLT⁻¹A⁻²], [FLT⁻¹], [ML²T⁻³], [ML²T⁻³], [ML²T⁻³]\nradiantintensity(U::UnitSystem,S::UnitSystem) = power(U,S)/solidangle(U,S)\nradiantintensity(v::Real,U::UnitSystem,S::UnitSystem) = v/radiantintensity(U,S)\n\nRadiant intensity or power per solidangle (W⋅sr⁻¹, W⋅rad⁻²), unit conversion factor.\n\njulia> radiantintensity(CGS,Metric) # W⋅s⋅erg⁻¹\n2⁻⁷5⁻⁷ = 1.0e-7 [J]/[erg] Gauss -> Metric\n\njulia> radiantintensity(English,Metric) # W⋅s⋅ft⁻¹⋅lb⁻¹\ng₀⋅ft⋅lb = 1.3558179483314003 [J]/[lbf⋅ft] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.spectralflux","page":"Unit Conversions","title":"MeasureSystems.spectralflux","text":"spectralflux : [FT⁻¹], [FT⁻¹], [MLT⁻³], [MLT⁻³], [MLT⁻³]\nspectralflux(U::UnitSystem,S::UnitSystem) = power(U,S)/length(U,S)\nspectralflux(v::Real,U::UnitSystem,S::UnitSystem) = v/spectralflux(U,S)\n\nSpectral power or power per wave length (W⋅m⁻¹), unit conversion factor.\n\njulia> spectralflux(CGS,Metric) # kg⋅m⋅g⁻¹⋅cm⁻¹\n2⁻⁵5⁻⁵ = 9.999999999999999e-6 [N]/[dyn] Gauss -> Metric\n\njulia> spectralflux(CGS,English) # lb⋅ft⋅g⁻¹⋅cm⁻¹\ng₀⁻¹lb⁻¹2⁻⁵5⁻⁵ = 2.2480894309971044e-6 [lbf]/[dyn] Gauss -> English\n\njulia> spectralflux(English,Metric) # kg⋅m⋅lb⁻¹⋅ft⁻¹\ng₀⋅lb = 4.4482216152605 [N]/[lbf] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.spectralexposure","page":"Unit Conversions","title":"MeasureSystems.spectralexposure","text":"spectralexposure : [FL⁻¹T], [FL⁻¹T], [MT⁻¹], [MT⁻¹], [MT⁻¹]\nspectralexposure(U::UnitSystem,S::UnitSystem) = force(U,S)/speed(U,S)\nspectralexposure(v::Real,U::UnitSystem,S::UnitSystem) = v/spectralexposure(U,S)\n\nSpectral exposure or fluence per frequency (N⋅s⋅m⁻¹, J⋅s⋅m⁻²), unit conversion factor.\n\njulia> spectralexposure(CGS,Metric) # kg⋅g⁻¹\n2⁻³5⁻³ = 0.001 [N⋅m⁻¹]/[dyn⋅cm⁻¹] Gauss -> Metric\n\njulia> spectralexposure(CGS,English) # lb⋅g⁻¹\ng₀⁻¹ft⋅lb⁻¹2⁻³5⁻³ = 6.852176585679177e-5 [lbf⋅ft⁻¹]/[dyn⋅cm⁻¹] Gauss -> English\n\njulia> spectralexposure(CODATA,Metric) # kg⋅kg⁻¹\n𝘩⋅RK⋅KJ²2⁻² = 1.000000017 ± 1.2e-8 [N]/[N] CODATA -> Metric\n\njulia> spectralexposure(Conventional,Metric) # kg⋅kg⁻¹\n𝘩⋅RK90⋅KJ90²2⁻² = 1.000000195536555 [N]/[N] Conventional -> Metric\n\njulia> spectralexposure(English,Metric) # kg⋅lb⁻¹\ng₀⋅ft⁻¹lb = 14.593902937206364 [N⋅m⁻¹]/[lbf⋅ft⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.soundexposure","page":"Unit Conversions","title":"MeasureSystems.soundexposure","text":"soundexposure : [F²L⁻⁴T], [F²L⁻⁴T], [M²L⁻²T⁻³], [M²L⁻²T⁻³], [M²L⁻²T⁻³]\nsoundexposure(U::UnitSystem,S::UnitSystem) = pressure(U,S)^2*time(U,S)\nsoundexposure(v::Real,U::UnitSystem,S::UnitSystem) = v/soundexposure(U,S)\n\nSquare of pressure by time or soundexposure (Pa²⋅s, N²⋅m⁻⁴), unit conversion factor.\n\njulia> soundexposure(CGS,Metric) # Pa²⋅Ba⁻²\n2⁻²5⁻² = 0.01 [kg²m⁻²s⁻⁴]/[g²cm⁻²s⁻⁴] Gauss -> Metric\n\njulia> soundexposure(English,Metric) # Pa²⋅ft⁴⋅lb⁻²\ng₀²ft⁻⁴lb² = 2292.519200024031 [kg²m⁻²s⁻⁴]/[lbf²ft⁻⁴] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.impedance-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.impedance","text":"impedance : [FL⁻⁵T], [FL⁻⁵T], [ML⁻⁴T⁻¹], [ML⁻⁴T⁻¹], [ML⁻⁴T⁻¹]\nimpedance(U::UnitSystem,S::UnitSystem) = specificimpedance(U,S)/area(U,S)\nimpedance(v::Real,U::UnitSystem,S::UnitSystem) = v/impedance(U,S)\n\nAcoustic impedance (Rayl⋅m⁻², Pa⋅s⋅m⁻³, kg⋅s⁻¹⋅m⁻⁴), unit conversion factor.\n\njulia> impedance(CGS,Metric) # Pa⋅cm³⋅m⁻³⋅Ba⁻¹\n2⁵5⁵ = 100000.0 [kg⋅m⁻⁴s⁻²]/[g⋅cm⁻⁴s⁻²] Gauss -> Metric\n\njulia> impedance(English,Metric) # Pa⋅ft⁵⋅m⁻³⋅lb⁻¹\ng₀⋅ft⁻⁵lb = 1690.8753884291211 [kg⋅m⁻⁴s⁻²]/[lbf⋅ft⁻⁵] English -> Metric\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.specificimpedance","page":"Unit Conversions","title":"MeasureSystems.specificimpedance","text":"specificimpedance : [FL⁻³T], [FL⁻³T], [ML⁻²T⁻¹], [ML⁻²T⁻¹], [ML⁻²T⁻¹]\nspecificimpedance(U::UnitSystem,S::UnitSystem) = pressure(U,S)/speed(U,S)\nspecificimpedance(v::Real,U::UnitSystem,S::UnitSystem) = v/specificimpedance(U,S)\n\nCharacteristic specific acoustic impedance (Rayl, Pa⋅s⋅m⁻¹), unit conversion factor.\n\njulia> specificimpedance(CGS,Metric) # Pa⋅cm⋅m⁻¹⋅Ba⁻¹\n2⋅5 = 10.0 [kg⋅m⁻²s⁻²]/[g⋅cm⁻²s⁻²] Gauss -> Metric\n\njulia> specificimpedance(English,Metric) # Pa⋅ft³⋅m⁻¹⋅lb⁻¹\ng₀⋅ft⁻³lb = 157.08746384624618 [kg⋅m⁻²s⁻²]/[lbf⋅ft⁻³] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.admittance","page":"Unit Conversions","title":"MeasureSystems.admittance","text":"admittance : [F⁻¹L⁵T⁻¹], [F⁻¹L⁵T⁻¹], [M⁻¹L⁴T], [M⁻¹L⁴T], [M⁻¹L⁴T]\nadmittance(U::UnitSystem,S::UnitSystem) = area(U,S)/specificimpedance(U,S)\nadmittance(v::Real,U::UnitSystem,S::UnitSystem) = v/admittance(U,S)\n\nAcoustic admittance (m²⋅Rayl⁻¹, m³⋅s⁻¹⋅Pa⁻¹, m⁴⋅s⋅kg⁻¹), unit conversion factor.\n\njulia> admittance(CGS,Metric) # Ba⋅m³⋅cm⁻³⋅Pa⁻¹\n2⁻⁵5⁻⁵ = 9.999999999999999e-6 [kg⁻¹m⁴s²]/[g⁻¹cm⁴s²] Gauss -> Metric\n\njulia> admittance(English,Metric) # lb⋅m³⋅ft⁻⁵⋅Pa⁻¹\ng₀⁻¹ft⁵lb⁻¹ = 0.0005914096371874175 [kg⁻¹m⁴s²]/[lbf⁻¹ft⁵] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.compliance","page":"Unit Conversions","title":"MeasureSystems.compliance","text":"compliance : [M⁻¹T²], [F⁻¹L], [M⁻¹T²], [M⁻¹T²], [M⁻¹T²]\ncompliance(U::UnitSystem,S::UnitSystem) = time(U,S)^2/mass(U,S)\ncompliance(v::Real,U::UnitSystem,S::UnitSystem) = v/compliance(U,S)\n\nAcoustic compliance is reciprocal of fluence (m⋅N⁻¹, m³⋅Pa⁻¹), unit conversion factor.\n\njulia> compliance(CGS,Metric) # kg⋅g⁻¹\n2³5³ = 1000.0 [kg⁻¹]/[g⁻¹] Gauss -> Metric\n\njulia> compliance(CGS,English) # slug⋅g⁻¹\nlb⋅2³5³ = 453.59237 [lbm⁻¹]/[g⁻¹] Gauss -> English\n\njulia> compliance(English,Metric) # kg⋅lb⁻¹\nlb⁻¹ = 2.2046226218487757 [kg⁻¹]/[lbm⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.inertance","page":"Unit Conversions","title":"MeasureSystems.inertance","text":"inertance : [ML⁻⁴], [FL⁻⁵T²], [ML⁻⁴], [ML⁻⁴], [ML⁻⁴]\ninertance(U::UnitSystem,S::UnitSystem) = mass(U,S)/length(U,S)^4\ninertance(v::Real,U::UnitSystem,S::UnitSystem) = v/inertance(U,S)\n\nAcoustic mass or inertance (kg⋅m⁴, Pa⋅s²⋅m⁻³), unit conversion factor.\n\njulia> inertance(CGS,Metric) # kg⋅cm⁴⋅g⁻¹⋅m⁻⁴\n2⁵5⁵ = 100000.0 [kg⋅m⁻⁴]/[g⋅cm⁻⁴] Gauss -> Metric\n\njulia> inertance(CGS,English) # slug⋅cm⁴⋅g⁻¹⋅ft⁻⁴\nft⁴lb⁻¹2⁵5⁵ = 1902.804238360888 [lbm⋅ft⁻⁴]/[g⋅cm⁻⁴] Gauss -> English\n\njulia> inertance(English,Metric) # kg⋅ft⁴⋅lb⁻¹⋅m⁻⁴\nft⁻⁴lb = 52.55401369409494 [kg⋅m⁻⁴]/[lbm⋅ft⁻⁴] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Electromagnetic-Units-1","page":"Unit Conversions","title":"Electromagnetic Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"The following unit conversions have been verified for CGS UnitSystem variants: reference information.","category":"page"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"charge(::UnitSystem,::UnitSystem)\nchargedensity\nlinearchargedensity\nexposure\nmobility\ncurrent\ncurrentdensity\nresistance\nconductance(::UnitSystem,::UnitSystem)\nresistivity\nconductivity\ncapacitance\ninductance\nreluctance\npermeance\npermittivity(::UnitSystem,::UnitSystem)\nMeasureSystems.permeability(::UnitSystem,::UnitSystem)\nsusceptibility\nspecificsusceptibility\ndemagnetizingfactor\nvectorpotential\nelectricpotential\nmagneticpotential\nelectricfield\nmagneticfield\nelectricflux\nmagneticflux(::UnitSystem,::UnitSystem)\nelectricfluxdensity\nmagneticfluxdensity\nelectricdipolemoment\nmagneticdipolemoment\nelectricpolarizability\nmagneticpolarizability\nmagneticmoment\nspecificmagnetization\npolestrength","category":"page"},{"location":"convert.html#MeasureSystems.charge-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.charge","text":"charge : [Q], [Q], [Q], [M¹ᐟ²L¹ᐟ²T⁻¹], [M¹ᐟ²L³ᐟ²T⁻²]\ncharge(U::UnitSystem,S::UnitSystem) = sqrt(action(U,S)*current(U,S)/electricpotential(U,S))\ncharge(v::Real,U::UnitSystem,S::UnitSystem) = v/charge(U,S)\n\nElectric charge quantization (C, A⋅s), unit conversion factor.\n\njulia> charge(EMU,Metric) # C⋅abC⁻¹\n2⋅5 = 10.0 [C]/[g¹ᐟ²cm¹ᐟ²s⁻¹] EMU -> Metric\n\njulia> charge(EMU,ESU) # stC⋅abC⁻¹\n𝘤⋅2²5² = 2.99792458e10 [g¹ᐟ²cm³ᐟ²s⁻²]/[g¹ᐟ²cm¹ᐟ²s⁻¹] EMU -> ESU\n\njulia> charge(ESU,Metric) # C⋅stC⁻¹\n𝘤⁻¹2⁻¹5⁻¹ = 3.3356409519815207e-10 [C]/[g¹ᐟ²cm³ᐟ²s⁻²] ESU -> Metric\n\njulia> charge(Metric,SI2019) # C⋅C⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\njulia> charge(Hartree,SI2019) # C⋅𝘦⁻¹\n𝘦 = 1.602176634e-19 [C]/[𝘦] Hartree -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.chargedensity","page":"Unit Conversions","title":"MeasureSystems.chargedensity","text":"chargedensity : [L⁻³Q], [L⁻³Q], [L⁻³Q], [M¹ᐟ²L⁻⁵ᐟ²T⁻¹], [M¹ᐟ²L⁻³ᐟ²T⁻²]\nchargedensity(U::UnitSystem,S::UnitSystem) = charge(U,S)/volume(U,S)\nchargedensity(v::Real,U::UnitSystem,S::UnitSystem) = v/chargedensity(U,S)\n\nVolume chargedensity or charge per volume (C⋅m⁻³), unit conversion factor.\n\njulia> chargedensity(EMU,Metric) # C⋅cm³⋅abC⁻¹⋅m⁻³\n2⁷5⁷ = 1.0e7 [m⁻³C]/[g¹ᐟ²cm⁻⁵ᐟ²s⁻¹] EMU -> Metric\n\njulia> chargedensity(ESU,Metric) # C⋅cm³⋅statC⁻¹⋅m⁼³\n𝘤⁻¹2⁵5⁵ = 0.00033356409519815205 [m⁻³C]/[g¹ᐟ²cm⁻³ᐟ²s⁻²] ESU -> Metric\n\njulia> chargedensity(Metric,SI2019) # C⋅C⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.linearchargedensity","page":"Unit Conversions","title":"MeasureSystems.linearchargedensity","text":"linearchargedensity : [L⁻¹Q], [L⁻¹Q], [L⁻¹Q], [M¹ᐟ²L⁻¹ᐟ²T⁻¹], [M¹ᐟ²L¹ᐟ²T⁻²]\nlinearchargedensity(U::UnitSystem,S::UnitSystem) = charge(U,S)/length(U,S)\nlinearchargedensity(v::Real,U::UnitSystem,S::UnitSystem) = v/linearchargedensity(U,S)\n\nAmount of linearchargedensity or charge per length (C⋅m⁻¹), unit conversion factor.\n\njulia> linearchargedensity(EMU,Metric) # C⋅cm⋅abC⁻¹⋅m⁻¹\n2³5³ = 1000.0 [m⁻¹C]/[g¹ᐟ²cm⁻¹ᐟ²s⁻¹] EMU -> Metric\n\njulia> linearchargedensity(ESU,Metric) # C⋅cm⋅statC⁻¹⋅m⁼¹\n𝘤⁻¹2⋅5 = 3.3356409519815205e-8 [m⁻¹C]/[g¹ᐟ²cm¹ᐟ²s⁻²] ESU -> Metric\n\njulia> linearchargedensity(Metric,SI2019) # C⋅C⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.exposure","page":"Unit Conversions","title":"MeasureSystems.exposure","text":"exposure : [M⁻¹Q], [F⁻¹LT⁻²Q], [M⁻¹Q], [M⁻¹ᐟ²L¹ᐟ²T⁻¹], [M⁻¹ᐟ²L³ᐟ²T⁻²]\nexposure(U::UnitSystem,S::UnitSystem) = charge(U,S)/mass(U,S)\nexposure(v::Real,U::UnitSystem,S::UnitSystem) = v/exposure(U,S)\n\nIonizing radiation exposure or charge per mass (C⋅kg⁻¹), unit conversion factor.\n\njulia> exposure(EMU,Metric) # C⋅g⋅abC⁻¹⋅kg\n2⁴5⁴ = 10000.0 [kg⁻¹C]/[g⁻¹ᐟ²cm¹ᐟ²s⁻¹] EMU -> Metric\n\njulia> exposure(EMU,ESU) # statC⋅abC⁻¹\n𝘤⋅2²5² = 2.99792458e10 [g¹ᐟ²cm³ᐟ²s⁻²]/[g¹ᐟ²cm¹ᐟ²s⁻¹] EMU -> ESU\n\njulia> expsure(ESU,Metric) # C⋅g⋅statC⁻¹⋅kg\n𝘤⁻¹2²5² = 3.3356409519815204e-7 [kg⁻¹C]/[g⁻¹ᐟ²cm³ᐟ²s⁻²] ESU -> Metric\n\njulia> exposure(Metric,SI2019) # C⋅C⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.mobility","page":"Unit Conversions","title":"MeasureSystems.mobility","text":"mobility : [FL³T⁻¹Q⁻¹], [FL³T⁻¹Q⁻¹], [ML⁴T⁻³Q⁻¹], [M¹ᐟ²L⁷ᐟ²T⁻²], [M¹ᐟ²L⁵ᐟ²T⁻¹]\nmobility(U::UnitSystem,S::UnitSystem) = length(U,S)*speed(U,S)/electricpotential(U,S)\nmobility(v::Real,U::UnitSystem,S::UnitSystem) = v/mobility(U,S)\n\nElectron mobility in solid state physics (m²⋅V⁻¹⋅s⁻¹, A⋅s⋅kg⁻¹), unit conversion factor.\n\njulia> mobility(EMU,Metric) # C⋅g⋅abC⁻¹⋅kg\n2⁻¹²5⁻¹² = 1.0e-12 [kg⋅m⁴s⁻²C⁻¹]/[g¹ᐟ²cm⁷ᐟ²s⁻¹] EMU -> Metric\n\njulia> mobility(EMU,ESU) # statC⋅abC⁻¹\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [g⁻¹ᐟ²cm⁻³ᐟ²s²]/[g⁻¹ᐟ²cm⁻¹ᐟ²s] EMU -> ESU\n\njulia> mobility(ESU,Metric) # C⋅g⋅statC⁻¹⋅kg\n𝘤⋅2⁻¹⁰5⁻¹⁰ = 0.029979245800000002 [kg⋅m⁴s⁻²C⁻¹]/[g¹ᐟ²cm⁵ᐟ²] ESU -> Metric\n\njulia> mobility(Metric,SI2019) # C⋅C⁻¹\n𝘩¹ᐟ²𝘤⁻¹ᐟ²𝘦⁻¹α¹ᐟ²τ⁻¹ᐟ²2⁷ᐟ²5⁷ᐟ² = 1.000000000273 ± 7.7e-11 [C⁻¹]/[C⁻¹] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.current","page":"Unit Conversions","title":"MeasureSystems.current","text":"current : [T⁻¹Q], [T⁻¹Q], [T⁻¹Q], [M¹ᐟ²L¹ᐟ²T⁻²], [M¹ᐟ²L³ᐟ²T⁻³]\ncurrent(U::UnitSystem,S::UnitSystem) = charge(U,S)/time(U,S)\ncurrent(v::Real,U::UnitSystem,S::UnitSystem) = v/current(U,S)\n\nFlow of electric charge per time or current (A, C⋅s⁻¹), unit conversion factor.\n\njulia> current(EMU,Metric) # A⋅Bi⁻¹\n2⋅5 = 10.0 [C]/[g¹ᐟ²cm¹ᐟ²s⁻¹] EMU -> Metric\n\njulia> current(EMU,ESU) # statA⋅Bi⁻¹\n𝘤⋅2²5² = 2.99792458e10 [g¹ᐟ²cm³ᐟ²s⁻²]/[g¹ᐟ²cm¹ᐟ²s⁻¹] EMU -> ESU\n\njulia> current(ESU,Metric) # A⋅statA⁻¹\n𝘤⁻¹2⁻¹5⁻¹ = 3.3356409519815207e-10 [C]/[g¹ᐟ²cm³ᐟ²s⁻²] ESU -> Metric\n\njulia> current(Metric,SI2019) # A⋅A⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.currentdensity","page":"Unit Conversions","title":"MeasureSystems.currentdensity","text":"currentdensity : [L⁻²T⁻¹Q], [L⁻²T⁻¹Q], [L⁻²T⁻¹Q], [M¹ᐟ²L⁻³ᐟ²T⁻²], [M¹ᐟ²L⁻¹ᐟ²T⁻³]\ncurrentdensity(U::UnitSystem,S::UnitSystem) = current(U,S)/area(U,S)\ncurrentdensity(v::Real,U::UnitSystem,S::UnitSystem) = v/currentdensity(U,S)\n\nCross-section currentdensity or current per area (A⋅m⁻²), unit conversion factor.\n\njulia> currentdensity(EMU,Metric) # A⋅cm²⋅Bi⁻¹⋅m⁻²\n2⁵5⁵ = 100000.0 [m⁻²C]/[g¹ᐟ²cm⁻³ᐟ²s⁻¹] EMU -> Metric\n\njulia> currentdensity(ESU,Metric) # A⋅cm²⋅statA⁻¹⋅m⁼²\n𝘤⁻¹2³5³ = 3.3356409519815205e-6 [m⁻²C]/[g¹ᐟ²cm⁻¹ᐟ²s⁻²] ESU -> Metric\n\njulia> currentdensity(Metric,SI2019) # A⋅A⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.resistance","page":"Unit Conversions","title":"MeasureSystems.resistance","text":"resistance : [FLTQ⁻²], [FLTQ⁻²], [ML²T⁻¹Q⁻²], [LT], [L⁻¹T³]\nresistance(U::UnitSystem,S::UnitSystem) = electricpotential(U,S)/current(U,S)\nresistance(v::Real,U::UnitSystem,S::UnitSystem) = v/resistance(U,S)\n\nElectrical resistance or electricpotential per current (Ω, S⁻¹, V⋅A⁻¹), unit conversion factor.\n\njulia> resistance(EMU,Metric) # Ω⋅abΩ⁻¹\n2⁻⁹5⁻⁹ = 1.0e-9 [F⁻¹]/[cm] EMU -> Metric\n\njulia> resistance(ESU,Metric) # Ω⋅statΩ⁻¹\n𝘤²2⁻⁵5⁻⁵ = 8.987551787368175e11 [F⁻¹]/[cm⁻¹s²] ESU -> Metric\n\njulia> resistance(Metric,SI2019) # Ω⋅Ω⁻¹\n𝘩⋅𝘤⁻¹𝘦⁻²α⋅τ⁻¹2⁷5⁷ = 1.00000000055 ± 1.5e-10 [C⁻²]/[C⁻²] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.conductance-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.conductance","text":"conductance : [F⁻¹L⁻¹T⁻¹Q²], [F⁻¹L⁻¹T⁻¹Q²], [M⁻¹L⁻²TQ²], [L⁻¹T⁻¹], [LT⁻³]\nconductance(U::UnitSystem,S::UnitSystem) = current(U,S)/electricpotential(U,S)\nconductance(v::Real,U::UnitSystem,S::UnitSystem) = v/conductance(U,S)\n\nElectrical conductance or current per electricpotential (S, Ω⁻¹, A⋅V⁻¹), unit conversion factor.\n\njulia> conductance(EMU,Metric) # S⋅abS⁻¹\n2⁹5⁹ = 1.0e9 [F]/[cm⁻¹] EMU -> Metric\n\njulia> conductance(ESU,Metric) # S⋅statS⁻¹\n𝘤⁻²2⁵5⁵ = 1.1126500560536185e-12 [F]/[gal] ESU -> Metric\n\njulia> conductance(Metric,SI2019) # S⋅S⁻¹\n𝘩⁻¹𝘤⋅𝘦²α⁻¹τ⋅2⁻⁷5⁻⁷ = 0.99999999945 ± 1.5e-10 [C²]/[C²] Metric -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.resistivity","page":"Unit Conversions","title":"MeasureSystems.resistivity","text":"resistivity : [FL²TQ⁻²], [FL²TQ⁻²], [ML³T⁻¹Q⁻²], [L²T], [T³]\nresistivity(U::UnitSystem,S::UnitSystem) = resistance(U,S)*length(U,S)\nresistivity(v::Real,U::UnitSystem,S::UnitSystem) = v/resistivity(U,S)\n\nElectrical resistivity or resistance by length (Ω⋅m), unit conversion factor.\n\njulia> resistance(EMU,Metric) # Ω⋅m⋅abΩ⁻¹⋅cm⁻¹\n2⁻⁹5⁻⁹ = 1.0e-9 [F⁻¹]/[cm] EMU -> Metric\n\njulia> resistance(ESU,Metric) # Ω⋅m⋅statΩ⁻¹⋅cm⁻¹\n𝘤²2⁻⁵5⁻⁵ = 8.987551787368175e11 [F⁻¹]/[cm⁻¹s²] ESU -> Metric\n\njulia> resistance(Metric,SI2019) # Ω⋅Ω⁻¹\n𝘩⋅𝘤⁻¹𝘦⁻²α⋅τ⁻¹2⁷5⁷ = 1.00000000055 ± 1.5e-10 [C⁻²]/[C⁻²] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.conductivity","page":"Unit Conversions","title":"MeasureSystems.conductivity","text":"conductivity : [F⁻¹L⁻²T⁻¹Q²], [F⁻¹L⁻²T⁻¹Q²], [M⁻¹L⁻³TQ²], [L⁻²T⁻¹], [T⁻³]\nconductivity(U::UnitSystem,S::UnitSystem) = conductance(U,S)/length(U,S)\nconductivity(v::Real,U::UnitSystem,S::UnitSystem) = v/conductivity(U,S)\n\nReciprocal resistivity or electrical conductivity (S⋅m⁻¹), unit conversion factor.\n\njulia> conductivity(EMU,Metric) # S⋅cm⋅abS⁻¹⋅m⁻¹\n2¹¹5¹¹ = 1.0e11 [F⋅m⁻¹]/[cm⁻²] EMU -> Metric\n\njulia> conductivity(ESU,Metric) # S⋅cm⋅statS⁻¹⋅m⁼¹\n𝘤⁻²2⁷5⁷ = 1.1126500560536186e-10 [F⋅m⁻¹]/[gal⋅cm⁻¹] ESU -> Metric\n\njulia> conductivity(Metric,SI2019) # S⋅S⁻¹\n𝘩⁻¹𝘤⋅𝘦²α⁻¹τ⋅2⁻⁷5⁻⁷ = 0.99999999945 ± 1.5e-10 [C²]/[C²] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.capacitance","page":"Unit Conversions","title":"MeasureSystems.capacitance","text":"capacitance : [F⁻¹L⁻¹Q²], [F⁻¹L⁻¹Q²], [M⁻¹L⁻²T²Q²], [L⁻¹], [LT⁻²]\ncapacitance(U::UnitSystem,S::UnitSystem) = charge(U,S)/electricpotential(U,S)\ncapacitance(v::Real,U::UnitSystem,S::UnitSystem) = v/capacitance(U,S)\n\nElectrical capactiance or charge per electricpotential (F, C⋅V⁻¹), unit conversion factor.\n\njulia> capacitance(EMU,Metric) # F⋅abF⁻¹\n2⁹5⁹ = 1.0e9 [F]/[cm⁻¹] EMU -> Metric\n\njulia> capacitance(ESU,Metric) # F⋅cm⁻¹\n𝘤⁻²2⁵5⁵ = 1.1126500560536185e-12 [F]/[gal] ESU -> Metric\n\njulia> capactiance(Metric,SI2019) # F⋅F⁻¹\n𝘩⁻¹𝘤⋅𝘦²α⁻¹τ⋅2⁻⁷5⁻⁷ = 0.99999999945 ± 1.5e-10 [C²]/[C²] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.inductance","page":"Unit Conversions","title":"MeasureSystems.inductance","text":"inductance : [FLT²Q⁻²], [FLT²Q⁻²], [ML²Q⁻²], [LT²], [L⁻¹T⁴]\ninductance(U::UnitSystem,S::UnitSystem) = magneticflux(U,S)/current(U,S)\ninductance(v::Real,U::UnitSystem,S::UnitSystem) = v/inductance(U,S)\n\nElectro-magneticflux per current or inductance (H, Ω⋅s, Wb⋅A⁻¹), unit conversion factor.\n\njulia> inductance(EMU,Metric) # H⋅abH⁻¹\n2⁻⁹5⁻⁹ = 1.0e-9 [F⁻¹]/[cm] EMU -> Metric\n\njulia> inductance(ESU,Metric) # H⋅statH⁻¹\n𝘤²2⁻⁵5⁻⁵ = 8.987551787368175e11 [F⁻¹]/[cm⁻¹s²] ESU -> Metric\n\njulia> inductance(Metric,SI2019) # H⋅H⁻¹\n𝘩⋅𝘤⁻¹𝘦⁻²α⋅τ⁻¹2⁷5⁷ = 1.00000000055 ± 1.5e-10 [C⁻²]/[C⁻²] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.reluctance","page":"Unit Conversions","title":"MeasureSystems.reluctance","text":"reluctance : [F⁻¹L⁻¹T⁻²Q²A²ΛC⁻²], [F⁻¹L⁻¹T⁻²Q²], [M⁻¹L⁻²Q²], [L⁻¹T⁻²], [LT⁻⁴]\nreluctance(U::UnitSystem,S::UnitSystem) = rationalization(U,S)*lorentz(U,S)^2/inductance(U,S)\nreluctance(v::Real,U::UnitSystem,S::UnitSystem) = v/reluctance(U,S)\n\nMagnetic reluctance or magnetic resistance (H⁻¹, Gb⋅Mx⁻¹), unit conversion factor.\n\njulia> reluctance(EMU,Metric) # abH⋅H⁻¹\nτ⁻¹2⁸5⁹ = 7.957747154594767e7 [F]/[cm⁻¹] EMU -> Metric\n\njulia> reluctance(ESU,Metric) # statH⋅H⁻¹\n𝘤⁻²τ⁻¹2⁴5⁵ = 8.854187817620392e-14 [F]/[gal] ESU -> Metric\n\njulia> reluctance(Metric,SI2019) # H⋅H⁻¹\n𝘩⁻¹𝘤⋅𝘦²α⁻¹τ⋅2⁻⁷5⁻⁷ = 0.99999999945 ± 1.5e-10 [C²]/[C²] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.permeance","page":"Unit Conversions","title":"MeasureSystems.permeance","text":"permeance : [FLT²Q⁻²A⁻²Λ⁻¹C²], [FLT²Q⁻²], [ML²Q⁻²], [LT²], [L⁻¹T⁴]\npermeance(U::UnitSystem,S::UnitSystem) = 1/reluctance(U,S)\npermeance(v::Real,U::UnitSystem,S::UnitSystem) = v/permeance(U,S)\n\nMagnetic permeance or magnetic conductance (H, Mx⋅Gb⁻¹), unit conversion factor.\n\njulia> permeance(EMU,Metric) # abH⋅H⁻¹\nτ⋅2⁻⁸5⁻⁹ = 1.2566370614359173e-8 [F⁻¹]/[cm] EMU -> Metric\n\njulia> permeance(ESU,Metric) # statH⋅H⁻¹\n𝘤²τ⋅2⁻⁴5⁻⁵ = 1.129409066758147e13 [F⁻¹]/[cm⁻¹s²] ESU -> Metric\n\njulia> permeance(Metric,SI2019) # H⋅H⁻¹\n𝘩⋅𝘤⁻¹𝘦⁻²α⋅τ⁻¹2⁷5⁷ = 1.00000000055 ± 1.5e-10 [C⁻²]/[C⁻²] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.permittivity-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.permittivity","text":"permittivity : [F⁻¹L⁻²Q²A²Λ], [F⁻¹L⁻²Q²], [M⁻¹L⁻³T²Q²], [L⁻²], [T⁻²]\npermittivity(U::UnitSystem,S::UnitSystem) = capacitance(U,S)*rationalization(U,S)/length(U,S)\npermittivity(v::Real,U::UnitSystem,S::UnitSystem) = v/permittivity(U,S)\n\nAbsolute permittivity or capacitance per length (F⋅m⁻¹), unit conversion factor.\n\njulia> permittivity(EMU,Metric) # F⋅cm⋅abF⁻¹⋅m⁻¹\nτ⁻¹2¹⁰5¹¹ = 7.957747154594768e9 [F⋅m⁻¹]/[cm⁻²] EMU -> Metric\n\njulia> permittivity(ESU,Metric) # F⋅m⁼¹\n𝘤⁻²τ⁻¹2⁶5⁷ = 8.85418781762039e-12 [F⋅m⁻¹]/[gal⋅cm⁻¹] ESU -> Metric\n\njulia> permittivity(Metric,SI2019) # F⋅F⁻¹\n𝘩⁻¹𝘤⋅𝘦²α⁻¹τ⋅2⁻⁷5⁻⁷ = 0.99999999945 ± 1.5e-10 [C²]/[C²] Metric -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.permeability-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.permeability","text":"permeability : [FT²Q⁻²A⁻²Λ⁻¹C²], [FT²Q⁻²], [MLQ⁻²], [T²], [L⁻²T⁴]\npermeability(U::UnitSystem,S::UnitSystem) = permeability(S)/permeability(U)\npermeability(v::Real,U::UnitSystem,S::UnitSystem) = v/permeability(U,S)\n\nMagnetic permeability or inductance per length (H⋅m⁻¹), unit conversion factor.\n\njulia> permeability(EMU,Metric) # H⋅cm⋅abH⁻¹⋅m⁻¹\nτ⋅2⁻⁶5⁻⁷ = 1.2566370614359173e-6 [kg⋅m⋅s⁻²C⁻²]/[𝟙] EMU -> Metric\n\njulia> permeability(ESU,Metric) # H⋅cm⋅statH⁻¹⋅m⁼¹\n𝘤²τ⋅2⁻²5⁻³ = 1.129409066758147e15 [kg⋅m⋅s⁻²C⁻²]/[cm⁻²s²] ESU -> Metric\n\njulia> permeability(Metric,SI2019) # H⋅H⁻¹\n𝘩⋅𝘤⁻¹𝘦⁻²α⋅τ⁻¹2⁷5⁷ = 1.00000000055 ± 1.5e-10 [C⁻²]/[C⁻²] Metric -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.susceptibility","page":"Unit Conversions","title":"MeasureSystems.susceptibility","text":"susceptibility : [A⁻²Λ⁻¹], [𝟙], [𝟙], [𝟙], [𝟙]\nsusceptibility(U::UnitSystem,S::UnitSystem) = 1/rationalization(U,S)\nsusceptibility(v::Real,U::UnitSystem,S::UnitSystem) = v/susceptibility(U,S)\n\nMagnetic/electric volume susceptibility (dimensionless), unit conversion factor.\n\njulia> susceptibility(EMU,Metric)\nτ⋅2 = 12.566370614359172 [𝟙]/[𝟙] EMU -> Metric\n\njulia> susceptibility(ESU,Metric)\nτ⋅2 = 12.566370614359172 [𝟙]/[𝟙] ESU -> Metric\n\njulia> susceptibility(Metric,SI2019)\n𝟏 = 1.0 [𝟙]/[𝟙] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificsusceptibility","page":"Unit Conversions","title":"MeasureSystems.specificsusceptibility","text":"specificsusceptibility : [FM⁻²L²T²A⁻²Λ⁻¹], [F⁻¹L⁴T⁻²], [M⁻¹L³], [M⁻¹L³], [M⁻¹L³]\nspecificsusceptibility(U::UnitSystem,S::UnitSystem) = susceptibility(U,S)/density(U,S)\nspecificsusceptibility(v::Real,U::UnitSystem,S::UnitSystem) = v/specificsusceptibility(U,S)\n\nMagnetic/electric mass specific susceptibility (m³⋅kg⁻¹), unit conversion factor.\n\njulia> specificsusceptibility(EMU,Metric) # m³⋅g⋅kg⁻¹⋅cm⁻³\nτ⋅2⁻²5⁻³ = 0.012566370614359173 [kg⁻¹m³s⁻²]/[g⁻¹cm³s⁻²] EMU -> Metric\n\njulia> specificsusceptibility(ESU,Metric) # m³⋅g⋅kg⁻¹⋅cm⁻³\nτ⋅2⁻²5⁻³ = 0.012566370614359173 [kg⁻¹m³s⁻²]/[g⁻¹cm³s⁻²] ESU -> Metric\n\njulia> specificsusceptibility(Metric,SI2019) # m³⋅kg⋅kg⁻¹⋅m⁻³\n𝟏 = 1.0 [𝟙]/[𝟙] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.demagnetizingfactor","page":"Unit Conversions","title":"MeasureSystems.demagnetizingfactor","text":"demagnetizingfactor : [A²Λ], [𝟙], [𝟙], [𝟙], [𝟙]\ndemagnetizingfactor(U::UnitSystem,S::UnitSystem) = 1/susceptibility(U,S)\ndemagnetizingfactor(v::Real,U::UnitSystem,S::UnitSystem) = v/demagnetizingfactor(U,S)\n\nQuantitiy of demagnetizingfactor (dimensionless), unit conversion factor.\n\njulia> demagnetizingfactor(EMU,Metric)\nτ⁻¹2⁻¹ = 0.07957747154594767 [𝟙]/[𝟙] EMU -> Metric\n\njulia> demagnetizingfactor(ESU,Metric)\nτ⁻¹2⁻¹ = 0.07957747154594767 [𝟙]/[𝟙] ESU -> Metric\n\njulia> demagnetizingfactor(Metric,SI2019)\n𝟏 = 1.0 [𝟙]/[𝟙] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.vectorpotential","page":"Unit Conversions","title":"MeasureSystems.vectorpotential","text":"vectorpotential : [FTQ⁻¹C], [FTQ⁻¹], [MLT⁻¹Q⁻¹], [M¹ᐟ²L¹ᐟ²], [M¹ᐟ²L⁻¹ᐟ²T]\nvectorpotential(U::UnitSystem,S::UnitSystem) = magneticflux(U,S)/length(U,S)\nvectorpotential(v::Real,U::UnitSystem,S::UnitSystem) = v/vectorpotential(U,S)\n\nMagnetic vectorpotential or electromagnetic rigidity (Wb⋅m⁻¹ or T⋅m), unit conversion factor.\n\njulia> vectorpotential(EMU,Metric) # Wb⋅cm⋅Mx⁻¹⋅m⁻¹\n2⁻⁶5⁻⁶ = 1.0e-6 [V⋅m⁻¹]/[g¹ᐟ²cm¹ᐟ²s⁻¹] EMU -> Metric\n\njulia> vectorpotential(ESU,Metric) # Wb⋅cm⋅statWb⁻¹⋅m⁻¹\n𝘤⋅2⁻⁴5⁻⁴ = 29979.2458 [V⋅m⁻¹]/[g¹ᐟ²cm⁻¹ᐟ²] ESU -> Metric\n\njulia> vectorpotential(Metric,SI2019) # Wb⋅Wb⁻¹\n𝘩¹ᐟ²𝘤⁻¹ᐟ²𝘦⁻¹α¹ᐟ²τ⁻¹ᐟ²2⁷ᐟ²5⁷ᐟ² = 1.000000000273 ± 7.7e-11 [C⁻¹]/[C⁻¹] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.electricpotential","page":"Unit Conversions","title":"MeasureSystems.electricpotential","text":"electricpotential : [FLQ⁻¹], [FLQ⁻¹], [ML²T⁻²Q⁻¹], [M¹ᐟ²L³ᐟ²T⁻¹], [M¹ᐟ²L¹ᐟ²]\nelectricpotential(U::UnitSystem,S::UnitSystem) = energy(U,S)/charge(U,S)\nelectricpotential(v::Real,U::UnitSystem,S::UnitSystem) = v/electricpotential(U,S)\n\nVoltage or electricpotential or energy per charge (V, J⋅C⁻¹), unit conversion factor.\n\njulia> electricpotential(EMU,Metric) # V⋅abV⁻¹\n2⁻⁸5⁻⁸ = 1.0e-8 [V]/[g¹ᐟ²cm³ᐟ²s⁻¹] EMU -> Metric\n\njulia> electricpotential(EMU,ESU) # statV⋅abV⁻¹\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [g⁻¹ᐟ²cm⁻³ᐟ²s²]/[g⁻¹ᐟ²cm⁻¹ᐟ²s] EMU -> ESU\n\njulia> electricpotential(ESU,Metric) # V⋅statV⁻¹\n𝘤⋅2⁻⁶5⁻⁶ = 299.792458 [V]/[g¹ᐟ²cm¹ᐟ²] ESU -> Metric\n\njulia> electricpotential(Metric,SI2019) # V⋅V⁻¹\n𝘩¹ᐟ²𝘤⁻¹ᐟ²𝘦⁻¹α¹ᐟ²τ⁻¹ᐟ²2⁷ᐟ²5⁷ᐟ² = 1.000000000273 ± 7.7e-11 [C⁻¹]/[C⁻¹] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticpotential","page":"Unit Conversions","title":"MeasureSystems.magneticpotential","text":"magneticpotential : [T⁻¹QA²ΛC⁻¹], [T⁻¹Q], [T⁻¹Q], [M¹ᐟ²L¹ᐟ²T⁻²], [M¹ᐟ²L³ᐟ²T⁻³]\nmagneticpotential(U::UnitSystem,S::UnitSystem) = magneticflux(U,S)*reluctance(U,S)\nmagneticpotential(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticpotential(U,S)\n\nMagnetomotive force or magneticpotential (A, Gb), unit conversion factor.\n\njulia> magneticpotential(EMU,Metric) # A⋅Gb⁻¹\nτ⁻¹5 = 0.7957747154594768 [C]/[g¹ᐟ²cm¹ᐟ²s⁻¹] EMU -> Metric\n\njulia> magneticpotential(Metric,SI2019) # A⋅A⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.electricfield","page":"Unit Conversions","title":"MeasureSystems.electricfield","text":"electricfield : [FQ⁻¹], [FQ⁻¹], [MLT⁻²Q⁻¹], [M¹ᐟ²L¹ᐟ²T⁻¹], [M¹ᐟ²L⁻¹ᐟ²]\nelectricfield(U::UnitSystem,S::UnitSystem) = electricpotential(U,S)/length(U,S)\nelectricfield(v::Real,U::UnitSystem,S::UnitSystem) = v/electricfield(U,S)\n\nThe electricpotential per length or electricfield (V⋅m⁻¹), unit conversion factor.\n\njulia> electricfield(EMU,Metric) # V⋅cm⋅abV⁻¹⋅m⁻¹\n2⁻⁶5⁻⁶ = 1.0e-6 [V⋅m⁻¹]/[g¹ᐟ²cm¹ᐟ²s⁻¹] EMU -> Metric\n\njulia> electricfield(EMU,ESU) # statV⋅abV⁻¹\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [g⁻¹ᐟ²cm⁻³ᐟ²s²]/[g⁻¹ᐟ²cm⁻¹ᐟ²s] EMU -> ESU\n\njulia> electricfield(ESU,Metric) # V⋅cm⋅statV⁻¹⋅m⁻¹\n𝘤⋅2⁻⁴5⁻⁴ = 29979.2458 [V⋅m⁻¹]/[g¹ᐟ²cm⁻¹ᐟ²] ESU -> Metric\n\njulia> electricfield(Metric,SI2019) # V⋅V⁻¹\n𝘩¹ᐟ²𝘤⁻¹ᐟ²𝘦⁻¹α¹ᐟ²τ⁻¹ᐟ²2⁷ᐟ²5⁷ᐟ² = 1.000000000273 ± 7.7e-11 [C⁻¹]/[C⁻¹] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticfield","page":"Unit Conversions","title":"MeasureSystems.magneticfield","text":"magneticfield : [L⁻¹T⁻¹QA²ΛC⁻¹], [L⁻¹T⁻¹Q], [L⁻¹T⁻¹Q], [M¹ᐟ²L⁻¹ᐟ²T⁻²], [M¹ᐟ²L¹ᐟ²T⁻³]\nmagneticfield(U::UnitSystem,S::UnitSystem) = current(U,S)*rationalization(U,S)*lorentz(U,S)/length(U,S)\nmagneticfield(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticfield(U,S)\n\nMagnetization or magneticfield or current per length (A⋅m⁻¹), unit conversion factor.\n\njulia> magneticfield(EMU,Metric) # A⋅m⁻¹⋅Oe⁻¹\nτ⁻¹2²5³ = 79.57747154594767 [m⁻¹C]/[g¹ᐟ²cm⁻¹ᐟ²s⁻¹] EMU -> Metric\n\njulia> magneticfield(ESU,Metric) # A⋅cm⋅m⁻¹⋅statA⁻¹\n𝘤⁻¹τ⁻¹5 = 2.6544187294380726e-9 [m⁻¹C]/[g¹ᐟ²cm¹ᐟ²s⁻²] ESU -> Metric\n\njulia> magneticfield(Metric,SI2019) # A⋅A⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.electricflux","page":"Unit Conversions","title":"MeasureSystems.electricflux","text":"electricflux : [FL²Q⁻¹], [FL²Q⁻¹], [ML³T⁻²Q⁻¹], [M¹ᐟ²L⁵ᐟ²T⁻¹], [M¹ᐟ²L³ᐟ²]\nelectricflux(U::UnitSystem,S::UnitSystem) = electricpotential(U,S)*length(U,S)\nelectricflux(v::Real,U::UnitSystem,S::UnitSystem) = v/electricflux(U,S)\n\nAmount of electricflux or electricpotential by length (V⋅m), unit conversion factor.\n\njulia> electricflux(EMU,Metric) # V⋅m⋅abV⁻¹⋅cm⁻¹\n2⁻¹⁰5⁻¹⁰ = 1.0e-10 [V⋅m]/[g¹ᐟ²cm⁵ᐟ²s⁻¹] EMU -> Metric\n\njulia> electricflux(EMU,ESU) # statV⋅abV⁻¹\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [g⁻¹ᐟ²cm⁻³ᐟ²s²]/[g⁻¹ᐟ²cm⁻¹ᐟ²s] EMU -> ESU\n\njulia> electricflux(ESU,Metric) # V⋅m⋅statV⁻¹⋅cm⁻¹\n𝘤⋅2⁻⁸5⁻⁸ = 2.9979245800000003 [V⋅m]/[g¹ᐟ²cm³ᐟ²] ESU -> Metric\n\njulia> electricflux(Metric,SI2019) # V⋅V⁻¹\n𝘩¹ᐟ²𝘤⁻¹ᐟ²𝘦⁻¹α¹ᐟ²τ⁻¹ᐟ²2⁷ᐟ²5⁷ᐟ² = 1.000000000273 ± 7.7e-11 [C⁻¹]/[C⁻¹] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticflux-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.magneticflux","text":"magneticflux : [FLTQ⁻¹C], [FLTQ⁻¹], [ML²T⁻¹Q⁻¹], [M¹ᐟ²L³ᐟ²], [M¹ᐟ²L¹ᐟ²T]\nmagneticflux(U::UnitSystem,S::UnitSystem) = energy(U,S)/lorentz(U,S)/current(U,S)\nmagneticflux(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticflux(U,S)\n\nSurface magneticflux or energy per current (Wb, J⋅A⁻¹, V⋅s), unit conversion factor.\n\njulia> magneticflux(EMU,Metric) # Wb⋅Mx⁻¹\n2⁻⁸5⁻⁸ = 1.0e-8 [V]/[g¹ᐟ²cm³ᐟ²s⁻¹] EMU -> Metric\n\njulia> magneticflux(ESU,Metric) # Wb⋅statWb⁻¹\n𝘤⋅2⁻⁶5⁻⁶ = 299.792458 [V]/[g¹ᐟ²cm¹ᐟ²] ESU -> Metric\n\njulia> magneticflux(Metric,SI2019) # Wb⋅Wb⁻¹\n𝘩¹ᐟ²𝘤⁻¹ᐟ²𝘦⁻¹α¹ᐟ²τ⁻¹ᐟ²2⁷ᐟ²5⁷ᐟ² = 1.000000000273 ± 7.7e-11 [C⁻¹]/[C⁻¹] Metric -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.electricfluxdensity","page":"Unit Conversions","title":"MeasureSystems.electricfluxdensity","text":"electricfluxdensity : [L⁻²QA²Λ], [L⁻²Q], [L⁻²Q], [M¹ᐟ²L⁻³ᐟ²T⁻¹], [M¹ᐟ²L⁻¹ᐟ²T⁻²]\nelectricfluxdensity(U::UnitSystem,S::UnitSystem) = charge(U,S)*rationalization(U,S)/area(U,S)\nelectricfluxdensity(v::Real,U::UnitSystem,S::UnitSystem) = v/electricfluxdensity(U,S)\n\nElectric field displacement or surface electricfluxdensity (C⋅m⁻²), unit conversion factor.\n\njulia> electricfluxdensity(EMU,Metric) # C⋅cm²⋅abC⁻¹⋅m⁻²\nτ⁻¹2⁴5⁵ = 7957.747154594767 [m⁻²C]/[g¹ᐟ²cm⁻³ᐟ²s⁻¹] EMU -> Metric\n\njulia> electricfluxdensity(ESU,Metric) # C⋅cm²⋅statC⁻¹⋅m⁼²\n𝘤⁻¹τ⁻¹2²5³ = 2.6544187294380724e-7 [m⁻²C]/[g¹ᐟ²cm⁻¹ᐟ²s⁻²] ESU -> Metric\n\njulia> electricfluxdensity(Metric,SI2019) # C⋅C⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticfluxdensity","page":"Unit Conversions","title":"MeasureSystems.magneticfluxdensity","text":"magneticfluxdensity : [FL⁻¹TQ⁻¹C], [FL⁻¹TQ⁻¹], [MT⁻¹Q⁻¹], [M¹ᐟ²L⁻¹ᐟ²], [M¹ᐟ²L⁻³ᐟ²T]\nmagneticfluxdensity(U::UnitSystem,S::UnitSystem) = magneticflux(U,S)/area(U,S)\nmagneticfluxdensity(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticfluxdensity(U,S)\n\nMagnetic induction or magneticmoment per volume (T or Wb⋅m⁻²), unit conversion factor.\n\njulia> magneticfluxdensity(EMU,Metric) # T⋅G⁻¹\n2⁻⁴5⁻⁴ = 0.0001 [kg⋅s⁻²C⁻¹]/[g¹ᐟ²cm⁻¹ᐟ²s⁻¹] EMU -> Metric\n\njulia> magneticfluxdensity(EMU,ESU) # statT⋅G⁻¹\n𝘤⁻¹2⁻²5⁻² = 3.33564095198152e-11 [g⁻¹ᐟ²cm⁻³ᐟ²s²]/[g⁻¹ᐟ²cm⁻¹ᐟ²s] EMU -> ESU\n\njulia> magneticfluxdensity(Metric,SI2019) # T⋅T⁻¹\n𝘩¹ᐟ²𝘤⁻¹ᐟ²𝘦⁻¹α¹ᐟ²τ⁻¹ᐟ²2⁷ᐟ²5⁷ᐟ² = 1.000000000273 ± 7.7e-11 [C⁻¹]/[C⁻¹] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.electricdipolemoment","page":"Unit Conversions","title":"MeasureSystems.electricdipolemoment","text":"electricdipolemoment : [LQ], [LQ], [LQ], [M¹ᐟ²L³ᐟ²T⁻¹], [M¹ᐟ²L⁵ᐟ²T⁻²]\nelectricdipolemoment(U::UnitSystem,S::UnitSystem) = charge(U,S)*length(U,S)\nelectricdipolemoment(v::Real,U::UnitSystem,S::UnitSystem) = v/electricdipolemoment(U,S)\n\nElectric dipole moment or electricdipolemoment (C⋅m), unit conversion factor.\n\njulia> electricdipolemoment(EMU,Metric) # C⋅m⋅abC⁻¹⋅cm⁻¹\n2⁻¹5⁻¹ = 0.1 [m⋅C]/[g¹ᐟ²cm³ᐟ²s⁻¹] EMU -> Metric\n\njulia> electricdipolemoment(ESU,Metric) # C⋅m⋅statC⁻¹⋅cm⁼¹\n𝘤⁻¹2⁻³5⁻³ = 3.3356409519815203e-12 [m⋅C]/[g¹ᐟ²cm⁵ᐟ²s⁻²] ESU -> Metric\n\njulia> electricdipolemoment(Metric,SI2019) # C⋅C⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticdipolemoment","page":"Unit Conversions","title":"MeasureSystems.magneticdipolemoment","text":"magneticdipolemoment : [FM⁻¹LTQA⁻¹C⁻¹], [L²T⁻¹Q], [L²T⁻¹Q], [M¹ᐟ²L⁵ᐟ²T⁻²], [M¹ᐟ²L⁷ᐟ²T⁻³]\nmagneticdipolemoment(U::UnitSystem,S::UnitSystem) = current(U,S)*lorentz(U,S)/area(U,S)/gravity(U,S)/angle(U,S)\nmagneticdipolemoment(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticdipolemoment(U,S)\n\nMagnetic dipole moment or magneticdipolemoment (J⋅T⁻¹, A⋅m²), unit conversion factor.\n\njulia> magneticdipolemoment(EMU,Metric) # J⋅G⋅T⁻¹⋅erg⁻¹\n2⁻³5⁻³ = 0.001 [m²s⁻²C]/[g¹ᐟ²cm⁵ᐟ²s⁻³] EMU -> Metric\n\njulia> magneticdipolemoment(ESU,Metric) # J⋅statT⋅T⁻¹⋅erg⁼¹\n𝘤⁻¹2⁻⁵5⁻⁵ = 3.3356409519815204e-14 [m²s⁻²C]/[g¹ᐟ²cm⁷ᐟ²s⁻⁴] ESU -> Metric\n\njulia> magneticdipolemoment(Metric,SI2019) # A⋅A⁻¹⋅\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.electricpolarizability","page":"Unit Conversions","title":"MeasureSystems.electricpolarizability","text":"electricpolarizability : [F⁻¹LQ²], [F⁻¹LQ²], [M⁻¹T²Q²], [L], [L³T⁻²]\nelectricpolarizability(U::UnitSystem,S::UnitSystem) = electricdipolemoment(U,S)/electricfield(U,S)\nelectricpolarizability(v::Real,U::UnitSystem,S::UnitSystem) = v/electricpolarizability(U,S)\n\nPolarizability or electricdipolemoment per electricfield (C⋅m²⋅V⁻¹), unit conversion factor.\n\njulia> electricpolarizability(EMU,Metric) # C⋅m²⋅abV⋅abC⁻¹⋅cm⁻²⋅V⁻¹\n2⁵5⁵ = 100000.0 [kg⁻¹s²C²]/[cm] EMU -> Metric\n\njulia> electricpolarizability(ESU,Metric) # C⋅m²⋅statV⋅statC⁻¹⋅cm⁼²⋅V⁻¹\n𝘤⁻²2⋅5 = 1.1126500560536184e-16 [kg⁻¹s²C²]/[cm³s⁻²] ESU -> Metric\n\njulia> electricpolarizability(Metric,Gauss) # D⋅cm²⋅V⁻¹⋅C⁻¹⋅m⁻²⋅abV⁻¹\n𝘤²2⁻¹5⁻¹ = 8.987551787368176e15 [cm³s⁻²]/[kg⁻¹s²C²] Metric -> Gauss\n\njulia> electricpolarizability(Metric,SI2019) # C⋅V⋅C⁻¹⋅V⁻¹\n𝘩⁻¹𝘤⋅𝘦²α⁻¹τ⋅2⁻⁷5⁻⁷ = 0.99999999945 ± 1.5e-10 [C²]/[C²] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticpolarizability","page":"Unit Conversions","title":"MeasureSystems.magneticpolarizability","text":"magneticpolarizability : [FM⁻¹L²T²A⁻²Λ⁻¹], [L³], [L³], [L³], [L³]\nmagneticpolarizability(U::UnitSystem,S::UnitSystem) = magneticdipolemoment(U,S)/magneticfield(U,S)\nmagneticpolarizability(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticpolarizability(U,S)\n\nPolarizability or magneticdipolemoment per magneticfield (m³), unit conversion factor.\n\njulia> electricpolarizability(EMU,Metric) # m³⋅cm⁻³\n2⁵5⁵ = 100000.0 [kg⁻¹s²C²]/[cm] EMU -> Metric\n\njulia> electricpolarizability(ESU,Metric) # m³⋅cm⁼³\n𝘤⁻²2⋅5 = 1.1126500560536184e-16 [kg⁻¹s²C²]/[cm³s⁻²] ESU -> Metric\n\njulia> electricpolarizability(Metric,Gauss) # cm³⋅m⁻³\n𝘤²2⁻¹5⁻¹ = 8.987551787368176e15 [cm³s⁻²]/[kg⁻¹s²C²] Metric -> Gauss\n\njulia> electricpolarizability(Metric,SI2019)\n𝘩⁻¹𝘤⋅𝘦²α⁻¹τ⋅2⁻⁷5⁻⁷ = 0.99999999945 ± 1.5e-10 [C²]/[C²] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticmoment","page":"Unit Conversions","title":"MeasureSystems.magneticmoment","text":"magneticmoment : [FL²TQ⁻¹C], [FL²TQ⁻¹], [ML³T⁻¹Q⁻¹], [M¹ᐟ²L⁵ᐟ²], [M¹ᐟ²L³ᐟ²T]\nmagneticmoment(U::UnitSystem,S::UnitSystem) = magneticflux(U,S)*length(U,S)\nmagneticmoment(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticmoment(U,S)\n\nAmount of magneticmoment or magneticflux by length (Wb⋅m or T⋅m³), unit conversion factor.\n\njulia> magneticmoment(EMU,Metric) # Wb⋅m⋅Mx⁻¹⋅cm⁻¹\n2⁻¹⁰5⁻¹⁰ = 1.0e-10 [V⋅m]/[g¹ᐟ²cm⁵ᐟ²s⁻¹] EMU -> Metric\n\njulia> magneticmoment(ESU,Metric) # Wb⋅m⋅statWb⁻¹⋅cm⁻¹\n𝘤⋅2⁻⁸5⁻⁸ = 2.9979245800000003 [V⋅m]/[g¹ᐟ²cm³ᐟ²] ESU -> Metric\n\njulia> magneticmoment(Metric,SI2019) # Wb⋅Wb⁻¹\n𝘩¹ᐟ²𝘤⁻¹ᐟ²𝘦⁻¹α¹ᐟ²τ⁻¹ᐟ²2⁷ᐟ²5⁷ᐟ² = 1.000000000273 ± 7.7e-11 [C⁻¹]/[C⁻¹] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificmagnetization","page":"Unit Conversions","title":"MeasureSystems.specificmagnetization","text":"specificmagnetization : [F⁻¹ML⁻²T⁻¹QC⁻¹], [L⁻³TQ], [L⁻³TQ], [M¹ᐟ²L⁻⁵ᐟ²], [M¹ᐟ²L⁻³ᐟ²T⁻¹]\nspecificmagnetization(U::UnitSystem,S::UnitSystem) = magneticmoment(U,S)/mass(U,S)\nspecificmagnetization(v::Real,U::UnitSystem,S::UnitSystem) = v/specificmagnetization(U,S)\n\nAmount of magneticmoment per mass (Wb⋅m⋅kg⁻¹), unit conversion factor.\n\njulia> specificmagnetization(EMU,Metric) # Wb⋅m⋅g⋅Mx⁻¹⋅cm⁻¹⋅kg⁻¹\n2⁷5⁷ = 1.0e7 [m⁻³s²C]/[g¹ᐟ²cm⁻⁵ᐟ²s] EMU -> Metric\n\njulia> specificmagnetization(ESU,Metric) # Wb⋅m⋅g⋅statWb⁻¹⋅cm⁻¹⋅kg⁻¹\n𝘤⁻¹2⁵5⁵ = 0.00033356409519815205 [m⁻³s²C]/[g¹ᐟ²cm⁻³ᐟ²] ESU -> Metric\n\njulia> specificmagnetization(Metric,SI2019) # Wb⋅Wb⁻¹\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.polestrength","page":"Unit Conversions","title":"MeasureSystems.polestrength","text":"polestrength : [FM⁻¹TQC⁻¹], [LT⁻¹Q], [LT⁻¹Q], [M¹ᐟ²L³ᐟ²T⁻²], [M¹ᐟ²L⁵ᐟ²T⁻³]\npolestrength(U::UnitSystem,S::UnitSystem) = magneticdipolemoment(U,S)/length(U,S)\npolestrength(v::Real,U::UnitSystem,S::UnitSystem) = v/polestrength(U,S)\n\nMagnetic polestrength is analogous to charge (A⋅m), unit conversion factor.\n\njulia> polestrength(EMU,Metric) # A⋅m⋅pole⁻¹\n2⁻¹5⁻¹ = 0.1 [m⋅s⁻²C]/[g¹ᐟ²cm³ᐟ²s⁻³] EMU -> Metric\n\njulia> polestrength(Metric,SI2019) # A⋅A⁻¹⋅\n𝘩⁻¹ᐟ²𝘤¹ᐟ²𝘦⋅α⁻¹ᐟ²τ¹ᐟ²2⁻⁷ᐟ²5⁻⁷ᐟ² = 0.999999999727 ± 7.7e-11 [C]/[C] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Thermodynamic-Units-1","page":"Unit Conversions","title":"Thermodynamic Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"MeasureSystems.temperature\nentropy\nspecificentropy\nvolumeheatcapacity\nMeasureSystems.thermalconductivity\nthermalconductance\nthermalresistivity\nthermalresistance\nthermalexpansion\nlapserate","category":"page"},{"location":"convert.html#MeasureSystems.temperature","page":"Unit Conversions","title":"MeasureSystems.temperature","text":"temperature : [Θ], [Θ], [Θ], [Θ], [Θ]\ntemperature(U::UnitSystem,S::UnitSystem) = mass(U,S)*speed(U,S)^2/boltzmann(U,S)\ntemperature(v::Real,U::UnitSystem,S::UnitSystem) = v/temperature(U,S)\n\nMeasurement scale for thermodynamic energy or temperature (K), unit conversion factor.\n\njulia> temperature(Metric,SI2019) # K⋅K⁻¹\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³ = 0.99999999966 ± 3.1e-10 [K]/[K] Metric -> SI2019\n\njulia> temperature(English,SI2019) # K⋅°R⁻¹\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴3⁻²5⁴ = 0.55555555536 ± 1.7e-10 [K]/[°R] English -> SI2019\n\njulia> temperature(English,Metric) # K⋅°R⁻¹\n3⁻²5 = 0.5555555555555556 [K]/[°R] English -> Metric\n\njulia> temperature(PlanckGauss,Metric) # K⋅TP⁻¹\nkB⁻¹NA⁻¹𝘩⁻¹𝘤³R∞⁻¹α²μₑᵤ⋅mP⋅2⁻⁴5⁻³ = 1.416784e32 ± 1.6e27 [K]/[mP] PlanckGauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.entropy","page":"Unit Conversions","title":"MeasureSystems.entropy","text":"entropy : [FLΘ⁻¹], [FLΘ⁻¹], [ML²T⁻²Θ⁻¹], [ML²T⁻²Θ⁻¹], [ML²T⁻²Θ⁻¹]\nentropy(U::UnitSystem,S::UnitSystem) = energy(U,S)/temperature(U,S)\nentropy(v::Real,U::UnitSystem,S::UnitSystem) = v/entropy(U,S)\n\nHeat capacity or energy per temperature or entropy (J⋅K⁻¹), unit conversion factor.\n\njulia> entropy(Metric,SI2019) # K⋅K⁻¹\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅2⁻⁴5⁻³ = 1.00000000034 ± 3.1e-10 [K⁻¹]/[K⁻¹] Metric -> SI2019\n\njulia> entropy(CGS,Metric) # J⋅erg⁻¹\n2⁻⁷5⁻⁷ = 1.0e-7 [J]/[erg] Gauss -> Metric\n\njulia> entropy(English,SI2019) # J⋅°R⋅K⁻¹⋅ft⁻¹⋅lb⁻¹\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅g₀⋅ft⋅lb⋅2⁻⁴3²5⁻⁴ = 2.44047230784 ± 7.5e-10 [J⋅K⁻¹]/[lbf⋅ft⋅°R⁻¹] English -> SI2019\n\njulia> entropy(Survey,English) # ftUS²⋅°R⋅°ft⁻²⋅°R⁻¹\nft⁻¹ftUS = 1.0000020000039997 [ft]/[ft] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificentropy","page":"Unit Conversions","title":"MeasureSystems.specificentropy","text":"specificentropy : [FM⁻¹LΘ⁻¹], [L²T⁻²Θ⁻¹], [L²T⁻²Θ⁻¹], [L²T⁻²Θ⁻¹], [L²T⁻²Θ⁻¹]\nspecificentropy(U::UnitSystem,S::UnitSystem) = specificenergy(U,S)/temperature(U,S)\nspecificentropy(v::Real,U::UnitSystem,S::UnitSystem) = v/specificentropy(U,S)\n\nSpecific heat capacity or specificentropy (J⋅K⁻¹⋅kg⁻¹), unit conversion factor.\n\njulia> specificentropy(Metric,SI2019) # m²⋅K⋅K⁻¹⋅cm⁻²\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅2⁻⁴5⁻³ = 1.00000000034 ± 3.1e-10 [K⁻¹]/[K⁻¹] Metric -> SI2019\n\njulia> specificentropy(CGS,Metric) # m²⋅cm⁻²\n2⁻⁴5⁻⁴ = 0.0001 [J⋅kg⁻¹]/[erg⋅g⁻¹] Gauss -> Metric\n\njulia> specificentropy(English,Metric) # m²⋅°R⋅K⁻¹⋅ft⁻²\ng₀⋅ft⋅3²5⁻¹ = 5.380320456 [J⋅K⁻¹kg⁻¹]/[lbf⋅lbm⁻¹ft⋅°R⁻¹] English -> Metric\n\njulia> specificentropy(Survey,English) # ft²⋅°R⋅ftUS⁻²⋅°R⁻¹\nft⁻¹ftUS = 1.0000020000039997 [ft]/[ft] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.volumeheatcapacity","page":"Unit Conversions","title":"MeasureSystems.volumeheatcapacity","text":"volumeheatcapacity : [FL⁻²Θ⁻¹], [FL⁻²Θ⁻¹], [ML⁻¹T⁻²Θ⁻¹], [ML⁻¹T⁻²Θ⁻¹], [ML⁻¹T⁻²Θ⁻¹]\nvolumeheatcapacity(U::UnitSystem,S::UnitSystem) = entropy(U,S)/volume(U,S)\nvolumeheatcapacity(v::Real,U::UnitSystem,S::UnitSystem) = v/volumeheatcapacity(U,S)\n\nThe entropy per volume or volumeheatcapacity (J⋅K⁻¹⋅m⁻³), unit conversion factor.\n\njulia> volumeheatcapacity(Metric,SI2019) # K⋅K⁻¹\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅2⁻⁴5⁻³ = 1.00000000034 ± 3.1e-10 [K⁻¹]/[K⁻¹] Metric -> SI2019\n\njulia> volumeheatcapacity(CGS,Metric) # J⋅cm³⋅erg⁻¹⋅m⁻³\n2⁻¹5⁻¹ = 0.1 [Pa]/[Ba] Gauss -> Metric\n\njulia> volumeheatcapacity(English,SI2019) # J⋅ft²⋅°R⋅K⁻¹⋅lb⁻¹⋅m⁻³\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅g₀⋅ft⁻²lb⋅2⁻⁴3²5⁻⁴ = 86.184466194 ± 2.7e-8 [kg⋅m⁻¹s⁻²K⁻¹]/[lbf⋅ft⁻²°R⁻¹] English -> SI2019\n\njulia> volumeheatcapacity(Survey,English) # ftUS⁵°R⋅°ft⁻⁵⋅°R⁻¹\nft²ftUS⁻² = 0.9999960000040001 [ft⁻²]/[ft⁻²] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.thermalconductivity","page":"Unit Conversions","title":"MeasureSystems.thermalconductivity","text":"thermalconductivity : [FT⁻¹Θ⁻¹], [FT⁻¹Θ⁻¹], [MLT⁻³Θ⁻¹], [MLT⁻³Θ⁻¹], [MLT⁻³Θ⁻¹]\nthermalconductivity(U::UnitSystem,S::UnitSystem) = force(U,S)/time(U,S)/temperature(U,S)\nthermalconductivity(v::Real,U::UnitSystem,S::UnitSystem) = v/thermalconductivity(U,S)\n\nHeat conductivity or thermalconductivity (W⋅m⁻¹⋅K⁻¹), unit conversion factor.\n\njulia> thermalconductivity(Metric,SI2019) # K⋅K⁻¹\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅2⁻⁴5⁻³ = 1.00000000034 ± 3.1e-10 [K⁻¹]/[K⁻¹] Metric -> SI2019\n\njulia> thermalconductivity(CGS,Metric) # N⋅dyn⁻¹\n2⁻⁵5⁻⁵ = 9.999999999999999e-6 [N]/[dyn] Gauss -> Metric\n\njulia> thermalconductivity(English,Metric) # N⋅°R⋅K⁻¹⋅ft⁻¹⋅lb⁻¹\ng₀⋅lb⋅3²5⁻¹ = 8.0067989074689 [kg⋅m⋅s⁻²K⁻¹]/[lbf⋅°R⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.thermalconductance","page":"Unit Conversions","title":"MeasureSystems.thermalconductance","text":"thermalconductance : [FLT⁻¹Θ⁻¹], [FLT⁻¹Θ⁻¹], [ML²T⁻³Θ⁻¹], [ML²T⁻³Θ⁻¹], [ML²T⁻³Θ⁻¹]\nthermalconductance(U::UnitSystem,S::UnitSystem) = thermalconductivity(U,S)*length(U,S)\nthermalconductance(v::Real,U::UnitSystem,S::UnitSystem) = v/thermalconductance(U,S)\n\nReciprocal of thermalresistance (W⋅K⁻¹), unit conversion factor.\n\njulia> thermalconductance(Metric,SI2019) # K⋅K⁻¹\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅2⁻⁴5⁻³ = 1.00000000034 ± 3.1e-10 [K⁻¹]/[K⁻¹] Metric -> SI2019\n\njulia> thermalconductance(CGS,Metric) # W⋅s⋅erg⁻¹\n2⁻⁷5⁻⁷ = 1.0e-7 [J]/[erg] Gauss -> Metric\n\njulia> thermalconductance(English,Metric) # J⋅°R⋅K⁻¹⋅ft⁻¹⋅lb⁻¹\ng₀⋅ft⋅lb⋅3²5⁻¹ = 2.440472306996521 [J⋅K⁻¹]/[lbf⋅ft⋅°R⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.thermalresistivity","page":"Unit Conversions","title":"MeasureSystems.thermalresistivity","text":"thermalresistivity : [F⁻¹TΘ], [F⁻¹TΘ], [M⁻¹L⁻¹T³Θ], [M⁻¹L⁻¹T³Θ], [M⁻¹L⁻¹T³Θ]\nthermalresistivity(U::UnitSystem,S::UnitSystem) = 1/thermalconductivity(U,S)\nthermalresistivity(v::Real,U::UnitSystem,S::UnitSystem) = v/thermalresistivity(U,S)\n\nResistance to heat flow or thermalresistance (K⋅W⁻¹), unit conversion factor.\n\njulia> thermalresistance(Metric,SI2019) # K⋅K⁻¹\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³ = 0.99999999966 ± 3.1e-10 [K]/[K] Metric -> SI2019\n\njulia> thermalresistance(CGS,Metric) # erg⋅s⁻¹⋅W⁻¹\n2⁷5⁷ = 1.0e7 [J⁻¹]/[erg⁻¹] Gauss -> Metric\n\njulia> thermalresistance(English,Metric) # ft⋅lb⋅K⋅°R⁻¹⋅J⁻¹\ng₀⁻¹ft⁻¹lb⁻¹3⁻²5 = 0.40975674959848074 [kg⁻¹m⁻²s²K]/[lbf⁻¹ft⁻¹°R] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.thermalresistance","page":"Unit Conversions","title":"MeasureSystems.thermalresistance","text":"thermalresistance : [F⁻¹L⁻¹TΘ], [F⁻¹L⁻¹TΘ], [M⁻¹L⁻²T³Θ], [M⁻¹L⁻²T³Θ], [M⁻¹L⁻²T³Θ]\nthermalresistance(U::UnitSystem,S::UnitSystem) = 1/thermalconductivity(U,S)/length(U,S)\nthermalresistance(v::Real,U::UnitSystem,S::UnitSystem) = v/thermalresistance(U,S)\n\nResistance to heat flow or thermalresistance (K⋅W⁻¹), unit conversion factor.\n\njulia> thermalresistance(Metric,SI2019) # K⋅K⁻¹\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³ = 0.99999999966 ± 3.1e-10 [K]/[K] Metric -> SI2019\n\njulia> thermalresistance(CGS,Metric) # erg⋅s⁻¹⋅W⁻¹\n2⁷5⁷ = 1.0e7 [J⁻¹]/[erg⁻¹] Gauss -> Metric\n\njulia> thermalresistance(English,Metric) # ft⋅lb⋅K⋅°R⁻¹⋅J⁻¹\ng₀⁻¹ft⁻¹lb⁻¹3⁻²5 = 0.40975674959848074 [kg⁻¹m⁻²s²K]/[lbf⁻¹ft⁻¹°R] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.thermalexpansion","page":"Unit Conversions","title":"MeasureSystems.thermalexpansion","text":"thermalexpansion : [Θ⁻¹], [Θ⁻¹], [Θ⁻¹], [Θ⁻¹], [Θ⁻¹]\nthermalexpansion(U::UnitSystem,S::UnitSystem) = 1/temperature(U,S)\nthermalexpansion(v::Real,U::UnitSystem,S::UnitSystem) = v/thermalexpansion(U,S)\n\nMeasurement scale for coefficient of thermalexpansion (K⁻¹), unit conversion factor.\n\njulia> thermalexpansion(Metric,SI2019) # K⋅K⁻¹\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅2⁻⁴5⁻³ = 1.00000000034 ± 3.1e-10 [K⁻¹]/[K⁻¹] Metric -> SI2019\n\njulia> thermalexpansion(English,SI2019) # °R⋅K⁻¹\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅2⁻⁴3²5⁻⁴ = 1.80000000062 ± 5.5e-10 [K⁻¹]/[°R⁻¹] English -> SI2019\n\njulia> thermalexpansion(English,Metric) # °R⋅K⁻¹\n3²5⁻¹ = 1.8 [K⁻¹]/[°R⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.lapserate","page":"Unit Conversions","title":"MeasureSystems.lapserate","text":"lapserate : [L⁻¹Θ], [L⁻¹Θ], [L⁻¹Θ], [L⁻¹Θ], [L⁻¹Θ]\nlapserate(U::UnitSystem,S::UnitSystem) = temperature(U,S)/length(U,S)\nlapserate(v::Real,U::UnitSystem,S::UnitSystem) = v/lapserate(U,S)\n\nTemperature gradient over length or lapserate (K⋅m⁻¹), unit conversion factor.\n\njulia> lapserate(Metric,SI2019) # K⋅K⁻¹\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³ = 0.99999999966 ± 3.1e-10 [K]/[K] Metric -> SI2019\n\njulia> lapserate(English,SI2019) # K⋅ft⋅°R⁻¹⋅m⁻¹\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹ft⁻¹2⁴3⁻²5⁴ = 1.82268882994 ± 5.6e-10 [m⁻¹K]/[ft⁻¹°R] English -> SI2019\n\njulia> lapserate(English,Metric) # K⋅ft⋅°R⁻¹⋅m⁻¹\nft⁻¹3⁻²5 = 1.8226888305628461 [m⁻¹K]/[ft⁻¹°R] English -> Metric\n\njulia> lapserate(EnglishUS,English) # °R⋅ftUS⋅°R⁻¹⋅ft⁻¹\nft⋅ftUS⁻¹ = 0.9999980000000002 [ft⁻¹]/[ft⁻¹] Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Molar-Units-1","page":"Unit Conversions","title":"Molar Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"MeasureSystems.molarmass(::UnitSystem,::UnitSystem)\nmolality\nmolaramount\nmolarity\nmolarvolume\nmolarentropy\nmolarenergy\nmolarconductivity\nmolarsusceptibility\ncatalysis\nspecificity","category":"page"},{"location":"convert.html#MeasureSystems.molarmass-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.molarmass","text":"molarmass : [MN⁻¹], [FL⁻¹T²N⁻¹], [MN⁻¹], [MN⁻¹], [MN⁻¹]\nmolarmass(U::UnitSystem,S::UnitSystem) = molarmass(S)/molarmass(U)\nmolarmass(v::Real,U::UnitSystem,S::UnitSystem) = v/molarmass(U,S)\n\nMolar mass or mass per mole (kg⋅mol⁻¹), unit conversion factor.\n\njulia> molarmass(CGS,Metric) # kg⋅g⁻¹\n2⁻³5⁻³ = 0.001 [kg]/[g] Gauss -> Metric\n\njulia> molarmass(Metric,SI2019) # mol⋅mol⁻¹\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³ = 0.99999999966 ± 3.1e-10 [mol⁻¹]/[mol⁻¹] Metric -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.molality","page":"Unit Conversions","title":"MeasureSystems.molality","text":"molality : [M⁻¹N], [F⁻¹LT⁻²N], [M⁻¹N], [M⁻¹N], [M⁻¹N]\nmolality(U::UnitSystem,S::UnitSystem) = molarmass(U)/molarmass(S)\nmolality(v::Real,U::UnitSystem,S::UnitSystem) = v/molality(U,S)\n\nMolality or mole per mass (mol⋅kg⁻¹), unit conversion factor.\n\njulia> molality(CGS,Metric) # kg⋅g⁻¹\n2³5³ = 1000.0 [kg⁻¹]/[g⁻¹] Gauss -> Metric\n\njulia> molality(Metric,SI2019) # mol⋅mol⁻¹\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅2⁻⁴5⁻³ = 1.00000000034 ± 3.1e-10 [mol]/[mol] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molaramount","page":"Unit Conversions","title":"MeasureSystems.molaramount","text":"molaramount : [N], [N], [N], [N], [N]\nmolaramount(U::UnitSystem,S::UnitSystem) = mass(U,S)*molality(U,S)\nmolaramount(v::Real,U::UnitSystem,S::UnitSystem) = v/molaramount(U,S)\n\nAmount of molecular substance or molaramount (mol), unit conversion factor.\n\njulia> molaramount(SI2019,Metric) # mol⋅mol⁻¹\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³ = 0.99999999966 ± 3.1e-10 [mol]/[mol] SI2019 -> Metric\n\njulia> molaramount(British,SI2019) # mol⋅slug-mol⁻¹\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅lb⋅2⁻¹ = 453.59237016 ± 1.4e-7 [mol]/[lb-mol] English -> SI2019\n\njulia> molaramount(English,SI2019) # mol⋅lb-mol⁻¹\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅lb⋅2⁻¹ = 453.59237016 ± 1.4e-7 [mol]/[lb-mol] English -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarity","page":"Unit Conversions","title":"MeasureSystems.molarity","text":"molarity : [L⁻³N], [L⁻³N], [L⁻³N], [L⁻³N], [L⁻³N]\nmolarity(U::UnitSystem,S::UnitSystem) = molaramount(U,S)/volume(U,S)\nmolarity(v::Real,U::UnitSystem,S::UnitSystem) = v/molarity(U,S)\n\nMolar concentration or molaramount per volume (mol⋅m⁻³), unit conversion factor.\n\njulia> molarity(CGS,Metric) # cm³⋅m⁻³\n2⁶5⁶ = 1.0e6 [m⁻³]/[cm⁻³] Gauss -> Metric\n\njulia> molarity(English,SI2019) # ft³⋅m⁻³\nNA⁻¹𝘩⁻¹𝘤⋅R∞⁻¹α²μₑᵤ⋅ft⁻³lb⋅2⁻¹ = 16018.4633795 ± 4.9e-6 [m⁻³mol]/[ft⁻³lb-mol] English -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarvolume","page":"Unit Conversions","title":"MeasureSystems.molarvolume","text":"molarvolume : [L³N⁻¹], [L³N⁻¹], [L³N⁻¹], [L³N⁻¹], [L³N⁻¹]\nmolarvolume(U::UnitSystem,S::UnitSystem) = volume(U,S)/molaramount(U,S)\nmolarvolume(v::Real,U::UnitSystem,S::UnitSystem) = v/molarvolume(U,S)\n\nOccupied volume per molaramount or molarvolume (m³⋅mol⁻¹), unit conversion factor.\n\njulia> molarvolume(CGS,Metric) # m³⋅cm⁻³\n2⁻⁶5⁻⁶ = 1.0e-6 [m³]/[cm³] Gauss -> Metric\n\njulia> molarvolume(English,SI2019) # m³⋅ft⁻³\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹ft³lb⁻¹2 = 6.2427960555e-5 ± 1.9e-14 [m³mol⁻¹]/[ft³lb-mol⁻¹] English -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarentropy","page":"Unit Conversions","title":"MeasureSystems.molarentropy","text":"molarentropy : [FLΘ⁻¹N⁻¹], [FLΘ⁻¹N⁻¹], [ML²T⁻²Θ⁻¹N⁻¹], [ML²T⁻²Θ⁻¹N⁻¹], [ML²T⁻²Θ⁻¹N⁻¹]\nmolarentropy(U::UnitSystem,S::UnitSystem) = entropy(U,S)/molaramount(U,S)\nmolarentropy(v::Real,U::UnitSystem,S::UnitSystem) = v/molarentropy(U,S)\n\nMolar heat capacity or entropy per molaramount (J⋅K⁻¹⋅mol⁻¹), unit conversion factor.\n\njulia> molarentropy(CGS,Metric) # J⋅erg⁻¹\n2⁻⁷5⁻⁷ = 1.0e-7 [J]/[erg] Gauss -> Metric\n\njulia> molarentropy(English,SI2019) # J⋅°R⋅lb-mol⋅ft⁻¹⋅lb⁻¹⋅K⁻¹⋅mol⁻¹\ng₀⋅ft⋅2⁻³3²5⁻⁴ = 0.005380320456000001 [J⋅K⁻¹mol⁻¹]/[lbf⋅ft⋅°R⁻¹lb-mol⁻¹] English -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarenergy","page":"Unit Conversions","title":"MeasureSystems.molarenergy","text":"molarenergy : [FLN⁻¹], [FLN⁻¹], [ML²T⁻²N⁻¹], [ML²T⁻²N⁻¹], [ML²T⁻²N⁻¹]\nmolarenergy(U::UnitSystem,S::UnitSystem) = energy(U,S)/molaramount(U,S)\nmolarenergy(v::Real,U::UnitSystem,S::UnitSystem) = v/molarenergy(U,S)\n\nGibbs free energy per mole or molarenergy (J⋅mol⁻¹), unit conversion factor.\n\njulia> molarenergy(CGS,Metric) # J⋅erg⁻¹\n2⁻⁷5⁻⁷ = 1.0e-7 [J]/[erg] Gauss -> Metric\n\njulia> molarenergy(English,SI2019) # J⋅slug-mol⋅ft⁻¹⋅lb⁻¹⋅mol⁻¹\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹g₀⋅ft⋅2 = 0.00298906691897 ± 9.2e-13 [J⋅mol⁻¹]/[lbf⋅ft⋅lb-mol⁻¹] English -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarconductivity","page":"Unit Conversions","title":"MeasureSystems.molarconductivity","text":"molarconductivity : [F⁻¹T⁻¹Q²N⁻¹], [F⁻¹T⁻¹Q²N⁻¹], [M⁻¹L⁻¹TQ²N⁻¹], [T⁻¹N⁻¹], [L²T⁻³N⁻¹]\nmolarconductivity(U::UnitSystem,S::UnitSystem) = conductivity(U,S)*area(U,S)/molaramount(U,S)\nmolarconductivity(v::Real,U::UnitSystem,S::UnitSystem) = v/molarconductivity(U,S)\n\nConductivity per molarvolume or molarconductivity (S⋅m²⋅mol⁻¹), unit conversion factor.\n\njulia> molarconductivity(EMU,Metric) # S⋅m²⋅abΩ⋅cm⁻²\n2⁷5⁷ = 1.0e7 [kg⁻¹m⁻¹s²C²]/[𝟙] EMU -> Metric\n\njulia> molarconductivity(ESU,Metric) # S⋅m²⋅statΩ⋅cm⁻²\n𝘤⁻²2³5³ = 1.1126500560536185e-14 [kg⁻¹m⁻¹s²C²]/[erg⋅g⁻¹] ESU -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarsusceptibility","page":"Unit Conversions","title":"MeasureSystems.molarsusceptibility","text":"molarsusceptibility : [FM⁻¹L²T²N⁻¹A⁻²Λ⁻¹], [L³N⁻¹], [L³N⁻¹], [L³N⁻¹], [L³N⁻¹]\nmolarsusceptibility(U::UnitSystem,S::UnitSystem) = specificsusceptibility(U,S)*molarmass(U,S)\nmolarsusceptibility(v::Real,U::UnitSystem,S::UnitSystem) = v/molarsusceptibility(U,S)\n\nMagnetic/electric molar mass susceptibility (m³⋅mol⁻¹), unit conversion factor.\n\njulia> molarsusceptibility(CGS,Metric) # m³⋅cm⁻³\nτ⋅2⁻⁵5⁻⁶ = 1.2566370614359172e-5 [m³s⁻²]/[cm³s⁻²] Gauss -> Metric\n\njulia> molarsusceptibility(Metric,SI2019) # m³⋅mol⋅mol⁻¹⋅cm⁻³\nNA⋅𝘩⋅𝘤⁻¹R∞⋅α⁻²μₑᵤ⁻¹2⁴5³ = 0.99999999966 ± 3.1e-10 [mol⁻¹]/[mol⁻¹] Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.catalysis","page":"Unit Conversions","title":"MeasureSystems.catalysis","text":"catalysis : [T⁻¹N], [T⁻¹N], [T⁻¹N], [T⁻¹N], [T⁻¹N]\ncatalysis(U::UnitSystem,S::UnitSystem) = molaramount(U,S)/time(U,S)\ncatalysis(v::Real,U::UnitSystem,S::UnitSystem) = v/catalysis(U,S)\n\nCatalytic activity or molaramount per time (kat, mol⋅s⁻¹), unit conversion factor.\n\njulia> catalysis(English,Metric) # kat⋅s⋅lb-mol⁻¹\nlb⋅2³5³ = 453.59237 [mol]/[lb-mol] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificity","page":"Unit Conversions","title":"MeasureSystems.specificity","text":"specificity : [L³T⁻¹N⁻¹], [L³T⁻¹N⁻¹], [L³T⁻¹N⁻¹], [L³T⁻¹N⁻¹], [L³T⁻¹N⁻¹]\nspecificity(U::UnitSystem,S::UnitSystem) = volume(U,S)/molaramount(U,S)/time(U,S)\nspecificity(v::Real,U::UnitSystem,S::UnitSystem) = v/specificity(U,S)\n\nCatalytic efficiency or volume per mole per time (m³⋅mol⁻¹⋅s⁻¹), unit conversion factor.\n\njulia> specificity(CGS,Metric) # m³⋅cm⁻³\n2⁻⁶5⁻⁶ = 1.0e-6 [m³]/[cm³] Gauss -> Metric\n\njulia> specificity(English,Metric) # m³⋅lb-mol⋅mol⁻¹⋅ft⁻³\nft³lb⁻¹2⁻³5⁻³ = 6.242796057614462e-5 [m³mol⁻¹]/[ft³lb-mol⁻¹] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Photometric-Units-1","page":"Unit Conversions","title":"Photometric Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"luminousflux\nluminousintensity\nluminance\nilluminance\nluminousenergy\nluminousexposure\nMeasureSystems.luminousefficacy(::UnitSystem,::UnitSystem)","category":"page"},{"location":"convert.html#MeasureSystems.luminousflux","page":"Unit Conversions","title":"MeasureSystems.luminousflux","text":"luminousflux : [J], [J], [J], [J], [J]\nluminousflux(U::UnitSystem,S::UnitSystem) = luminousenergy(U,S)*frequency(U,S)\nluminousflux(v::Real,U::UnitSystem,S::UnitSystem) = v/luminousflux(U,S)\n\nPerceived power of light or luminousflux (lm, cd⋅rad⋅²), unit conversion factor.\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.luminousintensity","page":"Unit Conversions","title":"MeasureSystems.luminousintensity","text":"luminousintensity : [JA⁻²], [J], [J], [J], [J]\nluminousintensity(U::UnitSystem,S::UnitSystem) = luminousflux(U,S)/solidangle(U,S)\nluminousintensity(v::Real,U::UnitSystem,S::UnitSystem) = v/luminousintensity(U,S)\n\nPerceived power of light or luminousintensity (cd, lm⋅rad⁻²), unit conversion factor.\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.luminance","page":"Unit Conversions","title":"MeasureSystems.luminance","text":"luminance : [L⁻²JA⁻²], [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J]\nluminance(U::UnitSystem,S::UnitSystem) = luminousintensity(U,S)/area(U,S)\nluminance(v::Real,U::UnitSystem,S::UnitSystem) = v/luminance(U,S)\n\nLuminous intensity per area or luminance (cd⋅m⁻², lm⋅m⁻²⋅rad⁻²), unit conversion factor.\n\njulia> luminance(CGS,Metric) # lx⋅ph⁻¹\n2⁴5⁴ = 10000.0 [m⁻²]/[cm⁻²] Gauss -> Metric\n\njulia> luminance(IAU,Metric) # lx⋅au²⋅lm⁻¹\nau⁻² = 4.4683704995199996e-23 ± 1.7999999999999998e-33 [m⁻²]/[au⁻²] IAU☉ -> Metric\n\njulia> luminance(English,Metric) # ft²⋅m⁻²\nft⁻² = 10.76391041670972 [m⁻²]/[ft⁻²] English -> Metric\n\njulia> 1/10.76 # lx⋅fc⁻¹\n0.0929368029739777\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.illuminance","page":"Unit Conversions","title":"MeasureSystems.illuminance","text":"illuminance : [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J], [L⁻²J]\nilluminance(U::UnitSystem,S::UnitSystem) = luminousflux(U,S)/area(U,S)\nilluminance(v::Real,U::UnitSystem,S::UnitSystem) = v/illuminance(U,S)\n\nLuminous flux per area or luminance (lx, lm⋅m⁻², cd⋅m⁻²⋅rad²), unit conversion factor.\n\njulia> illuminance(CGS,Metric) # lx⋅ph⁻¹\n2⁴5⁴ = 10000.0 [m⁻²]/[cm⁻²] Gauss -> Metric\n\njulia> illuminance(IAU,Metric) # lx⋅au²⋅lm⁻¹\nau⁻² = 4.4683704995199996e-23 ± 1.7999999999999998e-33 [m⁻²]/[au⁻²] IAU☉ -> Metric\n\njulia> illuminance(English,Metric) # ft²⋅m⁻²\nft⁻² = 10.76391041670972 [m⁻²]/[ft⁻²] English -> Metric\n\njulia> 1/10.76 # lx⋅fc⁻¹\n0.0929368029739777\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.luminousenergy","page":"Unit Conversions","title":"MeasureSystems.luminousenergy","text":"luminousenergy : [TJ], [TJ], [TJ], [TJ], [TJ]\nluminousenergy(U::UnitSystem,S::UnitSystem) = luminousflux(U,S)*time(U,S)\nluminousenergy(v::Real,U::UnitSystem,S::UnitSystem) = v/luminousenergy(U,S)\n\nPerceived quantity of light or luminousenergy (lm⋅s, cd⋅s⋅sr), unit conversion factor.\n\njulia> luminousenergy(IAU,Metric) # s⋅day⁻¹\n2⁷3³5² = 86400.0 [s]/[D] IAU☉ -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.luminousexposure","page":"Unit Conversions","title":"MeasureSystems.luminousexposure","text":"luminousexposure : [L⁻²TJ], [L⁻²TJ], [L⁻²TJ], [L⁻²TJ], [L⁻²TJ]\nluminousexposure(U::UnitSystem,S::UnitSystem) = illuminance(U,S)*time(U,S)\nluminousexposure(v::Real,U::UnitSystem,S::UnitSystem) = v/luminousexposure(U,S)\n\nIntegrated luminance along time (lx⋅s, lm⋅s⋅m⁻², cd⋅s⋅m⁻²⋅sr), unit conversion factor.\n\njulia> luminousexposure(CGS,Metric) # lx⋅ph⁻¹\n2⁴5⁴ = 10000.0 [m⁻²]/[cm⁻²] Gauss -> Metric\n\njulia> luminousexposure(IAU,Metric) # s⋅au²⋅day⁻¹⋅m⁻²\nau⁻²2⁷3³5² = 3.86067211159e-18 ± 1.4999999999999998e-28 [m⁻²s]/[au⁻²D] IAU☉ -> Metric\n\njulia> luminousexposure(English,Metric) # ft²⋅m⁻²\nft⁻² = 10.76391041670972 [m⁻²]/[ft⁻²] English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.luminousefficacy-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.luminousefficacy","text":"luminousefficacy : [F⁻¹L⁻¹TJ], [F⁻¹L⁻¹TJ], [M⁻¹L⁻²T³J], [M⁻¹L⁻²T³J], [M⁻¹L⁻²T³J]\nluminousefficacy(U::UnitSystem,S::UnitSystem) = luminousefficacy(S)/luminousefficacy(U)\nluminousefficacy(v::Real,U::UnitSystem,S::UnitSystem) = v/luminousefficacy(U,S)\n\nRatio of luminousflux to power or luminousefficacy (lm⋅W⁻¹), unit conversion factor.\n\njulia> luminousefficacy(CGS,Metric) # erg⋅s⁻¹⋅W⁻¹\n2⁷5⁷ = 1.0e7 [J⁻¹]/[erg⁻¹] Gauss -> Metric\n\njulia> luminousefficacy(English,Metric) # ft⋅lb⋅s⁻¹⋅W⁻¹\ng₀⁻¹ft⁻¹lb⁻¹ = 0.7375621492772653 [J⁻¹]/[lbf⁻¹ft⁻¹] English -> Metric\n\n\n\n\n\n","category":"method"},{"location":"convert.html#Conversion-Index-1","page":"Unit Conversions","title":"Conversion Index","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"Pages = [\"convert.md\",\"unitsystems.md\"]","category":"page"}]
}
