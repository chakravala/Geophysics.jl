var documenterSearchIndex = {"docs":
[{"location":"references.html#References-1","page":"References","title":"References","text":"","category":"section"},{"location":"references.html#","page":"References","title":"References","text":"(Image: DOI) (Image: Build Status) (Image: Build status) (Image: Docs Stable) (Image: Docs Dev) (Image: Gitter)","category":"page"},{"location":"references.html#","page":"References","title":"References","text":"R. A. Minzer and W. S. Ripley, The ARDC Model Atmosphere, 1956, ARDC (1956)\nR. A. Minzer, K. S. W. Champion, and H. L. Pond, The ARDC Model Atmosphere, 1959, ARDC (1959)\nNASA, USAF, and USWB, U.S. Standard Atmosphere, 1962, ICAO (1962)\nNOAA, NASA, and USAF, U.S. Standard Atmosphere, 1976, NOAA (1976)","category":"page"},{"location":"units.html#The-UnitSystem-1","page":"The UnitSystem","title":"The UnitSystem","text":"","category":"section"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Physical unit system constants (Metric, English, Natural, etc...)","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"(Image: DOI)","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Pages = [\"units.md\",\"constants.md\",\"convert.md\"]","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"In fact there is nothing transcendental about dimensions; the ultimate principle is precisely expressible (in Newton's terminology) as one of similitude, exact or approximate, to be tested by the rule that mere change in the magnitudes of the ordered scheme of units of measurement that is employed must not affect sensibly the forms of the equations that are the adequate expression of the underlying relations of the problem. (J.L.)","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Specifications for dimensional units are in the UnitSystems.jl and Similitude.jl and MeasureSystems.jl repositories. The three packages are designed so that they can be interchanged with compatibility. On its own UnitSystems is the fastest package, while Similitude (provides Quantity type) and MeasureSystems (introduces Measurements.jl uncertainty) build additional features on top of UnitSystems base defintions. Additionally, in the UnitSystems repository there is an equivalent Wolfram language paclet Kernel and also an unmaintained Rust src implementation. Defaults are shared across the packages: Metric, SI2019, CODATA, Conventional, International, InternationalMean, MetricEngineering, SI2019Engineering, GravitationalMetric, GravitationalSI2019, British, British2019, Survey, Survey2019, English, English2019, FPS, FPS2019, Gauss, LorentzHeaviside, Thomson, EMU, ESU, EMU2019, ESU2019, IAU, IAUE, IAUJ, Astronomical, Hubble, Cosmological, CosmologicalQuantum, Nautical, MPH, KKH, MTS, FFF, Planck, PlanckGauss, Stoney, Hartree, Rydberg, Schrodinger, Electronic, Natural, NaturalGauss, QCD, QCDGauss, and QCDoriginal.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> using UnitSystems # or Similitude or MeasureSystems","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"A UnitSystem is a consistent set of dimensional values selected to accomodate a particular use case standardization. It is possible to convert derived physical quantities from any UnitSystem specification into any other using accurate values. Eleven fundamental constants kB, ƒß, ùò§, Œº‚ÇÄ, m‚Çë, M·µ§, Kcd, Œ∏, Œª, Œ±L, g‚ÇÄ are used to govern a specific unit system consistent scaling. These are the constants boltzmann, planckreduced, lightspeed, vacuumpermeability, electronmass, molarmass, luminousefficacy, angle, rationalization, lorentz, and gravity. Different choices of natural units or physical measurements result in a variety of unit systems for many purposes.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"k_B qquad hbar qquad c qquad mu_0 qquad m_e qquad M_u qquad K_cd qquad theta qquad lambda qquad alpha_L qquad g_0","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Historically, older electromagnetic unit systems also relied on a rationalization constant Œª and a lorentz force proportionality constant Œ±L. In most unit systems these extra constants have a value of 1 unless otherwise specified.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"MeasureSystems.UnitSystem","category":"page"},{"location":"units.html#UnitSystems.UnitSystem","page":"The UnitSystem","title":"UnitSystems.UnitSystem","text":"UnitSystem{kB, ƒß, ùò§, Œº‚ÇÄ, m‚Çë, M·µ§, (Kcd, Œ∏, Œª, Œ±L, g‚ÇÄ, ...)}\n\nFundamental constants of physics are: kB Boltzmann's constant, ƒß reduced Planck's constant, ùò§ speed of light, Œº‚ÇÄ vacuum permeability, m‚Çë electron rest mass, M·µ§ molar mass, Kcd luminous efficacy, Œ∏ angle measure, Œª Gauss rationalization, Œ±L Lorentz's constant, and g‚ÇÄ gravitational force reference. Primarily the Metric SI unit system is used in addition to the historic English engineering unit system. These constants induce derived values for avogadro, boltzmann, universalgas, planck, planckreduced, lightspeed, planckmass, atomicmass, protonmass, electronmass, newton, einstein, vacuumpermeability, vacuumpermittivity, coulomb, and additional constants molarmass, luminousefficacy, gravity, angle, turn, sphere, stefan, radiationdensity, ampere, lorentz, biotsavart, rationalization, vacuumimpedance, elementarycharge, magneton, conductancequantum, faraday, magneticfluxquantum, josephson, klitzing, hartree, rydberg, bohr, bohrreduced. Derived quantities are second, minute, hour, day, year, gaussianyear, siderealyear, hyperfine, hubble, cosmological, solarmass, earthmass, jupitermass, lunarmass, astronomicalunit, lunardistance, mile, clarkemile, nauticalmile, parsec, lightyear, gallon, litre, standardgravity, standardtemperature, standardpressure, inchmercury, torr, kilocalorie, calorie, meancalorie, thermalunit, tonsrefrigeration, horsepower, horsepowerwatt, horsepowermetric, electricalhorsepower, boilerhorsepower.\n\nAdditional reference UnitSystem variants: EMU, ESU, Gauss, LorentzHeaviside, SI2019, SI1976, CODATA, Conventional, International, InternationalMean, MetricEngineering, GravitationalMetric, Astronomical, Hubble, Cosmological, CosmologicalQuantum, IAU, IAUE, IAUJ, MTS, FPS, British, Survey, Nautical, MPH, KKH, FFF; and natural atomic units based on gravitational coupling and finestructure constant (Planck, PlanckGauss, Stoney, Hartree, Rydberg, Schrodinger, Electronic, Natural, NaturalGauss, QCD, QCDGauss, and QCDoriginal).\n\nDerived unit conversions:\n\nMechanics: angle, solidangle, time, length, area, volume, wavenumber, angularwavenumber, fuelefficiency, frequency, angularfrequency, frequencydrift, speed, acceleration, jerk, snap, crackle, pop, volumeflow, inertia, mass, massflow, lineardensity, areadensity, density, specificweight, specificvolume, force, gforce, stiffness, pressure, compressibility, viscosity, diffusivity, rotationalinertia, impulse, momentum, angularmomentum, yank, energy, specificenergy, action, fluence, power, powerdensity, intensity, spectralflux, soundexposure, impedance, specificimpedance, admittance, compliance, inertance; Electromagnetics: charge, chargedensity, linearchargedensity, exposure, mobility, current, currentdensity, resistance, conductance, resistivity, conductivity, capacitance, inductance, reluctance, permeance, permittivity, permeability, susceptibility, specificsusceptibility, demagnetizingfactor, vectorpotential, electricpotential, magneticpotential, electricfield, magneticfield, electricflux, magneticflux, electricfluxdensity, magneticfluxdensity, electricdipolemoment, magneticdipolemoment, electricpolarizability, magneticpolarizability, magneticmoment, magnetizability, magnetization, specificmagnetization, rigidity, polestrength; Thermodynamics: temperature, entropy, specificentropy, volumeheatcapacity, thermalconductivity, thermalconductance, thermalresistance, thermalexpansion, lapserate, molarmass, molality, mole, molarity, molarvolume, molarentropy, molarenergy, molarconductivity, molarsusceptibility, catalysis, specificity, luminousflux, luminance, luminousenergy, luminousexposure, luminousefficacy.\n\n\n\n\n\n","category":"type"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Specification of Universe with the dimensionless Coupling constants coupling, finestructure, electronunit, protonunit, protonelectron, and darkenergydensity. Alterations to these values can be facilitated and quantified using parametric polymorphism. Due to the Coupling interoperability, the MeasureSystems package is made possible to support calculations with Measurements having error standard deviations.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Similar packages: UnitSystems.jl, Similitude.jl, MeasureSystems.jl, PhysicalConstants.jl, MathPhysicalConstants.jl, Unitful.jl, UnitfulUS.jl, UnitfulAstro.jl, UnitfulAtomic.jl, NaturallyUnitful.jl, and UnitfulMoles.jl.","category":"page"},{"location":"units.html#Default-UnitSystems-1","page":"The UnitSystem","title":"Default UnitSystems","text":"","category":"section"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Pages = [\"units.md\"]","category":"page"},{"location":"units.html#Metric-SI-Unit-Systems-1","page":"The UnitSystem","title":"Metric SI Unit Systems","text":"","category":"section"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"In the Systeme International d'Unites (the SI units) the UnitSystem constants are derived from the most accurate possible physical measurements and a few exactly defined constants. Exact values are the avogadro number, boltzmann constant, planck constant, lightspeed definition, and elementary charge definition.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"N_A = 602214076mathrme23\nk_B = 1380649mathrme-23\nh = 662607015mathrme-34\nc = 299792458\ne = 1602176634mathrme-19","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> NA # avogadro\nNA = 6.02214076e23\n\njulia> kB # boltzmann\nkB = 1.380649e-23\n\njulia> ùò© # planck\nùò© = 6.62607015e-34\n\njulia> ùò§ # lightspeed\nùò§ = 2.99792458e8\n\njulia> ùò¶ # charge\nùò¶ = 1.602176634e-19","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Physical measured values with uncertainty are electron to proton mass ratio Œº‚Çë·µ§, proton to atomic mass ratio Œº‚Çö·µ§, inverted fine structure constant Œ±inv, the Rydberg R‚àû constant, and the Planck mass mP.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"mu_eu = fracm_em_u approx frac118229\nmu_pu = fracm_pm_u approx 100727647\nalpha approx frac1137036\nR_infty approx 1097373mathrme7\nm_P approx 2176434mathrme-8","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> Œº‚Çë·µ§ # electronunit\nŒº‚Çë·µ§ = 0.000548579909065 ¬± 1.6e-14\n\njulia> Œº‚Çö·µ§ # protonunit\nŒº‚Çö·µ§ = 1.007276466621 ¬± 5.3e-11\n\njulia> Œ±inv # 1/finestructure\nŒ±‚Åª¬π = 137.035999084 ¬± 2.1e-8\n\njulia> R‚àû # rydbgerg\nR‚àû = 1.097373156816e7 ¬± 2.1e-5\n\njulia> mP # planckmass\nmP = 2.176434e-8 ¬± 2.4e-13","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"From these numbers along with the optional 4œÄ Gaussian rationalization value, the constants planckreduced, permeability, electronmass, molarmass, and proton to electon mass ratio are computed.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"hbar = frach2pi qquad\nmu_0 = frac2halphace^2 qquad\nm_e = frac2hR_inftycalpha^2 qquad\nM_u = fracm_emu_euN_A = frac2h R_infty N_Acalpha^2mu_eu qquad\nmu_pe = fracmu_pumu_eu = fracm_pm_e","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> ƒß # planckreduced\nùò©*œÑ‚Åª¬π = 1.0545718176461565e-34\n\njulia> Œº‚ÇÄ # vacuumpermeability\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*2 = 1.25663706212e-6 ¬± 1.9e-16\n\njulia> m‚Çë # electronmass\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 9.1093837016e-31 ¬± 2.8e-40\n\njulia> M·µ§ # molarmass\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2 = 0.00099999999966 ¬± 3.1e-13\n\njulia> Œº‚Çö‚Çë # protonelectron\nŒº‚Çë·µ§‚Åª¬πŒº‚Çö·µ§ = 1836.15267343 ¬± 1.1e-7","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"These result in variants based on the original molarmass constant and Gaussian permeability along with the 2019 redefined exact values. The main difference between the two is determined by deltatilde M_u and deltatildemu_0.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = fracm_e R_umu_eu tilde M_u = frack_B N_Am_u tilde M_u quad\ntilde hbar = hbar quad\ntilde c = c quad\ntildemu_0 = frac4pi10^7 + deltatilde mu_0 quad\ntilde m_e = m_e quad\n(tilde M_u = frac11000 + delta tilde M_u)","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"MetricSystem\nMeasureSystems.Metric\nSI2019\nMetricEngineering\nSI2019Engineering\nSI1976","category":"page"},{"location":"units.html#MeasureSystems.MetricSystem","page":"The UnitSystem","title":"MeasureSystems.MetricSystem","text":"MetricSystem(Mu=M·µ§,Œº0=Œº‚ÇÄ,Ru=R·µ§,g0=ùüè,h=ùò©)\n\nConstructs new UnitSystem from molarmass constant, vacuumpermeability, universal gas constant, gravity force reference, and planck constant.\n\nExamples include SI2019, Metric, SI2019Engineering, MetricEngineering, SI1976. In addition, the ConventionalSystem constructor further builds on MetricSystem, resulting in variations.\n\n\n\n\n\n","category":"function"},{"location":"units.html#MeasureSystems.Metric","page":"The UnitSystem","title":"MeasureSystems.Metric","text":"Metric = MetricSystem(ùüèùüé^-3,ùüê*œÑ/ùüèùüé^7)\n\nSysteme International d'Unites (the SI units) adopted as the preferred UnitSystem.\n\njulia> boltzmann(Metric) # J‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 1.3806489995299998e-23 ¬± 4.2999999999999996e-33 [kg*m¬≤s‚Åª¬≤K‚Åª¬π] Metric\n\njulia> planckreduced(Metric) # J‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π = 1.0545718176461565e-34 [kg*m¬≤s‚Åª¬π] Metric\n\njulia> lightspeed(Metric) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] Metric\n\njulia> vacuumpermeability(Metric) # H‚ãÖm‚Åª¬π\nœÑ*2‚Åª‚Å∂5‚Åª‚Å∑ = 1.2566370614359173e-6 [kg*m*C‚Åª¬≤] Metric\n\njulia> electronmass(Metric) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 9.1093837016e-31 ¬± 2.8e-40 [kg] Metric\n\njulia> molarmass(Metric) # kg‚ãÖmol‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 [kg*mol‚Åª¬π] Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.SI2019","page":"The UnitSystem","title":"MeasureSystems.SI2019","text":"SI2019 = MetricSystem(M·µ§,Œº‚ÇÄ)\n\nSysteme International d'Unites (the SI units) with Œº‚ÇÄ for a tuned charge exactly.\n\njulia> boltzmann(SI2019) # J‚ãÖK‚Åª¬π\nkB = 1.380649e-23 [kg*m¬≤s‚Åª¬≤K‚Åª¬π] SI2019\n\njulia> planckreduced(SI2019) # J‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π = 1.0545718176461565e-34 [kg*m¬≤s‚Åª¬π] SI2019\n\njulia> lightspeed(SI2019) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] SI2019\n\njulia> vacuumpermeability(SI2019) # H‚ãÖm‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*2 = 1.25663706212e-6 ¬± 1.9e-16 [kg*m*C‚Åª¬≤] SI2019\n\njulia> electronmass(SI2019) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 9.1093837016e-31 ¬± 2.8e-40 [kg] SI2019\n\njulia> molarmass(SI2019) # kg‚ãÖmol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2 = 0.00099999999966 ¬± 3.1e-13 [kg*mol‚Åª¬π] SI2019\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.MetricEngineering","page":"The UnitSystem","title":"MeasureSystems.MetricEngineering","text":"MetricEngineering = MetricSystem(ùüèùüé^-3,ùüê*œÑ/ùüèùüé^7,R·µ§,g‚ÇÄ)\n\nSysteme International d'Unites (the SI units) based on kilogram and kilopond units.\n\njulia> boltzmann(MetricEngineering) # J‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πg‚ÇÄ‚Åª¬≤2‚Å¥5¬≥ = 1.43562803735e-25 ¬± 4.4e-35 [kgf*m*K‚Åª¬π] MetricEngineering\n\njulia> planckreduced(MetricEngineering) # J‚ãÖs‚ãÖrad‚Åª¬π\nùò©*g‚ÇÄ‚Åª¬πœÑ‚Åª¬π = 1.0753639802033891e-35 [kgf*m*s*rad‚Åª¬π] MetricEngineering\n\njulia> lightspeed(MetricEngineering) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] MetricEngineering\n\njulia> vacuumpermeability(MetricEngineering) # H‚ãÖm‚Åª¬π\nœÑ*2‚Åª‚Å∂5‚Åª‚Å∑ = 1.2566370614359173e-6 [kgf*s¬≤C‚Åª¬≤rad‚Åª¬≤] MetricEngineering\n\njulia> electronmass(MetricEngineering) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤g‚ÇÄ‚Åª¬π2 = 9.288986250700001e-32 ¬± 2.8e-41 [kg] MetricEngineering\n\njulia> molarmass(MetricEngineering) # kg‚ãÖmol‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 [kg*mol‚Åª¬π] MetricEngineering\n\njulia> gravity(MetricEngineering) # kg‚ãÖm‚ãÖN‚Åª¬π‚ãÖs‚Åª¬≤\ng‚ÇÄ = 9.80665 [kgf‚Åª¬πkg*m*s‚Åª¬≤] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.SI2019Engineering","page":"The UnitSystem","title":"MeasureSystems.SI2019Engineering","text":"SI2019Engineering = MetricSystem(M·µ§,Œº‚ÇÄ,R·µ§,g‚ÇÄ)\n\nSysteme International d'Unites (the SI units) based on kilogram and kilopond units.\n\njulia> boltzmann(SI2019Engineering) # J‚ãÖK‚Åª¬π\nkB*g‚ÇÄ‚Åª¬≤ = 1.4356280378434675e-25 [kgf*m*K‚Åª¬π] SI2019Engineering\n\njulia> planckreduced(SI2019Engineering) # J‚ãÖs‚ãÖrad‚Åª¬π\nùò©*g‚ÇÄ‚Åª¬πœÑ‚Åª¬π = 1.0753639802033891e-35 [kgf*m*s*rad‚Åª¬π] SI2019Engineering\n\njulia> lightspeed(SI2019Engineering) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] SI2019Engineering\n\njulia> vacuumpermeability(SI2019Engineering) # H‚ãÖm‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*2 = 1.25663706212e-6 ¬± 1.9e-16 [kgf*s¬≤C‚Åª¬≤rad‚Åª¬≤] SI2019Engineering\n\njulia> electronmass(SI2019Engineering) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤g‚ÇÄ‚Åª¬π2 = 9.288986250700001e-32 ¬± 2.8e-41 [kg] SI2019Engineering\n\njulia> molarmass(SI2019Engineering) # kg‚ãÖmol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2 = 0.00099999999966 ¬± 3.1e-13 [kg*mol‚Åª¬π] SI2019Engineering\n\njulia> gravity(SI2019Engineering) # kg‚ãÖm‚ãÖN‚Åª¬π‚ãÖs‚Åª¬≤\ng‚ÇÄ = 9.80665 [kgf‚Åª¬πkg*m*s‚Åª¬≤] SI2019Engineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.SI1976","page":"The UnitSystem","title":"MeasureSystems.SI1976","text":"SI1976 = MetricSystem(ùüèùüé^-3,ùüê*œÑ/ùüèùüé^7,8.31432)\n\nSysteme International d'Unites (the SI units) with universal gas constant of 8.31432.\n\njulia> boltzmann(SI1976) # J‚ãÖK‚Åª¬π\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥*8.31432 = 1.38062531722e-23 ¬± 4.2999999999999996e-33 [kg*m¬≤s‚Åª¬≤K‚Åª¬π] SI1976\n\njulia> planckreduced(SI1976) # J‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π = 1.0545718176461565e-34 [kg*m¬≤s‚Åª¬π] SI1976\n\njulia> lightspeed(SI1976) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] SI1976\n\njulia> vacuumpermeability(SI1976) # H‚ãÖm‚Åª¬π\nœÑ*2‚Åª‚Å∂5‚Åª‚Å∑ = 1.2566370614359173e-6 [kg*m*C‚Åª¬≤] SI1976\n\njulia> electronmass(SI1976) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 9.1093837016e-31 ¬± 2.8e-40 [kg] SI1976\n\njulia> molarmass(SI1976) # kg‚ãÖmol‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 [kg*mol‚Åª¬π] SI1976\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Additional reference values include the ground state hyperfine structure transition frequency of caesium-133 ŒîŒΩCs and luminousefficacy of monochromatic radiation Kcd of 540 THz.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> ŒîŒΩCs # hyperfine\nŒîŒΩCs = 9.19263177e9\n\njulia> Kcd # luminousefficacy\nKcd = 683.01969009009","category":"page"},{"location":"units.html#Electromagnetic-CGS-Systems-1","page":"The UnitSystem","title":"Electromagnetic CGS Systems","text":"","category":"section"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Alternatives to the SI unit system are the centimetre-gram-second variants.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 10^7fractilde m_e R_umu_eu tilde M_u quad\ntilde hbar = 10^7hbar quad\ntilde c = 100c quad\ntildemu_0 = 4pi + deltatilde mu_0 quad\ntilde m_e = 1000m_e quad\n(tilde M_u  tilde lambda tilde alpha_L)","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"There are multiple choices of elctromagnetic units for these variants based on electromagnetic units, electrostatic units, Gaussian non-rationalized units, and Lorentz-Heaviside rationalized units.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"GaussSystem","category":"page"},{"location":"units.html#UnitSystems.GaussSystem","page":"The UnitSystem","title":"UnitSystems.GaussSystem","text":"GaussSystem(U::UnitSystem,Œº0,Œª,Œ±L=ùüè,l=0.01,m=0.001,g0=gravity(U))\n\nConstructs new UnitSystem from U rescaled for CGS with electromagnetic options. The first three options are to set the values for vacuumpermeability, rationalization, and lorentz constants. The following two parameters are scaling for length and mass, while the last is an option to change the gravity reference scale.\n\nExamples include EMU, ESU, Gauss, LorentzHeaviside, Thomson, and Kennelly.\n\n\n\n\n\n","category":"function"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Note that CGS is an alias for the Gauss system.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"EMU\nESU\nGauss\nLorentzHeaviside","category":"page"},{"location":"units.html#MeasureSystems.EMU","page":"The UnitSystem","title":"MeasureSystems.EMU","text":"EMU = GaussSystem(Metric,ùüè = 1.0,ùüê*œÑ)\n\nCentimetre-gram-second UnitSystem variant based on EMU (non-rationalized).\n\njulia> boltzmann(EMU) # erg‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2¬π¬π5¬π‚Å∞ = 1.3806489995299999e-16 ¬± 4.3e-26 [g*cm¬≤s‚Åª¬≤K‚Åª¬π] EMU\n\njulia> planckreduced(EMU) # erg‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.0545718176461565e-27 [g*cm¬≤s‚Åª¬π] EMU\n\njulia> lightspeed(EMU) # cm‚ãÖs‚Åª¬π\nùò§*2¬≤5¬≤ = 2.99792458e10 [cm*s‚Åª¬π] EMU\n\njulia> vacuumpermeability(EMU) # statH‚ãÖcm‚Åª¬π\nùüè = 1.0 [s¬≤] EMU\n\njulia> electronmass(EMU) # g\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2‚Å¥5¬≥ = 9.1093837016e-28 ¬± 2.8e-37 [g] EMU\n\njulia> molarmass(EMU) # g‚ãÖmol‚Åª¬π\nùüè = 1.0 [g] EMU\n\njulia> rationalization(EMU)\nœÑ*2 = 12.566370614359172 [ùüô] EMU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.ESU","page":"The UnitSystem","title":"MeasureSystems.ESU","text":"ESU = GaussSystem(Metric,(ùüèùüé*ùò§)^-2,ùüê*œÑ)\n\nCentimetre-gram-second UnitSystem variant based on ESU (non-rationalized).\n\njulia> boltzmann(ESU) # erg‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2¬π¬π5¬π‚Å∞ = 1.3806489995299999e-16 ¬± 4.3e-26 [g*cm¬≤s‚Åª¬≤K‚Åª¬π] ESU\n\njulia> planckreduced(ESU) # erg‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.0545718176461565e-27 [g*cm¬≤s‚Åª¬π] ESU\n\njulia> lightspeed(ESU) # cm‚ãÖs‚Åª¬π\nùò§*2¬≤5¬≤ = 2.99792458e10 [cm*s‚Åª¬π] ESU\n\njulia> vacuumpermeability(ESU) # statH‚ãÖcm‚Åª¬π\nùò§‚Åª¬≤2‚Åª‚Å¥5‚Åª‚Å¥ = 1.1126500560536186e-21 [cm‚Åª¬≤s‚Å¥] ESU\n\njulia> electronmass(ESU) # g\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2‚Å¥5¬≥ = 9.1093837016e-28 ¬± 2.8e-37 [g] ESU\n\njulia> molarmass(ESU) # g‚ãÖmol‚Åª¬π\nùüè = 1.0 [g] ESU\n\njulia> rationalization(ESU)\nœÑ*2 = 12.566370614359172 [ùüô] ESU\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.Gauss","page":"The UnitSystem","title":"MeasureSystems.Gauss","text":"Gauss = GaussSystem(Metric,ùüè,ùüê*œÑ,ùüèùüé^-2/ùò§)\n\nCentimetre-gram-second UnitSystem variant CGS (Gauss-Lorentz, non-rationalized).\n\njulia> boltzmann(Gauss) # erg‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2¬π¬π5¬π‚Å∞ = 1.3806489995299999e-16 ¬± 4.3e-26 [g*cm¬≤s‚Åª¬≤K‚Åª¬π] Gauss\n\njulia> planckreduced(Gauss) # erg‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.0545718176461565e-27 [g*cm¬≤s‚Åª¬π] Gauss\n\njulia> lightspeed(Gauss) # cm‚ãÖs‚Åª¬π\nùò§*2¬≤5¬≤ = 2.99792458e10 [cm*s‚Åª¬π] Gauss\n\njulia> vacuumpermeability(Gauss) # statH‚ãÖcm‚Åª¬π\nùüè = 1.0 [s¬≤] Gauss\n\njulia> electronmass(Gauss) # g\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2‚Å¥5¬≥ = 9.1093837016e-28 ¬± 2.8e-37 [g] Gauss\n\njulia> molarmass(Gauss) # g‚ãÖmol‚Åª¬π\nùüè = 1.0 [g] Gauss\n\njulia> rationalization(Gauss)\nœÑ*2 = 12.566370614359172 [ùüô] Gauss\n\njulia> lorentz(Gauss)\nùò§‚Åª¬π2‚Åª¬≤5‚Åª¬≤ = 3.33564095198152e-11 [cm‚Åª¬πs] Gauss\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.LorentzHeaviside","page":"The UnitSystem","title":"MeasureSystems.LorentzHeaviside","text":"LorentzHeaviside = GaussSystem(Metric,ùüè,ùüè,ùüèùüé^-2/ùò§)\n\nCentimetre-gram-second UnitSystem variant HLU (Heaviside-Lorentz, rationalized).\n\njulia> boltzmann(LorentzHeaviside) # erg‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2¬π¬π5¬π‚Å∞ = 1.3806489995299999e-16 ¬± 4.3e-26 [ML¬≤T‚Åª¬≤Œò‚Åª¬π] LorentzHeaviside\n\njulia> planckreduced(LorentzHeaviside) # erg‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.0545718176461565e-27 [ML¬≤T‚Åª¬π] LorentzHeaviside\n\njulia> lightspeed(LorentzHeaviside) # cm‚ãÖs‚Åª¬π\nùò§*2¬≤5¬≤ = 2.99792458e10 [LT‚Åª¬π] LorentzHeaviside\n\njulia> vacuumpermeability(HLU) # hlH‚ãÖcm‚Åª¬π\nùüè = 1.0 [T¬≤] LorentzHeaviside\n\njulia> electronmass(LorentzHeaviside) # g\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2‚Å¥5¬≥ = 9.1093837016e-28 ¬± 2.8e-37 [M] LorentzHeaviside\n\njulia> molarmass(LorentzHeaviside) # g‚ãÖmol‚Åª¬π\nùüè = 1.0 [M] LorentzHeaviside\n\njulia> rationalization(LorentzHeaviside)\nùüè = 1.0 [ùüô] LorentzHeaviside\n\njulia> lorentz(LorentzHeaviside)\nùò§‚Åª¬π2‚Åª¬≤5‚Åª¬≤ = 3.33564095198152e-11 [L‚Åª¬πT] LorentzHeaviside\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"When Thomson originally derived Maxwell's equations using electromagnetic notation, he arrived at a factor of 1/2 for the lorentz force constant, resulting in a slightly different system.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Thomson\nKennelly","category":"page"},{"location":"units.html#MeasureSystems.Thomson","page":"The UnitSystem","title":"MeasureSystems.Thomson","text":"Thomson = GaussSystem(Metric,ùüè,ùüê*œÑ,ùüè/ùüê)\n\nCentimetre-gram-second UnitSystem variant Thomson (EMU-Lorentz, non-rationalized).\n\njulia> boltzmann(Thomson) # erg‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2¬π¬π5¬π‚Å∞ = 1.3806489995299999e-16 ¬± 4.3e-26 [ML¬≤T‚Åª¬≤Œò‚Åª¬π] Thomson\n\njulia> planckreduced(Thomson) # erg‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.0545718176461565e-27 [ML¬≤T‚Åª¬π] Thomson\n\njulia> lightspeed(Thomson) # cm‚ãÖs‚Åª¬π\nùò§*2¬≤5¬≤ = 2.99792458e10 [LT‚Åª¬π] Thomson\n\njulia> vacuumpermeability(Thomson) # abH‚ãÖcm‚Åª¬π\nùüè = 1.0 [T¬≤] Thomson\n\njulia> electronmass(Thomson) # g\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2‚Å¥5¬≥ = 9.1093837016e-28 ¬± 2.8e-37 [M] Thomson\n\njulia> molarmass(Thomson) # g‚ãÖmol‚Åª¬π\nùüè = 1.0 [M] Thomson\n\njulia> rationalization(Thomson)\nœÑ*2 = 12.566370614359172 [ùüô] Thomson\n\njulia> lorentz(Thomson)\n2‚Åª¬π = 0.5 [ùüô] Thomson\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.Kennelly","page":"The UnitSystem","title":"MeasureSystems.Kennelly","text":"Kennelly = GaussSystem(Metric,ùüèùüé^-7,ùüê*œÑ,ùüè,ùüè,ùüè)\n\nKennelly ? variant UnitSystem of the standard Metric units ???\n\njulia> boltzmann(Kennelly) # J‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 1.3806489995299998e-23 ¬± 4.2999999999999996e-33 [ML¬≤T‚Åª¬≤Œò‚Åª¬π] Kennelly\n\njulia> planckreduced(Kennelly) # J‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π = 1.0545718176461565e-34 [ML¬≤T‚Åª¬π] Kennelly\n\njulia> lightspeed(Kennelly) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [LT‚Åª¬π] Kennelly\n\njulia> vacuumpermeability(Kennelly) # H‚ãÖm‚Åª¬π\n2‚Åª‚Å∑5‚Åª‚Å∑ = 1.0e-7 [T¬≤] Kennelly\n\njulia> electronmass(Kennelly) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 9.1093837016e-31 ¬± 2.8e-40 [M] Kennelly\n\njulia> molarmass(Kennelly) # kg‚ãÖmol‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 [MN‚Åª¬π] Kennelly\n\njulia> rationalization(Kennelly)\nœÑ*2 = 12.566370614359172 [ùüô] Kennelly\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Modified-(Entropy)-Unit-Systems-1","page":"The UnitSystem","title":"Modified (Entropy) Unit Systems","text":"","category":"section"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"EntropySystem\nGravitationalMetric\nGravitationalSI2019","category":"page"},{"location":"units.html#UnitSystems.EntropySystem","page":"The UnitSystem","title":"UnitSystems.EntropySystem","text":"EntropySystem(U::UnitSystem,t,l,m,Œ∏=ùüè)\nEntropySystem(U::UnitSystem,t,l,m,Œ∏,Œº0,Mu=molarmass(U)/m,g0=gravity(U))\n\nConstructs new UnitSystem from U rescaled along time, length, mass, and temperature by the first four parameters. Additional optional parameters allow for customization of the vacuumpermeability, molarmass, and gravity constants.\n\nExamples of this type include GravitationalSI2019, GravitationalMetric, MTS, IAU‚òâ, IAUE, IAUJ, KKH, Hubble, Cosmological, CosmologicalQuantum, EMU2019, ESU2019, Mixed, Nautical, MPH, FFF. However, most other constructors for UnitSystem derivations are based on internally calling EntropySystem, such as AstronomicalSystem, ElectricSystem, GaussSystem, and RankineSystem. This means EntropySystem also constructs the examples listed there.\n\n\n\n\n\n","category":"function"},{"location":"units.html#MeasureSystems.GravitationalMetric","page":"The UnitSystem","title":"MeasureSystems.GravitationalMetric","text":"GravitationalMetric = EntropySystem(Metric,ùüè,ùüè,g‚ÇÄ)\n\nSysteme International d'Unites (the SI units) based on hyl and kilopond units.\n\njulia> boltzmann(GravitationalMetric) # J‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πg‚ÇÄ‚Åª¬π2‚Å¥5¬≥ = 1.40787016925e-24 ¬± 4.3e-34 [kgf*m*K‚Åª¬π] GravitationalMetric\n\njulia> planckreduced(GravitationalMetric) # J‚ãÖs‚ãÖrad‚Åª¬π\nùò©*g‚ÇÄ‚Åª¬πœÑ‚Åª¬π = 1.0753639802033891e-35 [kgf*m*s] GravitationalMetric\n\njulia> lightspeed(GravitationalMetric) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] GravitationalMetric\n\njulia> vacuumpermeability(GravitationalMetric) # H‚ãÖm‚Åª¬π\ng‚ÇÄ‚Åª¬πœÑ*2‚Åª‚Å∂5‚Åª‚Å∑ = 1.2814131853751459e-7 [kgf*s¬≤C‚Åª¬≤] GravitationalMetric\n\njulia> electronmass(GravitationalMetric) # hyl\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤g‚ÇÄ‚Åª¬π2 = 9.288986250700001e-32 ¬± 2.8e-41 [kgf*m‚Åª¬πs¬≤] GravitationalMetric\n\njulia> molarmass(GravitationalMetric) # hyl‚ãÖmol‚Åª¬π\ng‚ÇÄ‚Åª¬π2‚Åª¬≥5‚Åª¬≥ = 0.00010197162129779284 [kgf*m‚Åª¬πs¬≤mol‚Åª¬π] GravitationalMetric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.GravitationalSI2019","page":"The UnitSystem","title":"MeasureSystems.GravitationalSI2019","text":"GraviationalSI2019 = EntropySystem(SI2019,ùüè,ùüè,g‚ÇÄ)\n\nSysteme International d'Unites (the SI units) based on hyl and kilopond units.\n\njulia> boltzmann(GravitationalSI2019) # J‚ãÖK‚Åª¬π\nkB*g‚ÇÄ‚Åª¬π = 1.407870169731764e-24 [kgf*m*K‚Åª¬π] GravitationalSI2019\n\njulia> planckreduced(GravitationalSI2019) # J‚ãÖs‚ãÖrad‚Åª¬π\nùò©*g‚ÇÄ‚Åª¬πœÑ‚Åª¬π = 1.0753639802033891e-35 [kgf*m*s] GravitationalSI2019\n\njulia> lightspeed(GravitationalSI2019) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] GravitationalSI2019\n\njulia> vacuumpermeability(SI2019Engineering) # H‚ãÖm‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*g‚ÇÄ‚Åª¬π2 = 1.28141318607e-7 ¬± 2.0e-17 [kgf*s¬≤C‚Åª¬≤] GravitationalSI2019\n\njulia> electronmass(SI2019Engineering) # hyl\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤g‚ÇÄ‚Åª¬π2 = 9.288986250700001e-32 ¬± 2.8e-41 [kgf*m‚Åª¬πs¬≤] GravitationalSI2019\n\njulia> molarmass(SI2019) # hyl‚ãÖmol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2 = 0.00099999999966 ¬± 3.1e-13 [kg*mol‚Åª¬π] SI2019Engineering\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Newer modern and rationalized variants of electromagnetic and electrostatic units are also made available.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"EMU2019\nESU2019\nElectricSystem\nInternational\nInternationalMean","category":"page"},{"location":"units.html#MeasureSystems.EMU2019","page":"The UnitSystem","title":"MeasureSystems.EMU2019","text":"EMU2019 = EntropySystem(SI2019,ùüè,0.01,0.001,ùüè,1e7*Œº‚ÇÄ)\n\nCentimetre-gram-second UnitSystem variant of tuned SI2019 based on EMU (rationalized).\n\njulia> boltzmann(EMU2019) # erg‚ãÖK‚Åª¬π\nkB*2‚Å∑5‚Å∑ = 1.380649e-16 [ML¬≤T‚Åª¬≤Œò‚Åª¬π] EMU2019\n\njulia> planckreduced(EMU2019) # erg‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.0545718176461565e-27 [ML¬≤T‚Åª¬π] EMU2019\n\njulia> lightspeed(EMU2019) # cm‚ãÖs‚Åª¬π\nùò§*2¬≤5¬≤ = 2.99792458e10 [LT‚Åª¬π] EMU2019\n\njulia> vacuumpermeability(EMU2019) # statH‚ãÖcm‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*2‚Å∏5‚Å∑ = 12.5663706212 ¬± 1.9e-9 [MLQ‚Åª¬≤] EMU2019\n\njulia> electronmass(EMU2019) # g\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2‚Å¥5¬≥ = 9.1093837016e-28 ¬± 2.8e-37 [M] EMU2019\n\njulia> molarmass(EMU2019) # g‚ãÖmol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 [MN‚Åª¬π] EMU2019\n\njulia> rationalization(EMU2019)\nùüè = 1.0 [ùüô] EMU2019\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.ESU2019","page":"The UnitSystem","title":"MeasureSystems.ESU2019","text":"ESU2019 = EntropySystem(SI2019,ùüè,0.01,0.001,ùüè,1e3*Œº‚ÇÄ/ùò§^2)\n\nCentimetre-gram-second UnitSystem variant of tuned SI2019 based on ESU (rationalized).\n\njulia> boltzmann(ESU2019) # erg‚ãÖK‚Åª¬π\nkB*2‚Å∑5‚Å∑ = 1.380649e-16 [ML¬≤T‚Åª¬≤Œò‚Åª¬π] ESU2019\n\njulia> planckreduced(ESU2019) # erg‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.0545718176461565e-27 [ML¬≤T‚Åª¬π] ESU2019\n\njulia> lightspeed(ESU2019) # cm‚ãÖs‚Åª¬π\nùò§*2¬≤5¬≤ = 2.99792458e10 [LT‚Åª¬π] ESU2019\n\njulia> vacuumpermeability(ESU2019) # statH‚ãÖcm‚Åª¬π\nùò©*ùò§‚Åª¬≥ùò¶‚Åª¬≤Œ±*2‚Å¥5¬≥ = 1.39819729761e-20 ¬± 2.1e-30 [MLQ‚Åª¬≤] ESU2019\n\njulia> electronmass(ESU2019) # g\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2‚Å¥5¬≥ = 9.1093837016e-28 ¬± 2.8e-37 [M] ESU2019\n\njulia> molarmass(ESU2019) # g‚ãÖmol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 [MN‚Åª¬π] ESU2019\n\njulia> rationalization(ESU2019)\nùüè = 1.0 [ùüô] ESU2019\n\n\n\n\n\n","category":"constant"},{"location":"units.html#UnitSystems.ElectricSystem","page":"The UnitSystem","title":"UnitSystems.ElectricSystem","text":"ElectricSystem(U::UnitSystem,Œ©,V) = EntropySystem(U,ùüè,ùüè,V^2/Œ©,ùüè,vacuumpermeability(U)/Œ©)\n\nConstructs new UnitSystem from U with mass rescaled by electricpotential and resistance. In the International system, Œ©·µ¢‚Çú and V·µ¢‚Çú are used as definitions from the more recent United States results, while in InternationalMean an earlier estimate based on other nations was used.\n\n\n\n\n\n","category":"function"},{"location":"units.html#MeasureSystems.International","page":"The UnitSystem","title":"MeasureSystems.International","text":"International = ElectricSystem(Metric,Œ©·µ¢‚Çú,V·µ¢‚Çú)\n\nInternational UnitSystem with United States measurements of Œ©·µ¢‚Çú and V·µ¢‚Çú.\n\njulia> boltzmann(International) # J‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πŒ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤2‚Å¥5¬≥ = 1.3804211924699998e-23 ¬± 4.2e-33 [kg*m¬≤s‚Åª¬≤K‚Åª¬π] International\n\njulia> planckreduced(International) # J‚ãÖs‚ãÖrad‚Åª¬π\nùò©*Œ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤œÑ‚Åª¬π = 1.0543978133151816e-34 [kg*m¬≤s‚Åª¬π] International\n\njulia> lightspeed(International) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] International\n\njulia> vacuumpermeability(International) # H‚ãÖm‚Åª¬π\nŒ©·µ¢‚Çú‚Åª¬πœÑ*2‚Åª‚Å∂5‚Åª‚Å∑ = 1.2560153338456637e-6 [kg*m*C‚Åª¬≤] International\n\njulia> electronmass(International) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤Œ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤2 = 9.1078806534e-31 ¬± 2.8e-40 [kg] International\n\njulia> molarmass(International) # kg‚ãÖmol‚Åª¬π\nŒ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤2‚Åª¬≥5‚Åª¬≥ = 0.0009998350000179567 [kg*mol‚Åª¬π] International\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.InternationalMean","page":"The UnitSystem","title":"MeasureSystems.InternationalMean","text":"InternationalMean = ElectricSystem(Metric,1.00049,1.00034)\n\nInternational UnitSystem with mean measurements of Œ©·µ¢‚Çú and V·µ¢‚Çú.\n\njulia> boltzmann(InternationalMean) # J‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥/1.0001900224889804 = 1.38038669501e-23 ¬± 4.2e-33 [kg*m¬≤s‚Åª¬≤K‚Åª¬π] InternationalMean\n\njulia> planckreduced(InternationalMean) # J‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π/1.0001900224889804 = 1.0543714633563797e-34 [kg*m¬≤s‚Åª¬π] InternationalMean\n\njulia> lightspeed(InternationalMean) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] InternationalMean\n\njulia> vacuumpermeability(InternationalMean) # H‚ãÖm‚Åª¬π\nœÑ*2‚Åª‚Å∂5‚Åª‚Å∑/1.00049 = 1.2560216108466022e-6 [kg*m*C‚Åª¬≤] InternationalMean\n\njulia> electronmass(InternationalMean) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2/1.0001900224889804 = 9.1076530427e-31 ¬± 2.8e-40 [kg] InternationalMean\n\njulia> molarmass(InternationalMean) # kg‚ãÖmol‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥/1.0001900224889804 = 0.0009998100136127059 [kg*mol‚Åª¬π] InternationalMean\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Historically, the josephson and klitzing constants have been used to define Conventional and CODATA variants.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = frac8 tilde R_infty R_ucalpha^2mu_eu tilde M_u tilde K_J^2 tilde R_K quad\ntilde hbar = frac2pitilde K_J^2 tilde R_K quad\ntilde c = c quad\ntildemu_0 = frac2tilde R_Kalphac quad\ntilde m_e = frac8tilde R_inftytilde K_J^2tilde R_Kcalpha^2 quad\n(tilde M_u = frac11000)","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"ConventionalSystem","category":"page"},{"location":"units.html#MeasureSystems.ConventionalSystem","page":"The UnitSystem","title":"MeasureSystems.ConventionalSystem","text":"ConventionalSystem(RK,KJ,Ru=R·µ§,g0=ùüè) = MetricSystem(0.001,ùüê*RK/ùò§*Œ±,Ru,g0,ùüí/RK/KJ^2)\n\nConstructs new UnitSystem from von klitzing constant and josephson constant, with an optional specification of universal gas constant and gravity reference constant.\n\nExamples include Conventional (based on 1990) and CODATA (based on 2014).\n\n\n\n\n\n","category":"function"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> josephson(Conventional) # KJ1990\nKJ90 = 4.835979e14 [M‚Åª¬πL‚Åª¬≤TQ] Conventional\n\njulia> klitzing(Conventional) # RK1990\nRK90 = 25812.807 [ML¬≤T‚Åª¬πQ‚Åª¬≤] Conventional\n\njulia> josephson(CODATA) # KJ2014\nKJ = 4.835978525e14 ¬± 3.0e6 [M‚Åª¬πL‚Åª¬≤TQ] CODATA\n\njulia> klitzing(CODATA) # RK2014\nRK = 25812.8074555 ¬± 5.9e-6 [ML¬≤T‚Åª¬πQ‚Åª¬≤] CODATA","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Conventional\nCODATA","category":"page"},{"location":"units.html#MeasureSystems.Conventional","page":"The UnitSystem","title":"MeasureSystems.Conventional","text":"Conventional = ConventionalSystem(RK1990,KJ2014)\n\nConventional electronic UnitSystem with 1990 tuned josephson and klitzing constants.\n\njulia> boltzmann(Conventional) # J‚ãÖK‚Åª¬π\nkB*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πRK90‚Åª¬πKJ90‚Åª¬≤2‚Å∂5¬≥ = 1.3806487295599998e-23 ¬± 4.2999999999999996e-33 [kg*m¬≤s‚Åª¬≤K‚Åª¬π] Conventional\n\njulia> planckreduced(Conventional) # J‚ãÖs‚ãÖrad‚Åª¬π\nRK90‚Åª¬πKJ90‚Åª¬≤œÑ‚Åª¬π2¬≤ = 1.054571611438857e-34 [kg*m¬≤s‚Åª¬π] Conventional\n\njulia> lightspeed(Conventional) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] Conventional\n\njulia> vacuumpermeability(Conventional) # H‚ãÖm‚Åª¬π\nùò§‚Åª¬πŒ±*RK90*2 = 1.25663703976e-6 ¬± 1.9e-16 [kg*m*C‚Åª¬≤] Conventional\n\njulia> electronmass(Conventional) # kg\nùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤RK90‚Åª¬πKJ90‚Åª¬≤2¬≥ = 9.1093819203e-31 ¬± 2.8e-40 [kg] Conventional\n\njulia> molarmass(Conventional) # kg‚ãÖmol‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 [kg*mol‚Åª¬π] Conventional\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.CODATA","page":"The UnitSystem","title":"MeasureSystems.CODATA","text":"CODATA = ConventionalSystem(RK2014,KJ2014,R·µ§2014)\n\nMetric UnitSystem based on Committee on Data of the International Science Council.\n\njulia> boltzmann(CODATA) # J‚ãÖK‚Åª¬π\nùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πRK‚Åª¬πKJ‚Åª¬≤R·µ§2014*2‚Å∂5¬≥ = 1.38064851e-23 ¬± 8.0e-30 [kg*m¬≤s‚Åª¬≤K‚Åª¬π] CODATA\n\njulia> planckreduced(CODATA) # J‚ãÖs‚ãÖrad‚Åª¬π\nRK‚Åª¬πKJ‚Åª¬≤œÑ‚Åª¬π2¬≤ = 1.0545718e-34 ¬± 1.3e-42 [kg*m¬≤s‚Åª¬π] CODATA\n\njulia> lightspeed(CODATA) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] CODATA\n\njulia> vacuumpermeability(CODATA) # H‚ãÖm‚Åª¬π\nùò§‚Åª¬πŒ±*RK*2 = 1.25663706194e-6 ¬± 3.5e-16 [kg*m*C‚Åª¬≤] CODATA\n\njulia> electronmass(CODATA) # kg\nùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤RK‚Åª¬πKJ‚Åª¬≤2¬≥ = 9.10938355e-31 ¬± 1.0999999999999999e-38 [kg] CODATA\n\njulia> molarmass(CODATA) # kg‚ãÖmol‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 [kg*mol‚Åª¬π] CODATA\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"In the Soviet Union, a metre-tonne-second system was also used briefly.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 10^3fractilde m_e R_umu_eu tilde M_u quad\ntilde hbar = 1000hbar quad\ntilde c = c quad\ntildemu_0 = frac4pi1000 quad\ntilde m_e = fracm_e1000 quad\n(tilde M_u = 10^-6)","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"MTS\nKKH\nMPH\nNautical","category":"page"},{"location":"units.html#MeasureSystems.MTS","page":"The UnitSystem","title":"MeasureSystems.MTS","text":"MTS = EntropySystem(SI2019,ùüè,ùüè,ùüèùüé^3)\n\nMetre-tonne-second UnitSystem variant of Metric system.\n\njulia> boltzmann(MTS) # kJ‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2 = 1.38064899953e-26 ¬± 4.3e-36 [t*m¬≤s‚Åª¬≤K‚Åª¬π] MTS\n\njulia> planckreduced(MTS) # kJ‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π2‚Åª¬≥5‚Åª¬≥ = 1.0545718176461566e-37 [t*m¬≤s‚Åª¬π] MTS\n\njulia> lightspeed(MTS) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] MTS\n\njulia> vacuumpermeability(MTS) # kH‚ãÖm‚Åª¬π\nœÑ*2‚Åª‚Åπ5‚Åª¬π‚Å∞ = 1.2566370614359174e-9 [t*m*C‚Åª¬≤] MTS\n\njulia> electronmass(MTS) # t\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2‚Åª¬≤5‚Åª¬≥ = 9.1093837016e-34 ¬± 2.8e-43 [t] MTS\n\njulia> molarmass(MTS) # t‚ãÖmol‚Åª¬π\n2‚Åª‚Å∂5‚Åª‚Å∂ = 1.0e-6 [t*mol‚Åª¬π] MTS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.KKH","page":"The UnitSystem","title":"MeasureSystems.KKH","text":"KKH = EntropySystem(Metric,HOUR,ùüèùüé^3,ùüè)\n\nKilometer-kilogram-hour UnitSystem variant of Metric system.\n\njulia> boltzmann(KKH)\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å∂3‚Å¥5 = 1.7893211033800002e-22 ¬± 5.5e-32 [kg*km¬≤h‚Åª¬≤K‚Åª¬π] KKH\n\njulia> planckreduced(KKH)\nùò©*œÑ‚Åª¬π2‚Åª¬≤3¬≤5‚Åª‚Å¥ = 3.7964585435261634e-37 [kg*km¬≤h‚Åª¬π] KKH\n\njulia> lightspeed(KKH) # km‚ãÖhr‚Åª¬π\nùò§*2*3¬≤5‚Åª¬π = 1.0792528488e9 [km*h‚Åª¬π] KKH\n\njulia> vacuumpermeability(KKH)\nœÑ*2‚Å¥3‚Å∏5‚Åª‚Åµ = 211.06677145807492 [kg*km*C‚Åª¬≤] KKH\n\njulia> electronmass(KKH) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 9.1093837016e-31 ¬± 2.8e-40 [kg] KKH\n\njulia> molarmass(KKH) # kg‚ãÖmol‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 [kg*mol‚Åª¬π] KKH\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.MPH","page":"The UnitSystem","title":"MeasureSystems.MPH","text":"MPH = EntropySystem(English,HOUR,ùüê^5*ùüë*ùüì*ùüèùüè,ùüè)\n\nMiles, pound, hour specification based on English Engineering UnitSystem.\n\njulia> boltzmann(MPH) # lbf‚ãÖmi¬≤‚ãÖhr‚Åª¬≤‚ãÖF‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πft‚Åª¬≤lb‚Åª¬π2¬≤5‚Å∂11‚Åª¬≤ = 8.4615956484e-23 ¬± 2.6000000000000003e-32 [lbm*mi¬≤h‚Åª¬≤¬∞R‚Åª¬π] MPH\n\njulia> planckreduced(MPH) # lbf‚ãÖmi¬≤‚ãÖhr‚Åª¬π‚ãÖrad‚Åª¬π\nùò©*ft‚Åª¬≤lb‚Åª¬πœÑ‚Åª¬π2‚Åª‚Å∂11‚Åª¬≤ = 3.2315817800735083e-37 [lbm*mi¬≤h‚Åª¬π] MPH\n\njulia> lightspeed(MPH) # mi‚ãÖhr‚Åª¬π\nùò§*ft‚Åª¬π2‚Åª¬π3*5*11‚Åª¬π = 6.706166293843951e8 [mi*h‚Åª¬π] MPH\n\njulia> vacuumpermeability(MPH) # lbm‚ãÖmi¬≤‚ãÖInf‚Åª¬≤\nœÑ*2‚Å∑3‚Å∂5‚Å∂11‚Åª¬≤ = 7.570978659394906e7 [lbm*mi*?‚Åª¬≤] MPH\n\njulia> electronmass(MPH) # lbm\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤lb‚Åª¬π2 = 2.00827533796e-30 ¬± 6.2e-40 [lbm] MPH\n\njulia> molarmass(MPH) # lbm‚ãÖlb-mol‚Åª¬π\nùüè = 1.0 [lbm*lb-mol‚Åª¬π] MPH\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.Nautical","page":"The UnitSystem","title":"MeasureSystems.Nautical","text":"Nautical = EntropySystem(English,HOUR,ùüê^6*ùüì*ùüèùüó,ùüè)\n\nNautical miles, pound, hour specification based on English Engineering UnitSystem.\n\njulia> boltzmann(Nautical) # lbf‚ãÖnm¬≤‚ãÖhr‚Åª¬≤‚ãÖF‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πft‚Åª¬≤lb‚Åª¬π3¬≤5‚Å∂19‚Åª¬≤ = 6.381355721e-23 ¬± 2.0e-32 [lbm*nm¬≤h‚Åª¬≤¬∞R‚Åª¬π] Nautical\n\njulia> planckreduced(Nautical) # lbf‚ãÖnm¬≤‚ãÖhr‚Åª¬π‚ãÖrad‚Åª¬π\nùò©*ft‚Åª¬≤lb‚Åª¬πœÑ‚Åª¬π2‚Åª‚Å∏3¬≤19‚Åª¬≤ = 2.4371139601800905e-37 [lbm*nm¬≤h‚Åª¬π] Nautical\n\njulia> lightspeed(Nautical) # nm‚ãÖhr‚Åª¬π\nùò§*ft‚Åª¬π2‚Åª¬≤3¬≤5*19‚Åª¬π = 5.823775992022378e8 [nm*h‚Åª¬π] Nautical\n\njulia> vacuumpermeability(Nautical) # lbm‚ãÖnm¬≤‚ãÖInf‚Åª¬≤\nœÑ*2‚Åµ3‚Å∏5‚Å∂19‚Åª¬≤ = 5.709692354626768e7 [lbm*nm*?‚Åª¬≤] Nautical\n\njulia> electronmass(Nuatical) # lbm\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤lb‚Åª¬π2 = 2.00827533796e-30 ¬± 6.2e-40 [lbm] Nautical\n\njulia> molarmass(Nautical) # lbm‚ãÖlb-mol‚Åª¬π\nùüè = 1.0 [lbm*lb-mol‚Åª¬π] Nautical\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Foot-Pound-Second-Rankine-1","page":"The UnitSystem","title":"Foot-Pound-Second-Rankine","text":"","category":"section"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"In Britain and the United States an English system of engineering units was commonly used.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = fracm_e R_umu_eu M_utextslugtextft^2 quad\ntilde hbar = frachbartextslugcdot textft^2 quad\ntilde c = fracctextft quad\ntildemu_0 = 4pi quad\ntilde m_e = fracm_etextslug quad\n(tilde M_u = 1)","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"RankineSystem\nMeasureSystems.British\nBritish2019\nSurvey\nSurvey2019\nMeasureSystems.English\nMeasureSystems.English2019\nFPS\nFPS2019","category":"page"},{"location":"units.html#MeasureSystems.RankineSystem","page":"The UnitSystem","title":"MeasureSystems.RankineSystem","text":"RankineSystem(U::UnitSystem,l,m,g0=ùüè) = EntropySystem(U,ùüè,l,m,¬∞R,ùüê*œÑ,1000molarmass(U),g0)\n\nConstructs new UnitSystem from U rescaled along length and mass with optional gravity reference constant used to define technical and engineering units.\n\nExamples: British, British2019, Survey, Survey2019, English, English2019, FPS, FPS2019.\n\n\n\n\n\n","category":"function"},{"location":"units.html#MeasureSystems.British","page":"The UnitSystem","title":"MeasureSystems.British","text":"British = RankineSystem(Metric,ft,slug)\n\nBritish Gravitational UnitSystem historically used by Britain and United States.\n\njulia> boltzmann(British) # ft‚ãÖlb‚ãÖ¬∞R‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πg‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π2‚Å¥3‚Åª¬≤5‚Å¥ = 5.6573024638e-24 ¬± 1.7e-33 [lb*ft*¬∞R‚Åª¬π] British\n\njulia> planckreduced(British) # ft‚ãÖlb‚ãÖs‚ãÖrad‚Åª¬π\nùò©*g‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬πœÑ‚Åª¬π = 7.778122563903315e-35 [lb*ft*s] British\n\njulia> lightspeed(British) # ft‚ãÖs‚Åª¬π\nùò§*ft‚Åª¬π = 9.835710564304461e8 [ft*s‚Åª¬π] British\n\njulia> vacuumpermeability(British) # slug‚ãÖft¬≤‚ãÖ?‚Åª¬≤\nœÑ*2 = 12.566370614359172 [lb*s¬≤?‚Åª¬≤] British\n\njulia> electronmass(British) # slugs\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤g‚ÇÄ‚Åª¬πft*lb‚Åª¬π2 = 6.241910571000001e-32 ¬± 1.9000000000000002e-41 [lb*ft‚Åª¬πs¬≤] British\n\njulia> molarmass(British) # slug‚ãÖslug-mol‚Åª¬π\nùüè = 1.0 [lb*ft‚Åª¬πs¬≤slug-mol‚Åª¬π] British\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.British2019","page":"The UnitSystem","title":"MeasureSystems.British2019","text":"British2019 = RankineSystem(SI2019,ft,slug)\n\nBritish Gravitational UnitSystem historically used by Britain and United States.\n\njulia> boltzmann(British2019) # ft‚ãÖlb‚ãÖ¬∞R‚Åª¬π\nkB*g‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π3‚Åª¬≤5 = 5.657302465763929e-24 [lb*ft*¬∞R‚Åª¬π] British2019\n\njulia> planckreduced(British2019) # ft‚ãÖlb‚ãÖs‚ãÖrad‚Åª¬π\nùò©*g‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬πœÑ‚Åª¬π = 7.778122563903315e-35 [lb*ft*s] British2019\n\njulia> lightspeed(British2019) # ft‚ãÖs‚Åª¬π\nùò§*ft‚Åª¬π = 9.835710564304461e8 [ft*s‚Åª¬π] British2019\n\njulia> vacuumpermeability(British2019) # slug‚ãÖft¬≤‚ãÖ?‚Åª¬≤\nœÑ*2 = 12.566370614359172 [lb*s¬≤?‚Åª¬≤] British2019\n\njulia> electronmass(British2019) # slugs\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤g‚ÇÄ‚Åª¬πft*lb‚Åª¬π2 = 6.241910571000001e-32 ¬± 1.9000000000000002e-41 [lb*ft‚Åª¬πs¬≤] British2019\n\njulia> molarmass(British2019) # slug‚ãÖslug-mol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 [lb*ft‚Åª¬πs¬≤slug-mol‚Åª¬π] British2019\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.Survey","page":"The UnitSystem","title":"MeasureSystems.Survey","text":"Survey = RankineSystem(Metric,ftUS,lb,g‚ÇÄ/ftUS)\n\nEnglish Engineering UnitSystem based on the geophysical US survey foot (1200/3937).\n\njulia> boltzmann(Survey) # ftUS‚ãÖlbf‚ãÖ¬∞R‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πg‚ÇÄ‚Åª¬πftUS‚Åª¬πlb‚Åª¬π2‚Å¥3‚Åª¬≤5‚Å¥ = 5.6572911492e-24 ¬± 1.7e-33 [lbf*ft*¬∞R‚Åª¬π] Survey\n\njulia> planckreduced(Survey) # ftUS‚ãÖlbf‚ãÖs‚ãÖrad‚Åª¬π\nùò©*g‚ÇÄ‚Åª¬πftUS‚Åª¬πlb‚Åª¬πœÑ‚Åª¬π = 7.77810700765819e-35 [lbf*ft*s*rad‚Åª¬π] Survey\n\njulia> lightspeed(Survey) # ftUS‚ãÖs‚Åª¬π\nùò§*ftUS‚Åª¬π = 9.835690892883334e8 [ft*s‚Åª¬π] Survey\n\njulia> vacuumpermeability(Survey) # lbm‚ãÖftUS¬≤‚ãÖ?‚Åª¬≤\nœÑ*2 = 12.566370614359172 [lbf*s¬≤?‚Åª¬≤rad‚Åª¬≤] Survey\n\njulia> electronmass(Survey) # lbm\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤lb‚Åª¬π2 = 2.00827533796e-30 ¬± 6.2e-40 [lbm] Survey\n\njulia> molarmass(Survey) # lbm‚ãÖlb-mol‚Åª¬π\nùüè = 1.0 [lbm*lb-mol‚Åª¬π] Survey\n\njulia> gravity(Survey) # lbm‚ãÖftUS‚ãÖlbf‚Åª¬π‚ãÖs‚Åª¬≤\ng‚ÇÄ*ftUS‚Åª¬π = 32.17398420833334 [lbf‚Åª¬πlbm*ft*s‚Åª¬≤] Survey\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.Survey2019","page":"The UnitSystem","title":"MeasureSystems.Survey2019","text":"Survey2019 = RankineSystem(SI2019,ftUS,lb,g‚ÇÄ/ftUS)\n\nEnglish Engineering UnitSystem based on the geophysical US survey foot (1200/3937).\n\njulia> boltzmann(Survey2019) # ftUS‚ãÖlbf‚ãÖ¬∞R‚Åª¬π\nkB*g‚ÇÄ‚Åª¬πftUS‚Åª¬πlb‚Åª¬π3‚Åª¬≤5 = 5.657291151158998e-24 [lbf*ft*¬∞R‚Åª¬π] Survey2019\n\njulia> planckreduced(Survey2019) # ftUS‚ãÖlbf‚ãÖs‚ãÖrad‚Åª¬π\nùò©*g‚ÇÄ‚Åª¬πftUS‚Åª¬πlb‚Åª¬πœÑ‚Åª¬π = 7.77810700765819e-35 [lbf*ft*s*rad‚Åª¬π] Survey2019\n\njulia> lightspeed(Survey2019) # ftUS‚ãÖs‚Åª¬π\nùò§*ftUS‚Åª¬π = 9.835690892883334e8 [ft*s‚Åª¬π] Survey2019\n\njulia> vacuumpermeability(Survey2019) # lbm‚ãÖftUS¬≤‚ãÖ?‚Åª¬≤\nœÑ*2 = 12.566370614359172 [lbf*s¬≤?‚Åª¬≤rad‚Åª¬≤] Survey2019\n\njulia> electronmass(Survey2019) # lbm\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤lb‚Åª¬π2 = 2.00827533796e-30 ¬± 6.2e-40 [lbm] Survey2019\n\njulia> molarmass(Survey2019) # lbm‚ãÖlb-mol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 [lbm*lb-mol‚Åª¬π] Survey2019\n\njulia> gravity(Survey2019) # lbm‚ãÖftUS‚ãÖlbf‚Åª¬π‚ãÖs‚Åª¬≤\ng‚ÇÄ*ftUS‚Åª¬π = 32.17398420833334 [lbf‚Åª¬πlbm*ft*s‚Åª¬≤] Survey2019\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.English","page":"The UnitSystem","title":"MeasureSystems.English","text":"English = RankineSystem(Metric,ft,lb,g‚ÇÄ/ft)\n\nEnglish Engineering UnitSystem historically used in the United States of America.\n\njulia> boltzmann(English) # ft‚ãÖlbf‚ãÖ¬∞R‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πg‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π2‚Å¥3‚Åª¬≤5‚Å¥ = 5.6573024638e-24 ¬± 1.7e-33 [lbf*ft*¬∞R‚Åª¬π] English\n\njulia> planckreduced(English) # ft‚ãÖlbf‚ãÖs‚ãÖrad‚Åª¬π\nùò©*g‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬πœÑ‚Åª¬π = 7.778122563903315e-35 [lbf*ft*s*rad‚Åª¬π] English\n\njulia> lightspeed(English) # ft‚ãÖs‚Åª¬π\nùò§*ft‚Åª¬π = 9.835710564304461e8 [ft*s‚Åª¬π] English\n\njulia> vacuumpermeability(English) # lbm‚ãÖft¬≤‚ãÖ?‚Åª¬≤\nœÑ*2 = 12.566370614359172 [lbf*s¬≤?‚Åª¬≤rad‚Åª¬≤] English\n\njulia> electronmass(English) # lbm\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤lb‚Åª¬π2 = 2.00827533796e-30 ¬± 6.2e-40 [lbm] English\n\njulia> molarmass(English) # lbm‚ãÖlb-mol‚Åª¬π\nùüè = 1.0 [lbm*lb-mol‚Åª¬π] English\n\njulia> gravity(English) # lbm‚ãÖft‚ãÖlbf‚Åª¬π‚ãÖs‚Åª¬≤\ng‚ÇÄ*ft‚Åª¬π = 32.17404855643044 [lbf‚Åª¬πlbm*ft*s‚Åª¬≤] English\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.English2019","page":"The UnitSystem","title":"MeasureSystems.English2019","text":"English2019 = RankineSystem(SI2019,ft,lb,g‚ÇÄ/ft)\n\nEnglish Engineering UnitSystem historically used in the United States of America.\n\njulia> boltzmann(English2019) # ftUS‚ãÖlbf‚ãÖ¬∞R‚Åª¬π\nkB*g‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π3‚Åª¬≤5 = 5.657302465763929e-24 [lbf*ft*¬∞R‚Åª¬π] English2019\n\njulia> planckreduced(English2019) # ft‚ãÖlbf‚ãÖs‚ãÖrad‚Åª¬π\nùò©*g‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬πœÑ‚Åª¬π = 7.778122563903315e-35 [lbf*ft*s*rad‚Åª¬π] English2019\n\njulia> lightspeed(English2019) # ft‚ãÖs‚Åª¬π\nùò§*ft‚Åª¬π = 9.835710564304461e8 [ft*s‚Åª¬π] English2019\n\njulia> vacuumpermeability(English2019) # lbm‚ãÖft¬≤‚ãÖ?‚Åª¬≤\nœÑ*2 = 12.566370614359172 [lbf*s¬≤?‚Åª¬≤rad‚Åª¬≤] English2019\n\njulia> electronmass(English2019) # lbm\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤lb‚Åª¬π2 = 2.00827533796e-30 ¬± 6.2e-40 [lbm] English2019\n\njulia> molarmass(English2019) # lbm‚ãÖlb-mol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 [lbm*lb-mol‚Åª¬π] English2019\n\njulia> gravity(English2019) # lbm‚ãÖft‚ãÖlbf‚Åª¬π‚ãÖs‚Åª¬≤\ng‚ÇÄ*ft‚Åª¬π = 32.17404855643044 [lbf‚Åª¬πlbm*ft*s‚Åª¬≤] English2019\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.FPS","page":"The UnitSystem","title":"MeasureSystems.FPS","text":"FPS = RankineSystem(Metric,ft,lb)\n\nAbsolute English UnitSystem based on the foot, pound, second, and poundal.\n\njulia> boltzmann(FPS) # ft‚ãÖpdl‚ãÖ¬∞R‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πft‚Åª¬≤lb‚Åª¬π2‚Å¥3‚Åª¬≤5‚Å¥ = 1.8201832416900001e-22 ¬± 5.6e-32 [lb*ft¬≤s‚Åª¬≤¬∞R‚Åª¬π] FPS\n\njulia> planckreduced(FPS) # ft‚ãÖpdl‚ãÖs‚ãÖrad‚Åª¬π\nùò©*ft‚Åª¬≤lb‚Åª¬πœÑ‚Åª¬π = 2.5025369304889247e-33 [lb*ft¬≤s‚Åª¬π] FPS\n\njulia> lightspeed(FPS) # ft‚ãÖs‚Åª¬π\nùò§*ft‚Åª¬π = 9.835710564304461e8 [ft*s‚Åª¬π] FPS\n\njulia> vacuumpermeability(FPS) # lb‚ãÖft¬≤‚ãÖ?‚Åª¬≤\nœÑ*2 = 12.566370614359172 [lb*ft*?‚Åª¬≤] FPS\n\njulia> electronmass(FPS) # lb\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤lb‚Åª¬π2 = 2.00827533796e-30 ¬± 6.2e-40 [lb] FPS\n\njulia> molarmass(FPS) # lb‚ãÖlb-mol‚Åª¬π\nùüè = 1.0 [lb*lb-mol‚Åª¬π] FPS\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.FPS2019","page":"The UnitSystem","title":"MeasureSystems.FPS2019","text":"FPS2019 = RankineSystem(SI2019,ft,lb)\n\nAbsolute English UnitSystem based on the foot, pound, second, and poundal.\n\njulia> boltzmann(FPS2019) # ft‚ãÖpdl‚ãÖ¬∞R‚Åª¬π\nkB*ft‚Åª¬≤lb‚Åª¬π3‚Åª¬≤5 = 1.820183242319023e-22 [lb*ft¬≤s‚Åª¬≤¬∞R‚Åª¬π] FPS2019\n\njulia> planckreduced(FPS2019) # ft‚ãÖpdl‚ãÖs‚ãÖrad‚Åª¬π\nùò©*ft‚Åª¬≤lb‚Åª¬πœÑ‚Åª¬π = 2.5025369304889247e-33 [lb*ft¬≤s‚Åª¬π] FPS2019\n\njulia> lightspeed(FPS2019) # ft‚ãÖs‚Åª¬π\nùò§*ft‚Åª¬π = 9.835710564304461e8 [ft*s‚Åª¬π] FPS2019\n\njulia> vacuumpermeability(FPS2019) # lb‚ãÖft¬≤‚ãÖ?‚Åª¬≤\nœÑ*2 = 12.566370614359172 [lb*ft*?‚Åª¬≤] FPS2019\n\njulia> electronmass(FPS2019) # lb\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤lb‚Åª¬π2 = 2.00827533796e-30 ¬± 6.2e-40 [lb] FPS2019\n\njulia> molarmass(FPS2019) # lb‚ãÖlb-mol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 [lb*lb-mol‚Åª¬π] FPS2019\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"An impractical yet humorous unit system is the FFF specification.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"FFF","category":"page"},{"location":"units.html#MeasureSystems.FFF","page":"The UnitSystem","title":"MeasureSystems.FFF","text":"FFF = EntropySystem(Metric,ùüê*ùüï*DAY,fur,ùüê*ùüë^2*ùüì*lb,¬∞R,0,ùüè)\n\nFurlong‚Äìfirkin‚Äìfortnight FFF is a humorous UnitSystem based on unusal impractical units.\n\njulia> boltzmann(FFF) # fir‚ãÖfur¬≤‚ãÖftn‚Åª¬≤‚ãÖF‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πft‚Åª¬≤lb‚Åª¬π2¬π‚Åµ5‚Åµ7¬≤11‚Åª¬≤ = 6.793104372e-18 ¬± 2.1e-27 [fir*fur¬≤ftn‚Åª¬≤¬∞R‚Åª¬π] Unknown\n\njulia> planckreduced(FFF) # fir‚ãÖfur¬≤‚ãÖftn‚Åª¬π‚ãÖrad‚Åª¬π\nùò©*ft‚Åª¬≤lb‚Åª¬πœÑ‚Åª¬π2¬≥3‚Åª¬π5‚Åª¬π7*11‚Åª¬≤ = 7.721326066522302e-35 [fir*fur¬≤ftn‚Åª¬π] Unknown\n\njulia> lightspeed(FFF) # fur‚ãÖftn‚Åª¬π\nùò§*ft‚Åª¬π2‚Å∂3¬≤5*7*11‚Åª¬π = 1.8026174997852542e12 [fur*ftn‚Åª¬π] Unknown\n\njulia> vacuumpermeability(FFF) # fir‚ãÖfur¬≤‚ãÖInf‚Åª¬≤\nùüè/Inf = 0.0 [fir*fur*Inf‚Åª¬≤] Unknown\n\njulia> electronmass(FFF) # fir\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤lb‚Åª¬π3‚Åª¬≤5‚Åª¬π = 2.2314170421699998e-32 ¬± 6.8e-42 [fir] Unknown\n\njulia> molarmass(FFF) # fir‚ãÖfir-mol‚Åª¬π\nùüè = 1.0 [fir*fir-mol‚Åª¬π] Unknown\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Astronomical-Unit-Systems-1","page":"The UnitSystem","title":"Astronomical Unit Systems","text":"","category":"section"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Astronomical","category":"page"},{"location":"units.html#MeasureSystems.Astronomical","page":"The UnitSystem","title":"MeasureSystems.Astronomical","text":"Astronomical = AstronomicalSystem(Metric)\n\nAstronomical UnitSystem defined by making the newton gravitational constant 1.\n\njulia> boltzmann(Astronomical)\nkB*ùò©¬≤mP‚Åª¬≤NA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πœÑ‚Åª¬π2‚Å¥5¬≥ = 9.214869999999998e-34 ¬± 2.0e-38 [FLŒò‚Åª¬π] Astronomical\n\njulia> planckreduced(Astronomical)\nùò©¬≤ùò§*mP‚Åª¬≤œÑ‚Åª¬≤ = 7.03853e-45 ¬± 1.5999999999999998e-49 [FLTA‚Åª¬π] Astronomical\n\njulia> lightspeed(Astronomical)\nùò§ = 2.99792458e8 [LT‚Åª¬π] Astronomical\n\njulia> vacuumpermeability(Astronomical)\nùò©*ùò§*mP‚Åª¬≤2‚Åª‚Å∂5‚Åª‚Å∑ = 8.38718e-17 ¬± 1.8e-21 [FT¬≤Q‚Åª¬≤A‚Åª¬≤] Astronomical\n\njulia> electronmass(Astronomical)\nùò©¬≤mP‚Åª¬≤R‚àû*Œ±‚Åª¬≤œÑ‚Åª¬π2 = 6.07988e-41 ¬± 1.3e-45 [L¬≥T‚Åª¬≤] Astronomical\n\njulia> molarmass(Astronomical)\nùò©*ùò§*mP‚Åª¬≤œÑ‚Åª¬π2‚Åª¬≥5‚Åª¬≥ = 6.6743e-14 ¬± 1.5e-18 [L¬≥T‚Åª¬≤N‚Åª¬π] Astronomical\n\njulia> newton(Astronomical)\nùüè = 1.0 [FL‚Åª‚Å¥T‚Å¥] Astronomical\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"The International Astronomical Union (IAU) units are based on the solar mass, distance from the sun to the earth, and the length of a terrestrial day.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = fractilde m_e R_utextday^2mu_eu tilde M_utextau^2 quad\ntilde hbar = frachbar textdaym_odot textau^2 quad\ntilde c = cfractextdaytextau quad\ntildemu_0 = frac4pi10^7 m_odot textau^2 quad\ntilde m_e = fracm_em_odot quad\n(tilde M_u = frac11000m_odot)","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"IAU\nIAUE\nIAUJ\nHubble\nCosmological\nCosmologicalQuantum","category":"page"},{"location":"units.html#MeasureSystems.IAU","page":"The UnitSystem","title":"MeasureSystems.IAU","text":"IAU‚òâ = EntropySystem(Metric,DAY,au,GM‚òâ/G)\n\nAstronomical (solar) UnitSystem defined by International Astronomical Union.\n\njulia> boltzmann(IAU) # M‚äô‚ãÖau¬≤‚ãÖD‚Åª¬≤‚ãÖK‚Åª¬π\nkB*ùò©¬≤mP‚Åª¬≤NA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πau‚Åª‚Åµk‚Åª¬≤œÑ‚Åª¬π2¬≥¬≤3¬π¬≤5¬π¬π = 2.316083e-66 ¬± 5.1e-71 [M‚òâ*au¬≤D‚Åª¬≤K‚Åª¬π] IAU‚òâ\n\njulia> planckreduced(IAU) # M‚äô‚ãÖau¬≤‚ãÖD‚Åª¬π‚ãÖrad‚Åª¬π\nùò©¬≤ùò§*mP‚Åª¬≤au‚Åª‚Åµk‚Åª¬≤œÑ‚Åª¬≤2¬≤¬π3‚Åπ5‚Å∂ = 2.0475440000000002e-82 ¬± 4.5000000000000005e-87 [M‚òâ*au¬≤D‚Åª¬π] IAU‚òâ\n\njulia> lightspeed(IAU) # au‚ãÖD‚Åª¬π\nùò§*au‚Åª¬π2‚Å∑3¬≥5¬≤ = 173.1446326742 ¬± 3.5e-9 [au*D‚Åª¬π] IAU‚òâ\n\njulia> vacuumpermeability(IAU) # M‚äô‚ãÖau¬≤‚ãÖC‚Åª¬≤\nùò©*ùò§*mP‚Åª¬≤au‚Åª‚Åµk‚Åª¬≤2¬≥‚Å∂3¬π‚Å∏5‚Åµ = 1.57365e-39 ¬± 3.5000000000000003e-44 [M‚òâ*au*C‚Åª¬≤] IAU‚òâ\n\njulia> electronmass(IAU) # M‚äô\nùò©¬≤mP‚Åª¬≤R‚àû*Œ±‚Åª¬≤au‚Åª¬≥k‚Åª¬≤œÑ‚Åª¬π2¬π‚Åµ3‚Å∂5‚Å¥ = 4.58124e-61 ¬± 1.0000000000000001e-65 [M‚òâ] IAU‚òâ\n\njulia> molarmass(IAU) # M‚òâ‚ãÖmol‚Åª¬π\nùò©*ùò§*mP‚Åª¬≤au‚Åª¬≥k‚Åª¬≤œÑ‚Åª¬π2¬π¬π3‚Å∂5 = 5.02915e-34 ¬± 1.0999999999999999e-38 [M‚òâ*M‚òâ-mol‚Åª¬π] IAU‚òâ\n\njulia> newton(IAU)\nk¬≤ = 0.00029591220828559115 [M‚òâ‚Åª¬πau¬≥D‚Åª¬≤] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.IAUE","page":"The UnitSystem","title":"MeasureSystems.IAUE","text":"IAUE = EntropySystem(Metric,DAY,au,GME/G)\n\nAstronomical (Earth) UnitSystem defined by International Astronomical Union.\n\njulia> boltzmann(IAUE) # ME‚ãÖau¬≤‚ãÖD‚Åª¬≤‚ãÖK‚Åª¬π\nkB*ùò©¬≤mP‚Åª¬≤NA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πau‚Åª¬≤GME‚Åª¬πœÑ‚Åª¬π2¬π‚Å∏3‚Å∂5‚Å∑ = 7.71131e-61 ¬± 1.7000000000000001e-65 [ME*au¬≤D‚Åª¬≤K‚Åª¬π] IAUE\n\njulia> planckreduced(IAUE) # ME‚ãÖau¬≤‚ãÖD‚Åª¬π‚ãÖrad‚Åª¬π\nùò©¬≤ùò§*mP‚Åª¬≤au‚Åª¬≤GME‚Åª¬πœÑ‚Åª¬≤2‚Å∑3¬≥5¬≤ = 6.81722e-77 ¬± 1.5e-81 [ME*au¬≤D‚Åª¬π] IAUE\n\njulia> lightspeed(IAUE) # au‚ãÖD‚Åª¬π\nùò§*au‚Åª¬π2‚Å∑3¬≥5¬≤ = 173.1446326742 ¬± 3.5e-9 [au*D‚Åª¬π] IAUE\n\njulia> vacuumpermeability(IAUE) # ME‚ãÖau¬≤‚ãÖC‚Åª¬≤\nùò©*ùò§*mP‚Åª¬≤au‚Åª¬≤GME‚Åª¬π2¬≤¬≤3¬π¬≤5 = 5.239409999999999e-34 ¬± 1.1999999999999998e-38 [ME*au*C‚Åª¬≤] IAUE\n\njulia> electronmass(IAUE) # ME\nùò©¬≤mP‚Åª¬≤R‚àû*Œ±‚Åª¬≤GME‚Åª¬πœÑ‚Åª¬π2 = 1.5253059999999998e-55 ¬± 3.3999999999999995e-60 [ME] IAUE\n\njulia> molarmass(IAUE) # ME‚ãÖmol‚Åª¬π\nùò©*ùò§*mP‚Åª¬≤GME‚Åª¬πœÑ‚Åª¬π2‚Åª¬≥5‚Åª¬≥ = 1.674434e-28 ¬± 3.6999999999999995e-33 [ME*ME-mol‚Åª¬π] IAUE\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.IAUJ","page":"The UnitSystem","title":"MeasureSystems.IAUJ","text":"IAUJ = EntropySystem(Metric,DAY,au,GMJ/G)\n\nAstronomical (Jupiter) UnitSystem defined by International Astronomical Union.\n\njulia> boltzmann(IAUJ) # MJ‚ãÖau¬≤‚ãÖD‚Åª¬≤‚ãÖK‚Åª¬π\nkB*ùò©¬≤mP‚Åª¬≤NA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πau‚Åª¬≤GMJ‚Åª¬πœÑ‚Åª¬π2¬π‚Å∏3‚Å∂5‚Å∑ = 2.4262489999999998e-63 ¬± 5.3999999999999995e-68 [MJ*au¬≤D‚Åª¬≤K‚Åª¬π] IAUJ\n\njulia> planckreduced(IAUJ) # MJ‚ãÖau¬≤‚ãÖD‚Åª¬π‚ãÖrad‚Åª¬π\nùò©¬≤ùò§*mP‚Åª¬≤au‚Åª¬≤GMJ‚Åª¬πœÑ‚Åª¬≤2‚Å∑3¬≥5¬≤ = 2.144937e-79 ¬± 4.7e-84 [MJ*au¬≤D‚Åª¬π] IAUJ\n\njulia> lightspeed(IAUJ) # au‚ãÖD‚Åª¬π\nùò§*au‚Åª¬π2‚Å∑3¬≥5¬≤ = 173.1446326742 ¬± 3.5e-9 [au*D‚Åª¬π] IAUJ\n\njulia> vacuumpermeability(IAUJ) # MJ‚ãÖau¬≤‚ãÖC‚Åª¬≤\nùò©*ùò§*mP‚Åª¬≤au‚Åª¬≤GMJ‚Åª¬π2¬≤¬≤3¬π¬≤5 = 1.6485020000000003e-36 ¬± 3.6000000000000006e-41 [MJ*au*C‚Åª¬≤] IAUJ\n\njulia> electronmass(IAU) # MJ\nùò©¬≤mP‚Åª¬≤R‚àû*Œ±‚Åª¬≤GMJ‚Åª¬πœÑ‚Åª¬π2 = 4.7991499999999996e-58 ¬± 1.0999999999999999e-62 [MJ] IAUJ\n\njulia> molarmass(IAUJ) # MJ‚ãÖmol‚Åª¬π\nùò©*ùò§*mP‚Åª¬≤GMJ‚Åª¬πœÑ‚Åª¬π2‚Åª¬≥5‚Åª¬≥ = 5.2683599999999994e-31 ¬± 1.1999999999999999e-35 [MJ*MJ-mol‚Åª¬π] IAUJ\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.Hubble","page":"The UnitSystem","title":"MeasureSystems.Hubble","text":"Hubble = EntropySystem(Metric,th,ùò§*th,ùüè)\n\nHubble UnitSystem defined by hubble parameter.\n\njulia> boltzmann(Hubble)\nkB*ùò©*ùò§‚Åª¬≥NA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 1.53617918671e-40 ¬± 4.7e-50 [MŒò‚Åª¬π] Hubble\n\njulia> planckreduced(Hubble)\nùò©*ùò§‚Åª¬≤H0*au‚Åª¬π2‚Åª¬π‚Å∞3‚Åª‚Å¥5‚Åª‚Å∂ = 2.573e-69 ¬± 1.6000000000000001e-71 [ML] Hubble\n\njulia> lightspeed(Hubble)\nùüè = 1.0 [ùüô] Hubble\n\njulia> vacuumpermeability(Hubble)\nùò§‚Åª¬≤H0‚Åª¬≤au¬≤œÑ‚Åª¬π2¬π‚Å¥3‚Å∏5‚Åµ = 2.908e12 ¬± 3.6e10 [MLQ‚Åª¬≤] Hubble\n\njulia> electronmass(Hubble)\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 9.1093837016e-31 ¬± 2.8e-40 [M] Hubble\n\njulia> molarmass(Hubble)\n2‚Åª¬≥5‚Åª¬≥ = 0.001 [MN‚Åª¬π] Hubble\n\njulia> hubble(Hubble)\nùüè = 1.0 [L‚Åª¬π] Hubble\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.Cosmological","page":"The UnitSystem","title":"MeasureSystems.Cosmological","text":"Cosmological = EntropySystem(Metric,lc/ùò§,lc,mc)\n\nCosmological scale UnitSystem defined by darkenergydensity.\n\njulia> boltzmann(Cosmological)\nkB*ùò©¬≥·êü¬≤ùò§‚Åª¬π¬π·êü¬≤mP‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πŒ©Œõ¬π·êü¬≤H0*au‚Åª¬πœÑ*2‚Åª‚Åµ3‚Åª‚Å∑·êü¬≤5‚Åª¬≥ = 7.360999999999999e-88 ¬± 5.499999999999999e-90 [MŒò‚Åª¬π] Cosmological\n\njulia> planckreduced(Cosmological)\nùò©¬≥·êü¬≤ùò§‚Åª‚Åπ·êü¬≤mP‚Åª¬πŒ©Œõ*H0¬≤au‚Åª¬≤œÑ¬π·êü¬≤2‚Åª¬≤‚Å∞3‚Åª‚Å∑5‚Åª¬π¬≤ = 3.535e-117 ¬± 5.2e-119 [ML] Cosmological\n\njulia> lightspeed(Cosmological)\nùüè = 1.0 [ùüô] Cosmological\n\njulia> vacuumpermeability(Cosmological)\nùò©¬π·êü¬≤ùò§‚Åª‚Åπ·êü¬≤mP‚Åª¬πŒ©Œõ‚Åª¬π·êü¬≤H0‚Åª¬πau*œÑ*2‚Å∑3‚Å∑·êü¬≤5‚Åª¬π = 1.6950000000000001e-34 ¬± 1.3e-36 [MLQ‚Åª¬≤] Cosmological\n\njulia> electronmass(Cosmological)\nùò©¬≥·êü¬≤ùò§‚Åª‚Å∑·êü¬≤mP‚Åª¬πR‚àû*Œ±‚Åª¬≤Œ©Œõ¬π·êü¬≤H0*au‚Åª¬πœÑ*2‚Åª‚Å∏3‚Åª‚Å∑·êü¬≤5‚Åª‚Å∂ = 4.365000000000001e-78 ¬± 3.2000000000000003e-80 [M] Cosmological\n\njulia> molarmass(Cosmological)\nùò©¬π·êü¬≤ùò§‚Åª‚Åµ·êü¬≤mP‚Åª¬πŒ©Œõ¬π·êü¬≤H0*au‚Åª¬πœÑ*2‚Åª¬π¬≤3‚Åª‚Å∑·êü¬≤5‚Åª‚Åπ = 4.7919999999999996e-51 ¬± 3.6e-53 [MN‚Åª¬π] Cosmological\n\n\n\n\n\n","category":"constant"},{"location":"units.html#MeasureSystems.CosmologicalQuantum","page":"The UnitSystem","title":"MeasureSystems.CosmologicalQuantum","text":"CosmologicalQuantum = EntropySystem(Metric,tcq,lcq,mcq)\n\nCosmological quantum scale UnitSystem defined by darkenergydensity.\n\njulia> boltzmann(CosmologicalQuantum)\nkB*ùò©¬π·êü¬≤ùò§‚Åª¬≤mP‚Åª¬π·êü¬≤NA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πŒ©Œõ‚Åª¬π·êü‚Å¥H0‚Åª¬π·êü¬≤au¬π·êü¬≤œÑ¬π·êü‚Å¥2¬π‚Åπ·êü¬≤3‚Å∑·êü‚Å¥5‚Å∂ = 0.03834 ¬± 0.00014 [MŒò‚Åª¬π] CosmologicalQuantum\n\njulia> planckreduced(CosmologicalQuantum)\nùüè = 1.0 [ùüô] CosmologicalQuantum\n\njulia> lightspeed(CosmologicalQuantum)\nùüè = 1.0 [ùüô] CosmologicalQuantum\n\njulia> vacuumpermeability(CosmologicalQuantum)\nùò©¬π·êü¬≤ùò§‚Åª¬≥mP‚Åª¬≥·êü¬≤Œ©Œõ‚Åª¬≥·êü‚Å¥H0‚Åª¬≥·êü¬≤au¬≥·êü¬≤œÑ‚Åª¬π·êü‚Å¥2¬≤¬π·êü¬≤3¬≤¬π·êü‚Å¥5¬≤ = 2.992e-10 ¬± 3.3e-12 [Q‚Åª¬≤] CosmologicalQuantum\n\njulia> electronmass(CosmologicalQuantum)\nùò©¬π·êü¬≤mP‚Åª¬π·êü¬≤R‚àû*Œ±‚Åª¬≤Œ©Œõ‚Åª¬π·êü‚Å¥H0‚Åª¬π·êü¬≤au¬π·êü¬≤œÑ¬π·êü‚Å¥2¬π¬≥·êü¬≤3‚Å∑·êü‚Å¥5¬≥ = 2.2733e8 ¬± 840000.0 [M] CosmologicalQuantum\n\njulia> molarmass(Cosmological)\nùò©¬π·êü¬≤ùò§‚Åª‚Åµ·êü¬≤mP‚Åª¬πŒ©Œõ¬π·êü¬≤H0*au‚Åª¬πœÑ*2‚Åª¬π¬≤3‚Åª‚Å∑·êü¬≤5‚Åª‚Åπ = 4.7919999999999996e-51 ¬± 3.6e-53 [MN‚Åª¬π] Cosmological\n\n\n\n\n\n","category":"constant"},{"location":"units.html#Natural-Unit-Systems-1","page":"The UnitSystem","title":"Natural Unit Systems","text":"","category":"section"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"With the introduction of the planckmass a set of natural atomic unit systems can be derived in terms of the gravitational coupling constant.","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"alpha_G = left(fracm_em_Pright)^2 qquad\ntilde k_B = 1 qquad\n(tilde M_u = 1 quad tilde lambda = 1 quad tilde alpha_L = 1)","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"julia> Œ±G # (m‚Çë/mP)^2\nùò©¬≤ùò§‚Åª¬≤mP‚Åª¬≤R‚àû¬≤Œ±‚Åª‚Å¥2¬≤ = 1.75181e-45 ¬± 3.9e-50","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Some of the notable variants include","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Planck       ::UnitSystem{1,1,1,1,‚àö(4œÄ*Œ±G)}\nPlanckGauss  ::UnitSystem{1,1,1,4œÄ,‚àöŒ±G}\nStoney       ::UnitSystem{1,Œ±inv,1,4œÄ,‚àö(Œ±G*Œ±inv)}\nHartree      ::UnitSystem{1,1,Œ±inv,4œÄ/Œ±inv^2,1}\nRydberg      ::UnitSystem{1,1,2Œ±inv,œÄ/Œ±inv^2,1/2}\nSchrodinger  ::UnitSystem{1,1,Œ±inv,4œÄ/Œ±inv^2,‚àö(Œ±G*Œ±inv)}\nElectronic   ::UnitSystem{1,Œ±inv,1,4œÄ,1}\nNatural      ::UnitSystem{1,1,1,1,1}\nNaturalGauss ::UnitSystem{1,1,1,4œÄ,1}\nQCD          ::UnitSystem{1,1,1,1,1/Œº‚Çö‚Çë}\nQCDGauss     ::UnitSystem{1,1,1,4œÄ,1/Œº‚Çö‚Çë}\nQCDoriginal  ::UnitSystem{1,1,1,4œÄ/Œ±inv,1/Œº‚Çö‚Çë}","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 1 qquad\ntilde m_e = sqrt4pi alpha_G","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Planck","category":"page"},{"location":"units.html#MeasureSystems.Planck","page":"The UnitSystem","title":"MeasureSystems.Planck","text":"Planck = UnitSystem(ùüè,ùüè,ùüè,ùüè,‚àö(ùüê*œÑ*Œ±G))\n\nPlanck UnitSystem with the electronmass value ‚àö(4œÄ*Œ±G) using gravitational coupling.\n\njulia> boltzmann(Planck)\nùüè = 1.0 [ùüô] Planck\n\njulia> planckreduced(Planck)\nùüè = 1.0 [ùüô] Planck\n\njulia> lightspeed(Planck)\nùüè = 1.0 [ùüô] Planck\n\njulia> vacuumpermeability(Planck)\nùüè = 1.0 [M‚Åª¬≤] Planck\n\njulia> electronmass(Planck)\nùò©*ùò§‚Åª¬πmP‚Åª¬πR‚àû*Œ±‚Åª¬≤œÑ¬π·êü¬≤2¬≥·êü¬≤ = 1.483708e-22 ¬± 1.6000000000000001e-27 [M] Planck\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pi qquad\ntilde m_e = sqrt4pi alpha_G","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"PlanckGauss","category":"page"},{"location":"units.html#MeasureSystems.PlanckGauss","page":"The UnitSystem","title":"MeasureSystems.PlanckGauss","text":"PlanckGauss = UnitSystem(ùüè,ùüè,ùüè,ùüê*œÑ,‚àöŒ±G)\n\nPlanck (Gauss) UnitSystem with permeability of 4œÄ and electronmass coupling ‚àöŒ±G.\n\njulia> boltzmann(PlanckGauss)\nùüè = 1.0 [ùüô] PlanckGauss\n\njulia> planckreduced(PlanckGauss)\nùüè = 1.0 [A‚Åª¬π] PlanckGauss\n\njulia> lightspeed(PlanckGauss)\nùüè = 1.0 [ùüô] PlanckGauss\n\njulia> vacuumpermeability(PlanckGauss)\nœÑ*2 = 12.566370614359172 [A‚Åª¬≤] PlanckGauss\n\njulia> electronmass(PlanckGauss)\nùò©*ùò§‚Åª¬πmP‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 4.185463e-23 ¬± 4.6e-28 [M] PlanckGauss\n\nThe well known PlanckGauss values for length, time, mass, and temperature are:\n\njulia> length(PlanckGauss,Metric) # ‚ÑìP\nùò©*ùò§‚Åª¬πmP‚Åª¬πœÑ‚Åª¬π = 1.616255e-35 ¬± 1.8e-40 : PlanckGauss -> Metric\n\njulia> time(PlanckGauss,Metric) # tP\nùò©*ùò§‚Åª¬≤mP‚Åª¬πœÑ‚Åª¬π = 5.391246999999999e-44 ¬± 5.8999999999999996e-49 : PlanckGauss -> Metric\n\njulia> mass(PlanckGauss,Metric) # mP\nmP = 2.176434e-8 ¬± 2.4e-13 : PlanckGauss -> Metric\n\njulia> temperature(PlanckGauss,Metric) # TP\nkB‚Åª¬πùò©‚Åª¬πùò§¬≥mP*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª‚Å¥5‚Åª¬≥ = 1.416784e32 ¬± 1.6e27 : PlanckGauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = frac1alpha qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pi qquad\ntilde m_e = sqrtfracalpha_Galpha","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Stoney","category":"page"},{"location":"units.html#MeasureSystems.Stoney","page":"The UnitSystem","title":"MeasureSystems.Stoney","text":"Stoney = UnitSystem(ùüè,ùüè/Œ±,ùüè,ùüê*œÑ,‚àö(Œ±G/Œ±)}\n\nStoney UnitSystem with permeability of 4œÄ and electronmass coupling ‚àö(Œ±G/Œ±).\n\njulia> boltzmann(Stoney)\nùüè = 1.0 [ùüô] Stoney\n\njulia> planckreduced(Stoney)\nŒ±‚Åª¬π = 137.035999084 ¬± 2.1e-8 [ML] Stoney\n\njulia> lightspeed(Stoney)\nùüè = 1.0 [ùüô] Stoney\n\njulia> vacuumpermeability(Stoney)\nœÑ*2 = 12.566370614359172 [MLQ‚Åª¬≤] Stoney\n\njulia> electronmass(Stoney)\nùò©*ùò§‚Åª¬πmP‚Åª¬πR‚àû*Œ±‚Åª‚Åµ·êü¬≤2 = 4.899602000000001e-22 ¬± 5.4000000000000005e-27 [M] Stoney\n\nThe well known Stoney values for length, time, mass, and charge are:\n\njulia> length(Stoney,Metric) # lS\nùò©*ùò§‚Åª¬πmP‚Åª¬πŒ±¬π·êü¬≤œÑ‚Åª¬π = 1.3806790000000002e-36 ¬± 1.5000000000000002e-41 : Stoney -> Metric\n\njulia> time(Stoney,Metric) # tS\nùò©*ùò§‚Åª¬≤mP‚Åª¬πŒ±¬π·êü¬≤œÑ‚Åª¬π = 4.605448e-45 ¬± 5.1e-50 : Stoney -> Metric\n\njulia> mass(Stoney,Metric) # mS\nmP*Œ±¬π·êü¬≤ = 1.859209e-9 ¬± 2.1e-14 : Stoney -> Metric\n\njulia> charge(Stoney,Metric) # qS\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤Œ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.60217663444e-19 ¬± 1.2e-29 : Stoney -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = frac1alpha qquad\ntilde mu_0 = 4pialpha^2 qquad\ntilde m_e = 1","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Hartree","category":"page"},{"location":"units.html#MeasureSystems.Hartree","page":"The UnitSystem","title":"MeasureSystems.Hartree","text":"Hartree = UnitSystem(ùüè,ùüè,ùüè/Œ±,ùüê*œÑ*Œ±^2,ùüè)\n\nHartree atomic UnitSystem with lightspeed of Œ±inv and permeability of ùüê*œÑ*Œ±^2.\n\njulia> boltzmann(Hartree)\nùüè = 1.0 [ùüô] Hartree\n\njulia> planckreduced(Hartree)\nùüè = 1.0 [ùüô] Hartree\n\njulia> lightspeed(Hartree)\nŒ±‚Åª¬π = 137.035999084 ¬± 2.1e-8 [L‚Åª¬π] Hartree\n\njulia> vacuumpermeability(Hartree)\nŒ±¬≤œÑ*2 = 0.00066917625662 ¬± 2.1e-13 [LQ‚Åª¬≤] Hartree\n\njulia> electronmass(Hartree)\nùüè = 1.0 [ùüô] Hartree\n\nThe well known Hartree atomic unit values for length, time, mass, and charge are:\n\njulia> length(Hartree,Metric) # lA\nR‚àû‚Åª¬πŒ±*œÑ‚Åª¬π2‚Åª¬π = 5.29177210902e-11 ¬± 8.1e-21 : Hartree -> Metric\n\njulia> time(Hartree,Metric) # tA\nùò§‚Åª¬πR‚àû‚Åª¬πœÑ‚Åª¬π2‚Åª¬π = 2.4188843265857e-17 ¬± 4.6e-29 : Hartree -> Metric\n\njulia> mass(Hartree,Metric) # mA\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 9.1093837016e-31 ¬± 2.8e-40 : Hartree -> Metric\n\njulia> charge(Hartree,Metric) # qA\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤Œ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.60217663444e-19 ¬± 1.2e-29 : Hartree -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = frac2alpha qquad\ntilde mu_0 = pialpha^2 qquad\ntilde m_e = frac12","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Rydberg","category":"page"},{"location":"units.html#MeasureSystems.Rydberg","page":"The UnitSystem","title":"MeasureSystems.Rydberg","text":"Rydberg = UnitSystem(ùüè,ùüè,ùüê/Œ±,œÑ/ùüê*Œ±^2,ùüè/ùüê)\n\nRydberg UnitSystem with lightspeed of ùüê/Œ± and permeability of œÄ*Œ±^2.\n\njulia> boltzmann(Rydberg)\nùüè = 1.0 [M‚Åª¬≤] Rydberg\n\njulia> planckreduced(Rydberg)\nùüè = 1.0 [ùüô] Rydberg\n\njulia> lightspeed(Rydberg)\nŒ±‚Åª¬π2 = 274.071998168 ¬± 4.2e-8 [M‚Åª¬πL‚Åª¬π] Rydberg\n\njulia> vacuumpermeability(Rydberg)\nŒ±¬≤œÑ*2‚Åª¬π = 0.000167294064155 ¬± 5.1e-14 [MLQ‚Åª¬≤] Rydberg\n\njulia> electronmass(Rydberg)\n2‚Åª¬π = 0.5 [M] Rydberg\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = frac1alpha qquad\ntilde mu_0 = 4pialpha^2 qquad\ntilde m_e = sqrtfracalpha_Galpha","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Schrodinger","category":"page"},{"location":"units.html#MeasureSystems.Schrodinger","page":"The UnitSystem","title":"MeasureSystems.Schrodinger","text":"Schrodinger = UnitSystem(ùüè,ùüè,ùüè/Œ±,ùüê*œÑ*Œ±^2,‚àö(Œ±G/Œ±))\n\nSchrodinger UnitSystem with permeability of 4œÄ/Œ±inv^2 and electronmass of ‚àö(Œ±G*Œ±inv).\n\njulia> boltzmann(Schrodinger)\nùüè = 1.0 [M‚Åª¬≤] Schrodinger\n\njulia> planckreduced(Schrodinger)\nùüè = 1.0 [ùüô] Schrodinger\n\njulia> lightspeed(Schrodinger)\nŒ±‚Åª¬π = 137.035999084 ¬± 2.1e-8 [M‚Åª¬πL‚Åª¬π] Schrodinger\n\njulia> vacuumpermeability(Schrodinger)\nŒ±¬≤œÑ*2 = 0.00066917625662 ¬± 2.1e-13 [MLQ‚Åª¬≤] Schrodinger\n\njulia> electronmass(Schrodinger)\nùò©*ùò§‚Åª¬πmP‚Åª¬πR‚àû*Œ±‚Åª‚Åµ·êü¬≤2 = 4.899602000000001e-22 ¬± 5.4000000000000005e-27 [M] Schrodinger\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = frac1alpha qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pi qquad\ntilde m_e = 1","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Electronic","category":"page"},{"location":"units.html#MeasureSystems.Electronic","page":"The UnitSystem","title":"MeasureSystems.Electronic","text":"Electronic = UnitSystem(ùüè,ùüè/Œ±,ùüè,ùüê*œÑ,ùüè}\n\nElectronic UnitSystem with planckreduced of 1/Œ± and permeability of 4œÄ.\n\njulia> boltzmann(Electronic)\nùüè = 1.0 [ùüô] Electronic\n\njulia> planckreduced(Electronic)\nŒ±‚Åª¬π = 137.035999084 ¬± 2.1e-8 [L] Electronic\n\njulia> lightspeed(Electronic)\nùüè = 1.0 [ùüô] Electronic\n\njulia> vacuumpermeability(Electronic)\nœÑ*2 = 12.566370614359172 [LQ‚Åª¬≤] Electronic\n\njulia> electronmass(Electronic)\nùüè = 1.0 [ùüô] Electronic\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 1 qquad\ntilde m_e = 1","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Natural","category":"page"},{"location":"units.html#MeasureSystems.Natural","page":"The UnitSystem","title":"MeasureSystems.Natural","text":"Natural = UnitSystem(ùüè,ùüè,ùüè,ùüè,ùüè)\n\nNatural UnitSystem with all primary constants having unit value.\n\njulia> boltzmann(Natural)\nùüè = 1.0 [ùüô] Natural\n\njulia> planckreduced(Natural)\nùüè = 1.0 [ùüô] Natural\n\njulia> lightspeed(Natural)\nùüè = 1.0 [ùüô] Natural\n\njulia> vacuumpermeability(Natural)\nùüè = 1.0 [ùüô] Natural\n\njulia> electronmass(Natural)\nùüè = 1.0 [ùüô] Natural\n\nThe well known Natural values for length, time, mass, and charge are:\n\njulia> length(Natural,Metric)\nR‚àû‚Åª¬πŒ±¬≤œÑ‚Åª¬π2‚Åª¬π = 3.8615926796000003e-13 ¬± 1.2e-22 : Natural -> Metric\n\njulia> time(Natural,Metric)\nùò§‚Åª¬πR‚àû‚Åª¬πŒ±¬≤œÑ‚Åª¬π2‚Åª¬π = 1.28808866819e-21 ¬± 3.8999999999999997e-31 : Natural -> Metric\n\njulia> mass(Natural,Metric)\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 9.1093837016e-31 ¬± 2.8e-40 : Natural -> Metric\n\njulia> charge(Natural,Metric)\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤œÑ‚Åª¬π2¬≥5‚Å∑·êü¬≤ = 5.290817691337993e-19 : Natural -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pi qquad\ntilde m_e = 1","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"NaturalGauss","category":"page"},{"location":"units.html#MeasureSystems.NaturalGauss","page":"The UnitSystem","title":"MeasureSystems.NaturalGauss","text":"NaturalGauss = UnitSystem(ùüè,ùüè,ùüè,ùüê*œÑ,ùüè}\n\nNatural (Gauss) UnitSystem with the Gaussian permeability value of 4œÄ.\n\njulia> boltzmann(NaturalGauss)\nùüè = 1.0 [ùüô] NaturalGauss\n\njulia> planckreduced(NaturalGauss)\nùüè = 1.0 [A‚Åª¬π] NaturalGauss\n\njulia> lightspeed(NaturalGauss)\nùüè = 1.0 [ùüô] NaturalGauss\n\njulia> vacuumpermeability(NaturalGauss)\nœÑ*2 = 12.566370614359172 [A‚Åª¬≤] NaturalGauss\n\njulia> electronmass(NaturalGauss)\nùüè = 1.0 [ùüô] NaturalGauss\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 1 qquad\ntilde m_e = frac1mu_pe = fracm_em_p","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"QCD","category":"page"},{"location":"units.html#MeasureSystems.QCD","page":"The UnitSystem","title":"MeasureSystems.QCD","text":"QCD = UnitSystem(ùüè,ùüè,ùüè,ùüè,ùüè/Œº‚Çö‚Çë)\n\nQunatum chromodynamics UnitSystem with electronmass of ùüè/Œº‚Çö‚Çë or ùüè/Œº‚Çë·µ§‚Åª¬πŒº‚Çö·µ§ = 1836.15267343 ¬± 1.1e-7.\n\njulia> boltzmann(QCD)\nùüè = 1.0 [ML¬≤T‚Åª¬≤Œò‚Åª¬π] QCD\n\njulia> planckreduced(QCD)\nùüè = 1.0 [ML¬≤T‚Åª¬π] QCD\n\njulia> lightspeed(QCD)\nùüè = 1.0 [LT‚Åª¬π] QCD\n\njulia> vacuumpermeability(QCD)\nùüè = 1.0 [MLQ‚Åª¬≤] QCD\n\njulia> electronmass(QCD)\nŒº‚Çë·µ§*Œº‚Çö·µ§‚Åª¬π = 0.000544617021487 ¬± 3.3e-14 [M] QCD\n\nThe well known QCD values for length, time, mass, and charge are:\n\njulia> length(QCD,Metric) # lQCD\nR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*Œº‚Çö·µ§‚Åª¬πœÑ‚Åª¬π2‚Åª¬π = 2.10308910335e-16 ¬± 6.6e-26 : QCD -> Metric\n\njulia> time(QCD,Metric) # tQCD\nùò§‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*Œº‚Çö·µ§‚Åª¬πœÑ‚Åª¬π2‚Åª¬π = 7.0151501388e-25 ¬± 2.2e-34 : QCD -> Metric\n\njulia> mass(QCD,Metric) # mQCD\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πŒº‚Çö·µ§*2 = 1.67262192369e-27 ¬± 5.2000000000000004e-37 : QCD -> Metric\n\njulia> charge(QCD,Metric)\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤œÑ‚Åª¬π2¬≥5‚Å∑·êü¬≤ = 5.290817691337993e-19 : QCD -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pi qquad\ntilde m_e = frac1mu_pe = fracm_em_p","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"QCDGauss","category":"page"},{"location":"units.html#MeasureSystems.QCDGauss","page":"The UnitSystem","title":"MeasureSystems.QCDGauss","text":"QCDGauss = UnitSystem(ùüè,ùüè,ùüè,ùüê*œÑ,ùüè/Œº‚Çö‚Çë)\n\nQunatum chromodynamics (Gauss) UnitSystem with electronmass of ùüè/Œº‚Çö‚Çë.\n\njulia> boltzmann(QCDGauss)\nùüè = 1.0 [ùüô] QCDGauss\n\njulia> planckreduced(QCDGauss)\nùüè = 1.0 [A‚Åª¬π] QCDGauss\n\njulia> lightspeed(QCDGauss)\nùüè = 1.0 [ùüô] QCDGauss\n\njulia> vacuumpermeability(QCDGauss)\nœÑ*2 = 12.566370614359172 [A‚Åª¬≤] QCDGauss\n\njulia> electronmass(QCDGauss)\nŒº‚Çë·µ§*Œº‚Çö·µ§‚Åª¬π = 0.000544617021487 ¬± 3.3e-14 [M] QCDGauss\n\nThe well known QCDGauss values for length, time, mass, and charge are:\n\njulia> length(QCDGauss,Metric) # lQCD\nR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*Œº‚Çö·µ§‚Åª¬πœÑ‚Åª¬π2‚Åª¬π = 2.10308910335e-16 ¬± 6.6e-26 : QCDGauss -> Metric\n\njulia> time(QCDGauss,Metric) # tQCD\nùò§‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*Œº‚Çö·µ§‚Åª¬πœÑ‚Åª¬π2‚Åª¬π = 7.0151501388e-25 ¬± 2.2e-34 : QCDGauss -> Metric\n\njulia> mass(QCDGauss,Metric) # mQCD\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πŒº‚Çö·µ§*2 = 1.67262192369e-27 ¬± 5.2000000000000004e-37 : QCDGauss -> Metric\n\njulia> charge(QCDGauss,Metric)\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.8755460382902117e-18 : QCDGauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"tilde k_B = 1 qquad\ntilde hbar = 1 qquad\ntilde c = 1 qquad\ntilde mu_0 = 4pialpha qquad\ntilde m_e = frac1mu_pe = fracm_em_p","category":"page"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"QCDoriginal","category":"page"},{"location":"units.html#MeasureSystems.QCDoriginal","page":"The UnitSystem","title":"MeasureSystems.QCDoriginal","text":"QCDoriginal = UnitSystem(ùüè,ùüè,ùüè,ùüê*œÑ*Œ±,ùüè/Œº‚Çö‚Çë)\n\nQunatum chromodynamics (original) UnitSystem with permeability of 4œÄ*Œ±.\n\njulia> boltzmann(QCDoriginal)\nùüè = 1.0 [ùüô] QCDoriginal\n\njulia> planckreduced(QCDoriginal)\nùüè = 1.0 [A‚Åª¬π] QCDoriginal\n\njulia> lightspeed(QCDoriginal)\nùüè = 1.0 [ùüô] QCDoriginal\n\njulia> vacuumpermeability(QCDoriginal)\nŒ±*œÑ*2 = 0.091701236889 ¬± 1.4e-11 [Q‚Åª¬≤A‚Åª¬≤] QCDoriginal\n\njulia> electronmass(QCDoriginal)\nŒº‚Çë·µ§*Œº‚Çö·µ§‚Åª¬π = 0.000544617021487 ¬± 3.3e-14 [M] QCDoriginal\n\nThe well known QCDoriginal values for length, time, mass, and charge are:\n\njulia> length(QCDoriginal,Metric) # lQCD\nR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*Œº‚Çö·µ§‚Åª¬πœÑ‚Åª¬π2‚Åª¬π = 2.10308910335e-16 ¬± 6.6e-26 : QCDoriginal -> Metric\n\njulia> time(QCDoriginal,Metric) # tQCD\nùò§‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*Œº‚Çö·µ§‚Åª¬πœÑ‚Åª¬π2‚Åª¬π = 7.0151501388e-25 ¬± 2.2e-34 : QCDoriginal -> Metric\n\njulia> mass(QCDoriginal,Metric) # mQCD\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πŒº‚Çö·µ§*2 = 1.67262192369e-27 ¬± 5.2000000000000004e-37 : QCDoriginal -> Metric\n\njulia> charge(QCDoriginal,Metric)\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤Œ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.60217663444e-19 ¬± 1.2e-29 : QCDoriginal -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"units.html#UnitSystem-Index-1","page":"The UnitSystem","title":"UnitSystem Index","text":"","category":"section"},{"location":"units.html#","page":"The UnitSystem","title":"The UnitSystem","text":"Pages = [\"units.md\",\"constants.md\"]","category":"page"},{"location":"constants.html#Physics-Constants-1","page":"Physics Constants","title":"Physics Constants","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Pages = [\"units.md\",\"constants.md\",\"convert.md\"]","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"The following are fundamental constants of physics:","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"alpha = fraclambda e^24pivarepsilon_0hbar c = \nfraclambda cmu_0 (ealpha_L)^24pihbar = \nfrace^2k_ehbar c = \nfraclambda e^22mu_0ch = \nfraclambda cmu_0alpha_L^22R_K = \nfrace^2Z_02h","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"There exists a deep relationship between the fundamental constants, which also makes them very suitable as a basis for UnitSystem dimensional analysis. All of the formulas on this page are part of the Test suite to guarantee their universal correctness.","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"mu_eu = fracm_em_u qquad\nmu_pu = fracm_pm_u qquad\nmu_pe = fracm_pm_e qquad\nalpha_textinv = frac1alpha qquad\nalpha_G = left(fracm_em_Pright)^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Universe","category":"page"},{"location":"constants.html#MeasureSystems.Universe","page":"Physics Constants","title":"MeasureSystems.Universe","text":"Œº‚Çë·µ§, Œº‚Çö·µ§, Œº‚Çö‚Çë, Œ±inv, Œ±G, Œ©Œõ\n\nPhysical measured dimensionless Coupling values with uncertainty are the electron to proton mass ratio Œº‚Çë·µ§, proton to atomic mass ratio Œº‚Çö·µ§, proton to electron mass ratio Œº‚Çö‚Çë, inverted fine structure constant Œ±inv, and the gravitaional coupling constant Œ±G.\n\njulia> Œº‚Çë·µ§ # electronunit(Universe)\nŒº‚Çë·µ§ = 0.000548579909065 ¬± 1.6e-14\n\njulia> Œº‚Çö·µ§ # protonunit(Universe)\nŒº‚Çö·µ§ = 1.007276466621 ¬± 5.3e-11\n\njulia> Œº‚Çö‚Çë # protonelectron(Universe)\nŒº‚Çë·µ§‚Åª¬πŒº‚Çö·µ§ = 1836.15267343 ¬± 1.1e-7\n\njulia> Œ±inv # 1/finestructure(Universe)\nŒ±‚Åª¬π = 137.035999084 ¬± 2.1e-8\n\njulia> Œ±G # coupling(Universe)\nùò©¬≤ùò§‚Åª¬≤mP‚Åª¬≤R‚àû¬≤Œ±‚Åª‚Å¥2¬≤ = 1.75181e-45 ¬± 3.9e-50\n\njulia> Œ©Œõ # darkenergydensity(Universe)\nŒ©Œõ = 0.6889 ¬± 0.0056\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"turn\nsphere","category":"page"},{"location":"constants.html#MeasureSystems.turn","page":"Physics Constants","title":"MeasureSystems.turn","text":"turn(U::UnitSystem) = 2œÄ/angle(U)\n\nComplete rotation angle of revolution from a full circle.\n\njulia> turn(MetricEngineering)\nœÑ = 6.283185307179586 [rad] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.sphere","page":"Physics Constants","title":"MeasureSystems.sphere","text":"sphere(U::UnitSystem) = turn(U)/angle(U)\n\nComplete spherical solidangle of from a full sphere.\n\njulia> sphere(MetricEngineering)\nœÑ*2 = 12.566370614359172 [rad¬≤] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Fundamental-Constants-1","page":"Physics Constants","title":"Fundamental Constants","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"c = frac1alpha_Lsqrtmu_0varepsilon_0 = frac1alphasqrtfracE_hm_e = frachbaralpham_e r_e  = frace^2k_ehbaralpha = fracm_e^2Ghbaralpha_G","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.lightspeed","category":"page"},{"location":"constants.html#MeasureSystems.lightspeed","page":"Physics Constants","title":"MeasureSystems.lightspeed","text":"lightspeed(U::UnitSystem) = 1/sqrt(vacuumpermeability(U)*vacuumpermittivity(U))/lorentz(U)\n\nSpeed of light in a vacuum ùò§ for massless particles (m‚ãÖs‚Åª¬π or ft‚ãÖs‚Åª¬π).\n\njulia> lightspeed(Metric) # m‚ãÖs‚Åª¬π\nùò§ = 2.99792458e8 [m*s‚Åª¬π] Metric\n\njulia> lightspeed(English) # ft‚ãÖs‚Åª¬π\nùò§*ft‚Åª¬π = 9.835710564304461e8 [ft*s‚Åª¬π] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"h = 2pihbar = frac2ealpha_LK_J = frac8alphalambda cmu_0K_J^2 = frac4alpha_L^2K_J^2R_K","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.planck","category":"page"},{"location":"constants.html#MeasureSystems.planck","page":"Physics Constants","title":"MeasureSystems.planck","text":"planck(x) = turn(x)*planckreduced(x)\n\nPlanck constant ùò© is energy per electromagnetic frequency (J‚ãÖs or ft‚ãÖlb‚ãÖs).\n\njulia> planck(SI2019) # J‚ãÖs\nùò© = 6.62607015e-34 [kg*m¬≤s‚Åª¬π] SI2019\n\njulia> planck(SI2019)*lightspeed(SI2019) # J‚ãÖm\nùò©*ùò§ = 1.9864458571489286e-25 [kg*m¬≥s‚Åª¬≤] SI2019\n\njulia> planck(CODATA) # J‚ãÖs\nRK‚Åª¬πKJ‚Åª¬≤2¬≤ = 6.626070039e-34 ¬± 8.2e-42 [kg*m¬≤s‚Åª¬π] CODATA\n\njulia> planck(Conventional) # J‚ãÖs\nRK90‚Åª¬πKJ90‚Åª¬≤2¬≤ = 6.626068854361325e-34 [kg*m¬≤s‚Åª¬π] Conventional\n\njulia> planck(SI2019)/elementarycharge(SI2019) # eV‚ãÖs\nùò©*ùò¶‚Åª¬π = 4.135667696923859e-15 [kg*m¬≤s‚Åª¬πC‚Åª¬π] SI2019\n\njulia> planck(SI2019)*lightspeed(SI2019)/elementarycharge(SI2019) # eV‚ãÖm\nùò©*ùò§*ùò¶‚Åª¬π = 1.2398419843320026e-6 [kg*m¬≥s‚Åª¬≤C‚Åª¬π] SI2019\n\njulia> planck(British) # ft‚ãÖlb‚ãÖs\nùò©*g‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π = 4.887138541095932e-34 [lb*ft*s] British\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"hbar = frach2pi = fracealpha_Lpi K_J = frac4alphapilambda cmu_0K_J^2 = frac2alpha_Lpi K_J^2R_K","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.planckreduced","category":"page"},{"location":"constants.html#MeasureSystems.planckreduced","page":"Physics Constants","title":"MeasureSystems.planckreduced","text":"planckreduced(x) = planck(x)/turn(x)\n\nReduced Planck constant ƒß is a Planck per radian (J‚ãÖs‚ãÖrad‚Åª¬π or ft‚ãÖlb‚ãÖs‚ãÖrad‚Åª¬π).\n\njulia> planckreduced(SI2019) # J‚ãÖs‚ãÖrad‚Åª¬π\nùò©*œÑ‚Åª¬π = 1.0545718176461565e-34 [kg*m¬≤s‚Åª¬π] SI2019\n\njulia> planckreduced(SI2019)*lightspeed(SI2019) # J‚ãÖm‚ãÖrad‚Åª¬π\nùò©*ùò§*œÑ‚Åª¬π = 3.1615267734966903e-26 [kg*m¬≥s‚Åª¬≤] SI2019\n\njulia> planckreduced(CODATA) # J‚ãÖs‚ãÖrad‚Åª¬π\nRK‚Åª¬πKJ‚Åª¬≤œÑ‚Åª¬π2¬≤ = 1.0545718e-34 ¬± 1.3e-42 [kg*m¬≤s‚Åª¬π] CODATA\n\njulia> planckreduced(Conventional) # J‚ãÖs‚ãÖrad‚Åª¬π\nRK90‚Åª¬πKJ90‚Åª¬≤œÑ‚Åª¬π2¬≤ = 1.054571611438857e-34 [kg*m¬≤s‚Åª¬π] Conventional\n\njulia> planckreduced(SI2019)/elementarycharge(SI2019) # eV‚ãÖs‚ãÖrad‚Åª¬π\nùò©*ùò¶‚Åª¬πœÑ‚Åª¬π = 6.582119569509067e-16 [kg*m¬≤s‚Åª¬πC‚Åª¬π] SI2019\n\njulia> planckreduced(SI2019)*lightspeed(SI2019)/elementarycharge(SI2019) # eV‚ãÖm‚ãÖrad‚Åª¬π\nùò©*ùò§*ùò¶‚Åª¬πœÑ‚Åª¬π = 1.973269804593025e-7 [kg*m¬≥s‚Åª¬≤C‚Åª¬π] SI2019\n\njulia> planckreduced(British) # ft‚ãÖlb‚ãÖs‚ãÖrad‚Åª¬π\nùò©*g‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬πœÑ‚Åª¬π = 7.778122563903315e-35 [lb*ft*s] British\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"m_P = sqrtfrachbar cG = fracm_esqrtalpha_G = frac2R_infty hcalpha^2sqrtalpha_G","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"planckmass","category":"page"},{"location":"constants.html#MeasureSystems.planckmass","page":"Physics Constants","title":"MeasureSystems.planckmass","text":"planckmass(U::UnitSystem) = electronmass(U)/sqrt(coupling(U))\n\nPlanck mass factor mP from the gravitational coupling constant Œ±G (kg or slugs).\n\njuila> planckmass(Metric)*lightspeed(Metric)^2/elementarycharge(Metric) # eV‚ãÖùò§‚Åª¬≤\nùò©‚Åª¬π·êü¬≤ùò§‚Åµ·êü¬≤mP*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 1.22089e28 ¬± 1.3e23 [kg*m¬≤s‚Åª¬≤C‚Åª¬π] Metric\n\njuila> planckmass(Metric) # kg\nmP = 2.176434e-8 ¬± 2.4e-13 [kg] Metric\n\njuila> planckmass(Metric)/atomicmass(Metric) # m·µ§\nùò©‚Åª¬πùò§*mP*R‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª¬π = 1.310679e19 ¬± 1.4e14 [ùüô] Metric\n\njuila> planckmass(Metric)*lightspeed(Metric)^2/elementarycharge(Metric)/sqrt(ùüê^2*œÑ) # eV‚ãÖùò§‚Åª¬≤\nùò©‚Åª¬π·êü¬≤ùò§‚Åµ·êü¬≤mP*Œ±‚Åª¬π·êü¬≤2‚Åª‚Åπ·êü¬≤5‚Åª‚Å∑·êü¬≤ = 2.435323e27 ¬± 2.7e22 [kg*m¬≤s‚Åª¬≤C‚Åª¬π] Metric\n\njuila> planckmass(Metric)/sqrt(ùüê^2*œÑ) # kg\nmP*œÑ‚Åª¬π·êü¬≤2‚Åª¬π = 4.341358e-9 ¬± 4.8e-14 [kg] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"G = frachbar cm_P^2 = frachbar calpha_Gm_e^2 = fracc^3alpha^4alpha_G8pi R_infty^2 h = frackappa c^48pi","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"newton","category":"page"},{"location":"constants.html#MeasureSystems.newton","page":"Physics Constants","title":"MeasureSystems.newton","text":"newton(U::UnitSystem) = lightspeed(U)*planckreduced(U)/planckmass(U)^2\n\nUniversal gravitational constant G of Newton's law (m¬≥‚ãÖkg‚Åª¬π‚ãÖs‚Åª¬≤ or ft¬≥‚ãÖslug‚Åª¬π‚ãÖs‚Åª¬≤).\n\njuila> newton(Metric) # m¬≥‚ãÖkg‚Åª¬π‚ãÖs‚Åª¬≤\nùò©*ùò§*mP‚Åª¬≤œÑ‚Åª¬π = 6.6743e-11 ¬± 1.5e-15 [kg‚Åª¬πm¬≥s‚Åª¬≤] Metric\n\njulia> newton(English) # ft¬≥‚ãÖlbm‚Åª¬π‚ãÖs‚Åª¬≤\nùò©*ùò§*mP‚Åª¬≤g‚ÇÄ‚Åª¬πft‚Åª¬≤lb*œÑ‚Åª¬π = 3.322929e-11 ¬± 7.3e-16 [lbf*lbm‚Åª¬≤ft¬≤] English\n\njulia> newton(IAU) # au¬≥‚ãÖM‚òâ‚Åª¬π‚ãÖday‚Åª¬≤\nk¬≤ = 0.00029591220828559115 [M‚òâ‚Åª¬πau¬≥D‚Åª¬≤] IAU‚òâ\n\njulia> newton(Astronomical) # N‚ãÖs‚Å¥‚ãÖm‚Åª‚Å¥\nùüè = 1.0 [FL‚Åª‚Å¥T‚Å¥] Astronomical\n\njulia> newton(PlanckGauss)\nùüè = 1.0 [M‚Åª¬≤] PlanckGauss\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"kappa = frac8pi Gc^4 = frac8pihbarc^3m_P^2 = frac8pihbaralpha_Gc^3m_e^2 = fracalpha^4alpha_GR_infty^2 h c","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"einstein","category":"page"},{"location":"constants.html#MeasureSystems.einstein","page":"Physics Constants","title":"MeasureSystems.einstein","text":"einstein(U::UnitSystem) = 2sphere(U)*newton(U)/lightspeed(U)^4\n\nEinstein's gravitational constant from the Einstein field equations (s‚ãÖ¬≤‚ãÖm‚Åª¬π‚ãÖkg‚Åª¬π).\n\njulia> einstein(Metric) # s¬≤‚ãÖm‚Åª¬π‚ãÖkg‚Åª¬π\nùò©*ùò§‚Åª¬≥mP‚Åª¬≤2¬≤ = 2.076648e-43 ¬± 4.5999999999999995e-48 [kg‚Åª¬πm‚Åª¬πs¬≤] Metric\n\njulia> einstein(IAU) # day¬≤‚ãÖau‚Åª¬π‚ãÖM‚òâ‚Åª¬π\nùò§‚Åª‚Å¥au‚Å¥k¬≤œÑ*2‚Åª¬≤‚Å∂3‚Åª¬π¬≤5‚Åª‚Å∏ = 8.27497345359e-12 ¬± 6.6e-22 [M‚òâ‚Åª¬πau‚Åª¬πD¬≤] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"kappa = frac8pi Gc^2 = frac8pihbarcm_P^2 = frac8pihbaralpha_Gcm_e^2 = fraccalpha^4alpha_GR_infty^2 h","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"einstein2","category":"page"},{"location":"constants.html#MeasureSystems.einstein2","page":"Physics Constants","title":"MeasureSystems.einstein2","text":"einstein2(U::UnitSystem) = 2sphere(U)*newton(U)/lightspeed(U)^2\n\nEinstein's gravitational constant from the Einstein field equations (m‚ãÖkg‚Åª¬π).\n\njulia> einstein2(Metric) # m‚ãÖkg‚Åª¬π\nùò©*ùò§‚Åª¬πmP‚Åª¬≤2¬≤ = 1.866398e-26 ¬± 4.1e-31 [kg‚Åª¬πm] Metric\n\njulia> einstein2(IAU) # au‚ãÖM‚òâ‚Åª¬π\nùò§‚Åª¬≤au¬≤k¬≤œÑ*2‚Åª¬π¬≤3‚Åª‚Å∂5‚Åª‚Å¥ = 2.480759573063e-7 ¬± 9.9e-18 [M‚òâ‚Åª¬πau] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"g_0 = MLT^-2F^-1","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.gravity","category":"page"},{"location":"constants.html#MeasureSystems.gravity","page":"Physics Constants","title":"MeasureSystems.gravity","text":"gravity(U::UnitSystem) # mass*acceleration/force\n\nGravitational force reference used in technical engineering units (kg‚ãÖm‚ãÖN‚Åª¬π‚ãÖs‚Åª¬≤).\n\njulia> gravity(Metric)\nùüè = 1.0 [ùüô] Metric\n\njulia> gravity(MetricEngineering) # m‚ãÖkg‚ãÖN‚Åª¬π‚ãÖs‚Åª¬≤\ng‚ÇÄ = 9.80665 [kgf‚Åª¬πkg*m*s‚Åª¬≤] MetricEngineering\n\njulia> gravity(English) # ft‚ãÖlbm‚ãÖlbf‚Åª¬π‚ãÖs‚Åª¬≤\ng‚ÇÄ*ft‚Åª¬π = 32.17404855643044 [lbf‚Åª¬πlbm*ft*s‚Åª¬≤] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Atomic-Constants-1","page":"Physics Constants","title":"Atomic Constants","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"m_u = fracM_uN_A = fracm_emu_eu = fracm_pmu_pu = frac2R_infty hmu_eucalpha^2 = fracm_Pmu_eusqrtalpha_G","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"atomicmass","category":"page"},{"location":"constants.html#MeasureSystems.atomicmass","page":"Physics Constants","title":"MeasureSystems.atomicmass","text":"atomicmass(U::UnitSystem) = M·µ§/avogadro(U) # ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2 = 0.00099999999966 ¬± 3.1e-13 [kg*mol‚Åª¬π] SI2019 ‚âà 0.001-3.5e-13\n\nAtomic mass unit m·µ§ of 1/12 of the C‚ÇÅ‚ÇÇ carbon-12 atom's mass  (kg or slugs).\n\njulia> atomicmass(Metric) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2 = 1.6605390666e-27 ¬± 5.1e-37 [kg] Metric\n\njulia> atomicmass(Metric)/electronmass(Metric) # m‚Çë\nŒº‚Çë·µ§‚Åª¬π = 1822.888486209 ¬± 5.3e-8 [ùüô] Metric\n\njulia> atomicmass(Metric)*lightspeed(Metric)^2 # J\nùò©*ùò§*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2 = 1.4924180856e-10 ¬± 4.6e-20 [kg*m¬≤s‚Åª¬≤] Metric\n\njulia> atomicmass(SI2019)*lightspeed(SI2019)^2/elementarycharge(SI2019) # eV‚ãÖùò§‚Åª¬≤\nùò©*ùò§*ùò¶‚Åª¬πR‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2 = 9.3149410242e8 ¬± 0.29 [kg*m¬≤s‚Åª¬≤C‚Åª¬π] SI2019\n\njulia> atomicmass(British) # lb\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πg‚ÇÄ‚Åª¬πft*lb‚Åª¬π2 = 1.13783069118e-28 ¬± 3.4999999999999996e-38 [lb*ft‚Åª¬πs¬≤] British\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"m_p = mu_pu m_u = mu_pufracM_uN_A = mu_pem_e = mu_pefrac2R_infty hcalpha^2 = m_Pmu_pesqrtalpha_G","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"protonmass","category":"page"},{"location":"constants.html#MeasureSystems.protonmass","page":"Physics Constants","title":"MeasureSystems.protonmass","text":"protonmass(U::UnitSystem) = protonunit(U)*atomicmass(U)\n\nProton mass m‚Çö of subatomic particle with +ùò¶ elementary charge  (kg or mass).\n\njulia> protonmass(Metric) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πŒº‚Çö·µ§*2 = 1.67262192369e-27 ¬± 5.2000000000000004e-37 [kg] Metric\n\njulia> protonmass(SI2019)*lightspeed(SI2019)^2/elementarycharge(SI2019) # eV‚ãÖùò§‚Åª¬≤\nùò©*ùò§*ùò¶‚Åª¬πR‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πŒº‚Çö·µ§*2 = 9.3827208816e8 ¬± 0.29 [kg*m¬≤s‚Åª¬≤C‚Åª¬π] SI2019\n\njulia> protonmass(Metric)/atomicmass(Metric) # m·µ§\nŒº‚Çö·µ§ = 1.007276466621 ¬± 5.3e-11 [ùüô] Metric\n\njulia> protonmass(Metric)/electronmass(Metric) # m‚Çë\nŒº‚Çë·µ§‚Åª¬πŒº‚Çö·µ§ = 1836.15267343 ¬± 1.1e-7 [ùüô] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"m_e = mu_eum_u = mu_eufracM_uN_A = fracm_pmu_pe = frac2R_infty hcalpha^2 = m_Psqrtalpha_G","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.electronmass","category":"page"},{"location":"constants.html#MeasureSystems.electronmass","page":"Physics Constants","title":"MeasureSystems.electronmass","text":"electronmass(U::UnitSystem) = protonmass(U)/protonelectron(U) # Œ±inv^2*R‚àû*2ùò©/ùò§\n\nElectron rest mass m‚Çë of subatomic particle with -ùò¶ elementary charge  (kg or slugs).\n\njulia> electronmass(Metric) # kg\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 9.1093837016e-31 ¬± 2.8e-40 [kg] Metric\n\njulia> electronmass(Metric)/atomicmass(Metric) # Da\nŒº‚Çë·µ§ = 0.000548579909065 ¬± 1.6e-14\n\njulia> electronmass(Metric)*lightspeed(Metric)^2 # J\nùò©*ùò§*R‚àû*Œ±‚Åª¬≤2 = 8.1871057769e-14 ¬± 2.5e-23 [kg*m¬≤s‚Åª¬≤] Metric\n\njulia> electronmass(SI2019)*lightspeed(SI2019)^2/elementarycharge(SI2019) # eV‚ãÖùò§‚Åª¬≤\nùò©*ùò§*ùò¶‚Åª¬πR‚àû*Œ±‚Åª¬≤2 = 510998.95 ¬± 0.00016 [kg*m¬≤s‚Åª¬≤C‚Åª¬π] SI2019\n\njulia> electronmass(English) # lb\nùò©*ùò§‚Åª¬πR‚àû*Œ±‚Åª¬≤lb‚Åª¬π2 = 2.00827533796e-30 ¬± 6.2e-40 [lbm] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"E_h = m_e(calpha)^2 = frachbar calphaa_0 = frachbar^2m_ea_0^2 = 2R_infty hc = m_Psqrtalpha_G(calpha)^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"hartree","category":"page"},{"location":"constants.html#MeasureSystems.hartree","page":"Physics Constants","title":"MeasureSystems.hartree","text":"hartree(U::UnitSystem) = electronmass(U)*(lightspeed(U)*finestructure(U))^2 # m‚Çë*(ùò§/Œ±inv)^2\n\nHartree electric potential energy E‚Çï of the hydrogen atom at ground state is 2R‚àû*ùò©*ùò§ (J).\n\njulia> hartree(SI2019)/elementarycharge(SI2019) # eV\nùò©*ùò§*ùò¶‚Åª¬πR‚àû*2 = 27.211386245989 ¬± 5.2e-11 [kg*m¬≤s‚Åª¬≤C‚Åª¬π] SI2019\n\njulia> hartree(Metric) # J\nùò©*ùò§*R‚àû*2 = 4.3597447222072e-18 ¬± 8.3e-30 [kg*m¬≤s‚Åª¬≤] Metric\n\njulia> hartree(CGS) # erg\nùò©*ùò§*R‚àû*2‚Å∏5‚Å∑ = 4.3597447222072e-11 ¬± 8.3e-23 [g*cm¬≤s‚Åª¬≤] Gauss\n\njulia> hartree(Metric)*avogadro(Metric)/1000 # kJ‚ãÖmol‚Åª¬π\nùò§¬≤Œ±¬≤Œº‚Çë·µ§*2‚Åª‚Å∂3‚Åª¬≥5‚Åª¬≥ = 12155.0909277 ¬± 3.7e-6 [kg*m¬≤s‚Åª¬≤mol‚Åª¬π] Metric\n\njulia> hartree(Metric)*avogadro(Metric)/kilocalorie(Metric) # kcal‚ãÖmol‚Åª¬π\nùò§¬≤Œ±¬≤Œº‚Çë·µ§*Œ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤2‚Åª‚Å∏3‚Åª¬≤5‚Åª‚Å∑43 = 627.09920344 ¬± 1.9e-7 [mol‚Åª¬π] Metric\n\njulia> 2rydberg(Metric)/100 # E‚Çï/ùò©/ùò§/100 cm‚Åª¬π\nR‚àû*2‚Åª¬π5‚Åª¬≤ = 219474.6313632 ¬± 4.2e-7 [m‚Åª¬π] Metric\n\njulia> hartree(Metric)/planck(Metric)/10^12 # THz\nùò§*R‚àû*2 = 6.579683920502e15 ¬± 13000.0 [s‚Åª¬π] Metric\n\njulia> hartree(Metric)/boltzmann(Metric) # K\nkB‚Åª¬πùò§¬≤NA‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª¬≥5‚Åª¬≥ = 315775.024913 ¬± 9.7e-5 [K] Metric\n\nIn a Gaussian unit system where 4œÄ*Œµ‚ÇÄ == 1 the Hartree energy is ùò¶^2/a‚ÇÄ.\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"R_infty = fracE_h2hc = fracm_e calpha^22h = fracalpha4pi a_0 = fracm_e r_e c2ha_0 = fracalpha^2m_ec4pihbar  = fracm_Pcalpha^2sqrtalpha_G2h","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"rydberg","category":"page"},{"location":"constants.html#MeasureSystems.rydberg","page":"Physics Constants","title":"MeasureSystems.rydberg","text":"rydberg(U::UnitSystem) = hartree(U)/2planck(U)/lightspeed(U) # E‚Çï/2ùò©/ùò§\n\nRydberg constant R‚àû is lowest energy photon capable of ionizing atom at ground state (m‚Åª¬π).\n\njulia> rydberg(Metric) # m‚Åª¬π\nR‚àû = 1.097373156816e7 ¬± 2.1e-5 [m‚Åª¬π] Metric\n\nThe Rydberg constant for hydrogen RH is R‚àû*m‚Çö/(m‚Çë+m‚Çö) (m‚Åª¬π).\n\njulia> rydberg(Metric)*protonmass(Metric)/(electronmass(Metric)+protonmass(Metric)) # m‚Åª¬π\n1.09677583403e7 ¬± 0.0048 [m‚Åª¬π] Metric\n\nRydberg unit of photon energy Ry is ùò©*ùò§*R‚àû or E‚Çï/2 (J).\n\njulia> hartree(Metric)/2 # J\nùò©*ùò§*R‚àû = 2.1798723611036e-18 ¬± 4.2e-30 [kg*m¬≤s‚Åª¬≤] Metric\n\njulia> hartree(SI2019)/ùüê/charge(SI2019) # eV\nùò©*ùò§*ùò¶‚Åª¬πR‚àû = 13.605693122994 ¬± 2.6e-11 [kg*m¬≤s‚Åª¬≤C‚Åª¬π] SI2019\n\nRydberg photon frequency ùò§*R‚àû or E‚Çï/2ùò© (Hz).\n\njulia> lightspeed(Metric)*rydberg(Metric) # Hz\nùò§*R‚àû = 3.2898419602509e15 ¬± 6300.0 [s‚Åª¬π] Metric\n\nRydberg wavelength 1/R‚àû (m).\n\njulia> ùüè/rydberg(Metric) # m\nR‚àû‚Åª¬π = 9.112670505824e-8 ¬± 1.7e-19 [m] Metric\n\njulia> ùüè/rydberg(Metric)/œÑ # m‚ãÖrad‚Åª¬π\nR‚àû‚Åª¬πœÑ‚Åª¬π = 1.4503265557696e-8 ¬± 2.8e-20 [m] Metric\n\nPrecision measurements of the Rydberg constants are within a relative standard uncertainty of under 2 parts in 10¬π¬≤, and is chosen to constrain values of other physical constants.\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"a_0 = frachbarm_ecalpha = frachbar^2k_e m_ee^2 = fracmu_pea_0^*mu_pe+1 = fracr_ealpha^2 = fracalpha4pi R_infty","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"bohr","category":"page"},{"location":"constants.html#MeasureSystems.bohr","page":"Physics Constants","title":"MeasureSystems.bohr","text":"bohr(U) = planckreduced(U)/electronmass(U)/lightspeed(U)/finestructure(U)\n\nBohr radius of the hydrogen atom in its ground state a‚ÇÄ (m).\n\njulia> bohr(Metric) # m\nR‚àû‚Åª¬πŒ±*œÑ‚Åª¬π2‚Åª¬π = 5.29177210902e-11 ¬± 8.1e-21 [m] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"a_0^* = left(1+frac1mu_peright)a_0","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"bohrreduced","category":"page"},{"location":"constants.html#MeasureSystems.bohrreduced","page":"Physics Constants","title":"MeasureSystems.bohrreduced","text":"bohrreduced(U::UnitSystem) = bohr(U)*(1+1/protonelectron(U))\n\nReduced Bohr radius including the effect of reduced mass in hydrogen atom (m).\n\njulia> bohrreduced(Metric) # m\nR‚àû‚Åª¬πŒ±*œÑ‚Åª¬π2‚Åª¬π*1.000544617021487 = 5.29465409819e-11 ¬± 8.1e-21 [m] Metric\n\njulia> bohrreduced(Metric)/bohr(Metric) # a‚ÇÄ\n1.000544617021487 = 1.000544617021487 [ùüô] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"r_e = frachbaralpham_ec = alpha^2a_0 = frace^2 k_em_ec^2 = frac2hR_infty a_0m_ec = fracalpha^34pi R_infty","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"electronradius","category":"page"},{"location":"constants.html#MeasureSystems.electronradius","page":"Physics Constants","title":"MeasureSystems.electronradius","text":"electronradius(U) = finestructure(U)*planckreduced(U)/electronmass(U)/lightspeed(U)\n\nClassical electron radius or Lorentz radius or Thomson scattering length (m).\n\njulia> electronradius(Metric) # m\nR‚àû‚Åª¬πŒ±¬≥œÑ‚Åª¬π2‚Åª¬π = 2.8179403261999996e-15 ¬± 1.2999999999999998e-24 [m] Metric\n\njulia> electronradius(CODATA) # m\nR‚àû‚Åª¬πŒ±¬≥œÑ‚Åª¬π2‚Åª¬π = 2.8179403261999996e-15 ¬± 1.2999999999999998e-24 [m] CODATA\n\njulia> electronradius(Conventional) # m\nR‚àû‚Åª¬πŒ±¬≥œÑ‚Åª¬π2‚Åª¬π = 2.8179403261999996e-15 ¬± 1.2999999999999998e-24 [m] Conventional\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Thermodynamic-Constants-1","page":"Physics Constants","title":"Thermodynamic Constants","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"M_u = m_uN_A = N_Afracm_emu_eu = N_Afracm_pmu_pu = N_Afrac2R_infty hmu_eucalpha^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.molarmass","category":"page"},{"location":"constants.html#MeasureSystems.molarmass","page":"Physics Constants","title":"MeasureSystems.molarmass","text":"molarmass(U::UnitSystem) = avogadro(U)*electronmass(U)/electronunit(U)\n\nMolar mass constant M·µ§ is the ratio of the molarmass and relativemass of a chemical.\n\njulia> molarmass(CGS) # g‚ãÖmol‚Åª¬π\nùüè = 1.0 [g] Gauss\n\njulia> molarmass(CGS2019) # g‚ãÖmol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 [MN‚Åª¬π] EMU2019\n\njulia> molarmass(Metric) # kg‚ãÖmol‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 [kg*mol‚Åª¬π] Metric\n\njulia> molarmass(SI2019) # kg‚ãÖmol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2 = 0.00099999999966 ¬± 3.1e-13 [kg*mol‚Åª¬π] SI2019\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"N_A = fracR_uk_B = fracM_um_u = M_ufracmu_eum_e = M_ufracmu_eucalpha^22R_infty h","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"avogadro","category":"page"},{"location":"constants.html#MeasureSystems.avogadro","page":"Physics Constants","title":"MeasureSystems.avogadro","text":"avogadro(x) = universalgas(x)/boltzmann(x) # M·µ§/atomicmass(x), M·µ§ ‚âà 0.001-3.5e-13\n\nAvogadro NA is molarmass(x)/atomicmass(x) number of atoms in a 12 g sample of C‚ÇÅ‚ÇÇ.\n\njulia> avogadro(SI2019) # mol‚Åª¬π\nNA = 6.02214076e23 [mol‚Åª¬π] SI2019\n\njulia> avogadro(Metric) # mol‚Åª¬π\nùò©‚Åª¬πùò§*R‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª‚Å¥5‚Åª¬≥ = 6.0221407621e23 ¬± 1.9e14 [mol‚Åª¬π] Metric\n\njulia> avogadro(English) # lb-mol‚Åª¬π\nùò©‚Åª¬πùò§*R‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*lb*2‚Åª¬π = 2.73159710074e26 ¬± 8.4e16 [lb-mol‚Åª¬π] English\n\njulia> avogadro(British) # slug-mol‚Åª¬π\nùò©‚Åª¬πùò§*R‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*g‚ÇÄ*ft‚Åª¬πlb*2‚Åª¬π = 8.7886537756e27 ¬± 2.7e18 [slug-mol‚Åª¬π] British\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"k_B = fracR_uN_A = m_ufracR_uM_u = fracm_e R_umu_euM_u = frac2R_uR_infty hM_u mu_eucalpha^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.boltzmann","category":"page"},{"location":"constants.html#MeasureSystems.boltzmann","page":"Physics Constants","title":"MeasureSystems.boltzmann","text":"boltzmann(x) = universalgas(x)/avogadro(x)\n\nBoltzmann constant kB is the entropy amount of a unit number microstate permutation.\n\npressure*molecularmass == density*boltzmann*temperature\n\nIt satisfies the ideal gas law.\n\njulia> boltzmann(SI2019) # J‚ãÖK‚Åª¬π\nkB = 1.380649e-23 [kg*m¬≤s‚Åª¬≤K‚Åª¬π] SI2019\n\njulia> boltzmann(Metric) # J‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 1.3806489995299998e-23 ¬± 4.2999999999999996e-33 [kg*m¬≤s‚Åª¬≤K‚Åª¬π] Metric\n\njulia> boltzmann(SI2019)/elementarycharge(SI2019) # eV‚ãÖK‚Åª¬π\nkB*ùò¶‚Åª¬π = 8.617333262145179e-5 [kg*m¬≤s‚Åª¬≤C‚Åª¬πK‚Åª¬π] SI2019\n\njulia> boltzmann(SI2019)/planck(SI2019) # Hz‚ãÖK‚Åª¬π\nkB*ùò©‚Åª¬π = 2.0836619123327576e10 [s‚Åª¬πK‚Åª¬π] SI2019\n\njulia> boltzmann(CGS) # erg‚ãÖK‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2¬π¬π5¬π‚Å∞ = 1.3806489995299999e-16 ¬± 4.3e-26 [g*cm¬≤s‚Åª¬≤K‚Åª¬π] Gauss\n\njulia> boltzmann(SI2019)/calorie(SI2019) # cal·µ¢‚Çú‚ãÖK‚Åª¬π\nkB*Œ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤2‚Åª¬≤3‚Åª¬≤5‚Åª¬π43 = 3.2976728498006145e-24 [K‚Åª¬π] SI2019\n\njulia> boltzmann(SI2019)*¬∞R/calorie(SI2019) # cal·µ¢‚Çú‚ãÖ¬∞R‚Åª¬π\nkB*Œ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤2‚Åª¬≤3‚Åª‚Å¥43 = 1.832040472111452e-24 [K‚Åª¬π] SI2019\n\njulia> boltzmann(Brtish) # ft‚ãÖlb‚ãÖ¬∞R‚Åª¬π\nkB*ùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πg‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π2‚Å¥3‚Åª¬≤5‚Å¥ = 5.6573024638e-24 ¬± 1.7e-33 [lb*ft*¬∞R‚Åª¬π] British\n\njulia> boltzmann(SI2019)/planck(SI2019)/lightspeed(SI2019) # m‚Åª¬π‚ãÖK‚Åª¬π\nkB*ùò©‚Åª¬πùò§‚Åª¬π = 69.50348004861274 [m‚Åª¬πK‚Åª¬π] SI2019\n\njulia> avogadro(SI2019)*boltzmann(SI2019)/calorie(SI2019) # cal·µ¢‚Çú‚ãÖmol‚Åª¬π‚ãÖK‚Åª¬π\nkB*NA*Œ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤2‚Åª¬≤3‚Åª¬≤5‚Åª¬π43 = 1.9859050081929637 [K‚Åª¬πmol‚Åª¬π] SI2019\n\njulia> dB(boltzmann(SI2019)) # dB(W‚ãÖK‚Åª¬π‚ãÖHz‚Åª¬π)\ndB(kB) = -228.5991671732176 [dB(kg*m¬≤s‚Åª¬≤K‚Åª¬π)] SI2019\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"R_u = k_B N_A = k_BfracM_um_u = k_BM_ufracmu_eum_e = k_BM_ufracmu_eucalpha^22hR_infty","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"universalgas","category":"page"},{"location":"constants.html#MeasureSystems.universalgas","page":"Physics Constants","title":"MeasureSystems.universalgas","text":"universalgas(x) = boltzmann(x)*avogadro(x)\n\nUniversal gas constant R·µ§ is factored into specific gasconstant(x)*molarmass(x) values.\n\npressure*molarmass == density*universal*temperature\n\nIt satisfies the ideal gas law.\n\njulia> universalgas(SI2019) # J‚ãÖK‚Åª¬π‚ãÖmol‚Åª¬π\nkB*NA = 8.31446261815324 [kg*m¬≤s‚Åª¬≤K‚Åª¬πmol‚Åª¬π] SI2019\n\njulia> universalgas(English)/ùüê^4/ùüë^2 # psi‚ãÖft¬≥‚ãÖ¬∞R‚Åª¬π‚ãÖlb-mol‚Åª¬π\nkB*NA*g‚ÇÄ‚Åª¬πft‚Åª¬π2‚Åª¬π3‚Åª‚Å¥5‚Å¥ = 10.731577089016287 [lbf*ft*¬∞R‚Åª¬πlb-mol‚Åª¬π] English\n\njulia> universalgas(English)/standardpressure(English) # atm‚ãÖft¬≥‚ãÖR‚Åª¬π‚ãÖlb-mol‚Åª¬π\nkB*NA*ft‚Åª¬≥lb*atm‚Åª¬π2¬≥3‚Åª¬≤5‚Å¥ = 0.7302405072952731 [ft¬≥¬∞R‚Åª¬πlb-mol‚Åª¬π] English\n\njulia> universalgas(English)/thermalunit(English) # BTU‚ãÖ¬∞R‚Åª¬π‚ãÖlb-mol‚Åª¬π\nkB*NA*Œ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤2‚Åª¬≤3‚Åª¬≤5‚Åª¬π43 = 1.9859050081929637 [¬∞R‚Åª¬πlb-mol‚Åª¬π] English\n\njulia> universalgas(Metric)/calorie(Metric) # cal‚ãÖK‚Åª¬π‚ãÖmol‚Åª¬π\nkB*NA*Œ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤2‚Åª¬≤3‚Åª¬≤5‚Åª¬π43 = 1.9859050081929637 [K‚Åª¬πmol‚Åª¬π] Metric\n\njulia> universalgas(Metric)/standardpressure(Metric) # atm‚ãÖm¬≥‚ãÖK‚Åª¬π‚ãÖmol‚Åª¬π\nkB*NA*atm‚Åª¬π = 8.205736608095969e-5 [m¬≥K‚Åª¬πmol‚Åª¬π] Metric\n\njulia> universalgas(Metric)/torr(Metric) # m¬≥‚ãÖtorr‚ãÖK‚Åª¬π‚ãÖmol‚Åª¬π\nkB*NA*atm‚Åª¬π2¬≥5*19 = 0.062363598221529364 [m¬≥K‚Åª¬πmol‚Åª¬π] Metric\n\njulia> universalgas(English)/torr(English) # ft¬≥‚ãÖtorr‚ãÖ¬∞R‚Åª¬π‚ãÖlb-mol‚Åª¬π\nkB*NA*ft‚Åª¬≥lb*atm‚Åª¬π2‚Å∂3‚Åª¬≤5‚Åµ19 = 554.9827855444075 [ft¬≥¬∞R‚Åª¬πlb-mol‚Åª¬π] English\n\njulia> universalgas(CGS) # erg‚ãÖK‚Åª¬π‚ãÖmol‚Åª¬π\nkB*NA*2‚Å∑5‚Å∑ = 8.31446261815324e7 [g*cm¬≤s‚Åª¬≤K‚Åª¬π] Gauss\n\njulia> universalgas(British) # ft‚ãÖlb‚ãÖ¬∞R‚Åª¬π‚ãÖslug-mol‚Åª¬π\nkB*NA*ft‚Åª¬≤2¬≥3‚Åª¬≤5‚Å¥ = 49720.07265826846 [lb*ft*¬∞R‚Åª¬πslug-mol‚Åª¬π] British\n\nThe 1976 United States Standard Atmosphere used R* = 8.31432 exactly.\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"sigma = frac2pi^5 k_B^415h^3c^2 = fracpi^2 k_B^460hbar^3c^2 = frac32pi^5 h15c^6alpha^8 left(fracR_uR_inftymu_euM_uright)^4","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"stefan","category":"page"},{"location":"constants.html#MeasureSystems.stefan","page":"Physics Constants","title":"MeasureSystems.stefan","text":"stefan(U::UnitSystem) = œÄ^4/2*sphere(U)*boltzmann(U)^4/(15planck(U)^3*lightspeed(U)^2)\n\nStefan-Boltzmann proportionality œÉ of black body radiation (W‚ãÖm‚Åª¬≤‚ãÖK‚Åª‚Å¥ or ?‚ãÖft‚Åª¬≤‚ãÖ¬∞R‚Åª‚Å¥).\n\njulia> stefan(Metric) # W‚ãÖm‚Åª¬≤‚ãÖK‚Åª‚Å¥\nkB‚Å¥ùò©*ùò§‚Åª‚Å∂NA‚Å¥R‚àû‚Å¥Œ±‚Åª‚Å∏Œº‚Çë·µ§‚Åª‚Å¥œÑ‚Åµ2¬π¬≤3‚Åª¬π5¬π¬π = 5.6703744114e-8 ¬± 7.0e-17 [kg*s‚Åª¬≥K‚Åª‚Å¥] Metric\n\njulia> stefan(CGS) # erg‚ãÖcm‚Åª¬≤‚ãÖs‚Åª¬π‚ãÖK‚Åª‚Å¥\nkB‚Å¥ùò©*ùò§‚Åª‚Å∂NA‚Å¥R‚àû‚Å¥Œ±‚Åª‚Å∏Œº‚Çë·µ§‚Åª‚Å¥œÑ‚Åµ2¬π‚Åµ3‚Åª¬π5¬π‚Å¥ = 5.6703744114e-5 ¬± 7.0e-14 [g*s‚Åª¬≥K‚Åª‚Å¥] Gauss\n\njulia> stefan(Metric)*day(Metric)/(calorie(Metric)*100^2) # cal‚ãÖcm‚Åª¬≤‚ãÖday‚Åª¬π‚ãÖK‚Åª‚Å¥\nkB‚Å¥ùò©*ùò§‚Åª‚Å∂NA‚Å¥R‚àû‚Å¥Œ±‚Åª‚Å∏Œº‚Çë·µ§‚Åª‚Å¥Œ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤œÑ‚Åµ2¬π‚Å∑5¬π¬≤43 = 0.0011701721683 ¬± 1.4e-12 [m‚Åª¬≤K‚Åª‚Å¥] Metric\n\njulia> stefan(English) # lb‚ãÖs‚Åª¬π‚ãÖft‚Åª¬≥‚ãÖ¬∞R‚Åª‚Å¥\nkB‚Å¥ùò©*ùò§‚Åª‚Å∂NA‚Å¥R‚àû‚Å¥Œ±‚Åª‚Å∏Œº‚Çë·µ§‚Åª‚Å¥g‚ÇÄ‚Åª¬πft*lb‚Åª¬πœÑ‚Åµ2¬π¬≤3‚Åª‚Åπ5¬π‚Åµ = 3.7012656963e-10 ¬± 4.6e-19 [lbf*ft‚Åª¬πs‚Åª¬π¬∞R‚Åª‚Å¥rad¬≤] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"a = 4fracsigmac = frac8pi^5 k_B^415h^3c^3 = fracpi^2 k_B^415hbar^3c^3 = frac2^7pi^5 h15c^7alpha^8 left(fracR_uR_inftymu_euM_uright)^4","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"radiationdensity","category":"page"},{"location":"constants.html#MeasureSystems.radiationdensity","page":"Physics Constants","title":"MeasureSystems.radiationdensity","text":"radiationdensity(U::UnitSystem) = 4stefan(U)/lightspeed(U)\n\nRaditation density constant of black body radiation (J‚ãÖm‚Åª¬≥‚ãÖK‚Åª‚Å¥ or lb‚ãÖft‚Åª¬≤‚ãÖ¬∞R‚Åª‚Å¥).\n\njulia> radiationdensity(Metric) # J‚ãÖm‚Åª¬≥‚ãÖK‚Åª‚Å¥\nkB‚Å¥ùò©*ùò§‚Åª‚Å∑NA‚Å¥R‚àû‚Å¥Œ±‚Åª‚Å∏Œº‚Çë·µ§‚Åª‚Å¥œÑ‚Åµ2¬π‚Å¥3‚Åª¬π5¬π¬π = 7.5657332399e-16 ¬± 9.3e-25 [kg*m‚Åª¬πs‚Åª¬≤K‚Åª‚Å¥] Metric\n\njulia> radiationdensity(CGS) # erg‚ãÖcm‚Åª¬≥‚ãÖK‚Åª‚Å¥\nkB‚Å¥ùò©*ùò§‚Åª‚Å∑NA‚Å¥R‚àû‚Å¥Œ±‚Åª‚Å∏Œº‚Çë·µ§‚Åª‚Å¥œÑ‚Åµ2¬π‚Åµ3‚Åª¬π5¬π¬≤ = 7.565733239899999e-15 ¬± 9.3e-24 [g*cm‚Åª¬πs‚Åª¬≤K‚Åª‚Å¥] Gauss\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"K_textcd = fracI_vint_0^infty bary(lambda)cdotfracdI_edlambdadlambda qquad \nbaryleft(fracc540times 10^12right)cdot I_e = 1","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.luminousefficacy","category":"page"},{"location":"constants.html#MeasureSystems.luminousefficacy","page":"Physics Constants","title":"MeasureSystems.luminousefficacy","text":"luminousefficacy(U::UnitSystem{1}) = 1\nluminousefficacy(U::UnitSystem) = Kcd = 683.01969009009power(U)\n\nLuminous efficacy of monochromatic radiation Kcd of frequency 540 THz (lm‚ãÖW‚Åª¬π).\n\njulia> luminousefficacy(Metric) # lm‚ãÖW‚Åª¬π\nKcd = 683.01969009009 [kg‚Åª¬πm‚Åª¬≤s¬≥lm] Metric\n\njulia> luminousefficacy(CODATA) # lm‚ãÖW‚Åª¬π\nùò©*Kcd*RK*KJ¬≤2‚Åª¬≤ = 683.0197015 ¬± 8.5e-6 [kg‚Åª¬πm‚Åª¬≤s¬≥lm] CODATA\n\njulia> luminousefficacy(Conventional) # lm‚ãÖW‚Åª¬π\nùò©*Kcd*RK90*KJ90¬≤2‚Åª¬≤ = 683.0198236454071 [kg‚Åª¬πm‚Åª¬≤s¬≥lm] Conventional\n\njulia> luminousefficacy(CGS) # lm‚ãÖs‚ãÖerg‚Åª¬π\nKcd*2‚Åª‚Å∑5‚Åª‚Å∑ = 6.830196900900899e-5 [g‚Åª¬πcm‚Åª¬≤s¬≥lm] Gauss\n\njulia> luminousefficacy(British) # lm‚ãÖs¬≥‚ãÖslug‚ãÖft‚Åª¬≤\nKcd*g‚ÇÄ*ft*lb = 926.0503548878947 [lb‚Åª¬πft‚Åª¬πs*lm] British\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Electromagnetic-Constants-1","page":"Physics Constants","title":"Electromagnetic Constants","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"lambda = frac4pialpha_Bmu_0alpha_L = 4pi k_evarepsilon_0 = Z_0varepsilon_0c","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.rationalization","category":"page"},{"location":"constants.html#MeasureSystems.rationalization","page":"Physics Constants","title":"MeasureSystems.rationalization","text":"rationalization(U::UnitSystem) = sphere(U)*biotsavart(U)/vacuumpermeability(U)/lorentz(U)\n\nConstant of magnetization and polarization density or sphere(U)*coulomb(U)*permittivity(U).\n\njulia> rationalization(Metric)\nùüè = 1.0 [ùüô] Metric\n\njulia> rationalization(Gauss)\nœÑ*2 = 12.566370614359172 [ùüô] Gauss\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"mu_0 = frac1varepsilon_0 (calpha_L)^2 = frac4pi k_elambda (calpha_L)^2 = frac2halphalambda c(ealpha_L)^2 = frac2R_Kalphalambda calpha_L^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.vacuumpermeability","category":"page"},{"location":"constants.html#MeasureSystems.vacuumpermeability","page":"Physics Constants","title":"MeasureSystems.vacuumpermeability","text":"vacuumpermeability(U::UnitSystem) = 1/vacuumpermittivity(U)/(lightspeed(U)*lorentz(U))^2\n\nMagnetic permeability in a classical vacuum defined as Œº‚ÇÄ in SI units (H‚ãÖm‚Åª¬π, kg‚ãÖm¬≤‚ãÖC‚Åª¬≤).\n\njulia> vacuumpermeability(Metric) # H‚ãÖm‚Åª¬π\nœÑ*2‚Åª‚Å∂5‚Åª‚Å∑ = 1.2566370614359173e-6 [kg*m*C‚Åª¬≤] Metric\n\njulia> vacuumpermeability(Conventional) # H‚ãÖm‚Åª¬π\nùò§‚Åª¬πŒ±*RK90*2 = 1.25663703976e-6 ¬± 1.9e-16 [kg*m*C‚Åª¬≤] Conventional\n\njulia> vacuumpermeability(CODATA) # H‚ãÖm‚Åª¬π\nùò§‚Åª¬πŒ±*RK*2 = 1.25663706194e-6 ¬± 3.5e-16 [kg*m*C‚Åª¬≤] CODATA\n\njulia> vacuumpermeability(SI2019) # H‚ãÖm‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*2 = 1.25663706212e-6 ¬± 1.9e-16 [kg*m*C‚Åª¬≤] SI2019\n\njulia> vacuumpermeability(EMU) # abH‚ãÖcm‚Åª¬π\nùüè = 1.0 [s¬≤] EMU\n\njulia> vacuumpermeability(ESU) # statH‚ãÖcm‚Åª¬π\nùò§‚Åª¬≤2‚Åª‚Å¥5‚Åª‚Å¥ = 1.1126500560536186e-21 [cm‚Åª¬≤s‚Å¥] ESU\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"varepsilon_0 = frac1mu_0(calpha_L)^2 = fraclambda4pi k_e = fraclambda e^22alpha hc = fraclambda2R_Kalpha c","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"vacuumpermittivity","category":"page"},{"location":"constants.html#MeasureSystems.vacuumpermittivity","page":"Physics Constants","title":"MeasureSystems.vacuumpermittivity","text":"vacuumpermittivity(U::UnitSystem) = 1/vacuumpermeability(U)/(lightspeed(U)*lorentz(U))^2\n\nDielectric permittivity constant Œµ‚ÇÄ of a classical vacuum (C¬≤‚ãÖN‚Åª¬π‚ãÖm‚Åª¬≤).\n\njulia> vacuumpermittivity(Metric) # F‚ãÖm‚Åª¬π\nùò§‚Åª¬≤œÑ‚Åª¬π2‚Å∂5‚Å∑ = 8.85418781762039e-12 [kg‚Åª¬πm‚Åª¬≥s¬≤C¬≤] Metric\n\njulia> vacuumpermittivity(Conventional) # F‚ãÖm‚Åª¬π\nùò§‚Åª¬πŒ±‚Åª¬πRK90‚Åª¬π2‚Åª¬π = 8.8541879703e-12 ¬± 1.4e-21 [kg‚Åª¬πm‚Åª¬≥s¬≤C¬≤] Conventional\n\njulia> vacuumpermittivity(CODATA) # F‚ãÖm‚Åª¬π\nùò§‚Åª¬πŒ±‚Åª¬πRK‚Åª¬π2‚Åª¬π = 8.8541878141e-12 ¬± 2.4e-21 [kg‚Åª¬πm‚Åª¬≥s¬≤C¬≤] CODATA\n\njulia> vacuumpermittivity(SI2019) # F‚ãÖm‚Åª¬π\nùò©‚Åª¬πùò§‚Åª¬πùò¶¬≤Œ±‚Åª¬π2‚Åª¬π = 8.8541878128e-12 ¬± 1.4e-21 [kg‚Åª¬πm‚Åª¬≥s¬≤C¬≤] SI2019\n\njulia> vacuumpermittivity(EMU) # abF‚ãÖcm‚Åª¬π\nùò§‚Åª¬≤2‚Åª‚Å¥5‚Åª‚Å¥ = 1.1126500560536186e-21 [cm‚Åª¬≤] EMU\n\njulia> vacuumpermittivity(ESU) # statF‚ãÖcm‚Åª¬π\nùüè = 1.0 [s‚Åª¬≤] ESU\n\njulia> vacuumpermittivity(SI2019)/elementarycharge(SI2019) # ùò¶¬≤‚ãÖeV‚Åª¬π‚ãÖm‚Åª¬π\nùò©‚Åª¬πùò§‚Åª¬πùò¶*Œ±‚Åª¬π2‚Åª¬π = 5.52634935805e7 ¬± 0.0085 [kg‚Åª¬πm‚Åª¬≥s¬≤C] SI2019\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"k_e = fraclambda4pivarepsilon_0 = fracmu_0lambda (calpha_L)^24pi = fracalpha hbar ce^2 = fracR_Kalpha c2pi = fracalpha_Balpha_Lmu_0varepsilon_0 = k_mc^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"coulomb","category":"page"},{"location":"constants.html#MeasureSystems.coulomb","page":"Physics Constants","title":"MeasureSystems.coulomb","text":"coulomb(U::UnitSystem) = rationalization(U)/sphere(U)/vacuumpermittivity(U)\n\nElectrostatic proportionality constant k‚Çë for the Coulomb's law force (N‚ãÖm¬≤‚ãÖC‚Åª¬≤).\n\njulia> coulomb(Metric) # N‚ãÖm¬≤‚ãÖC‚Åª¬≤\nùò§¬≤2‚Åª‚Å∑5‚Åª‚Å∑ = 8.987551787368176e9 [kg*m¬≥s‚Åª¬≤C‚Åª¬≤] Metric\n\njulia> coulomb(CODATA) # N¬∑m¬≤‚ãÖC‚Åª¬≤\nùò§*Œ±*RK*œÑ‚Åª¬π = 8.9875517909e9 ¬± 2.5 [kg*m¬≥s‚Åª¬≤C‚Åª¬≤] CODATA\n\njulia> coulomb(SI2019) # N¬∑m¬≤‚ãÖC‚Åª¬≤\nùò©*ùò§*ùò¶‚Åª¬≤Œ±*œÑ‚Åª¬π = 8.9875517923e9 ¬± 1.4 [kg*m¬≥s‚Åª¬≤C‚Åª¬≤] SI2019\n\njulia> coulomb(Conventional) # N¬∑m¬≤‚ãÖC‚Åª¬≤\nùò§*Œ±*RK90*œÑ‚Åª¬π = 8.9875516323e9 ¬± 1.4 [kg*m¬≥s‚Åª¬≤C‚Åª¬≤] Conventional\n\njulia> coulomb(EMU) # dyn‚ãÖcm¬≤‚ãÖabC‚Åª¬≤\nùò§¬≤2‚Å¥5‚Å¥ = 8.987551787368175e20 [cm¬≤] EMU\n\njulia> coulomb(ESU) # dyn‚ãÖcm¬≤‚ãÖstatC‚Åª¬≤\nùüè = 1.0 [s¬≤] ESU\n\njulia> coulomb(HLU) # dyn‚ãÖcm¬≤‚ãÖhlC‚Åª¬≤\nœÑ‚Åª¬π2‚Åª¬π = 0.07957747154594767 [T¬≤] LorentzHeaviside\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"k_m = alpha_Lalpha_B = mu_0alpha_L^2fraclambda4pi = frack_ec^2 = fracalpha hbarce^2 = fracR_Kalpha2pi c","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"ampere","category":"page"},{"location":"constants.html#MeasureSystems.ampere","page":"Physics Constants","title":"MeasureSystems.ampere","text":"ampere(U::UnitSystem) = lorentz(U)*biotsavart(U) # coulomb(U)/lightspeed(U)^2\n\nMagnetic proportionality constant k‚Çò for the Ampere's law force (N¬∑s¬≤‚ãÖC‚Åª¬≤).\n\njulia> ampere(Metric) # H‚ãÖm‚Åª¬π\n2‚Åª‚Å∑5‚Åª‚Å∑ = 1.0e-7 [kg*m*C‚Åª¬≤] Metric\n\njulia> ampere(CODATA) # H‚ãÖm‚Åª¬π\nùò§‚Åª¬πŒ±*RK*œÑ‚Åª¬π = 1.0000000004e-7 ¬± 2.8e-17 [kg*m*C‚Åª¬≤] CODATA\n\njulia> ampere(SI2019) # H‚ãÖm‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*œÑ‚Åª¬π = 1.00000000055e-7 ¬± 1.5e-17 [kg*m*C‚Åª¬≤] SI2019\n\njulia> ampere(Conventional) # H‚ãÖm‚Åª¬π\nùò§‚Åª¬πŒ±*RK90*œÑ‚Åª¬π = 9.9999998275e-8 ¬± 1.5e-17 [kg*m*C‚Åª¬≤] Conventional\n\njulia> ampere(EMU) # abH‚ãÖm‚Åª¬π\nùüè = 1.0 [s¬≤] EMU\n\njulia> ampere(ESU) # statH‚ãÖm‚Åª¬π\nùò§‚Åª¬≤2‚Åª‚Å¥5‚Åª‚Å¥ = 1.1126500560536186e-21 [cm‚Åª¬≤s‚Å¥] ESU\n\njulia> ampere(HLU) # hlH‚ãÖm‚Åª¬π\nùò§‚Åª¬≤œÑ‚Åª¬π2‚Åª‚Åµ5‚Åª‚Å¥ = 8.854187817620392e-23 [L‚Åª¬≤T‚Å¥] LorentzHeaviside\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"alpha_L = frac1csqrtmu_0varepsilon_0 = fracalpha_Bmu_0varepsilon_0k_e = frac4pi alpha_Blambdamu_0 = frack_malpha_B","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"MeasureSystems.lorentz","category":"page"},{"location":"constants.html#MeasureSystems.lorentz","page":"Physics Constants","title":"MeasureSystems.lorentz","text":"lorentz(U::UnitSystem) = sphere(U)*biotsavart(U)/vacuumpermeability(U)/rationalization(U)\n\nElectromagnetic proportionality constant Œ±L for the Lorentz's law force (dimensionless).\n\njulia> lorentz(Metric)\nùüè = 1.0 [ùüô] Metric\n\njulia> lorentz(Thomson)\n2‚Åª¬π = 0.5 [ùüô] Thomson\n\njulia> lorentz(Gauss)\nùò§‚Åª¬π2‚Åª¬≤5‚Åª¬≤ = 3.33564095198152e-11 [cm‚Åª¬πs] Gauss\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"alpha_B = mu_0alpha_Lfraclambda4pi = alpha_Lmu_0varepsilon_0k_e = frack_malpha_L = frack_ecsqrtmu_0varepsilon_0","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"biotsavart","category":"page"},{"location":"constants.html#MeasureSystems.biotsavart","page":"Physics Constants","title":"MeasureSystems.biotsavart","text":"biotsavart(U::UnitSystem) = vacuumpermeability(U)*lorentz(U)*rationalization(U)/sphere(U)\n\nMagnetostatic proportionality constant Œ±B for the Biot-Savart's law (H/m).\n\njulia> biotsavart(Metric) # H‚ãÖm‚Åª¬π\n2‚Åª‚Å∑5‚Åª‚Å∑ = 1.0e-7 [kg*m*C‚Åª¬≤] Metric\n\njulia> biotsavart(CODATA) # H‚ãÖm‚Åª¬π\nùò§‚Åª¬πŒ±*RK*œÑ‚Åª¬π = 1.0000000004e-7 ¬± 2.8e-17 [kg*m*C‚Åª¬≤] CODATA\n\njulia> biotsavart(SI2019) # H‚ãÖm‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*œÑ‚Åª¬π = 1.00000000055e-7 ¬± 1.5e-17 [kg*m*C‚Åª¬≤] SI2019\n\njulia> biotsavart(Conventional) # H‚ãÖm‚Åª¬π\nùò§‚Åª¬πŒ±*RK90*œÑ‚Åª¬π = 9.9999998275e-8 ¬± 1.5e-17 [kg*m*C‚Åª¬≤] Conventional\n\njulia> biotsavart(EMU) # abH‚ãÖcm‚Åª¬π\nùüè = 1.0 [s¬≤] EMU\n\njulia> biotsavart(ESU) # statH‚ãÖcm‚Åª¬π\nùò§‚Åª¬≤2‚Åª‚Å¥5‚Åª‚Å¥ = 1.1126500560536186e-21 [cm‚Åª¬≤s‚Å¥] ESU\n\njulia> biotsavart(Gauss) # abH‚ãÖcm‚Åª¬π\nùò§‚Åª¬π2‚Åª¬≤5‚Åª¬≤ = 3.33564095198152e-11 [cm‚Åª¬πs¬≥] Gauss\n\njulia> biotsavart(HLU) # hlH‚ãÖcm‚Åª¬π\nùò§‚Åª¬πœÑ‚Åª¬π2‚Åª¬≥5‚Åª¬≤ = 2.6544187294380724e-12 [L‚Åª¬πT¬≥] LorentzHeaviside\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"e = sqrtfrac2halphaZ_0 = frac2alpha_LK_JR_K = sqrtfrachR_K = frachK_J2alpha_L = fracFN_A","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"elementarycharge","category":"page"},{"location":"constants.html#MeasureSystems.elementarycharge","page":"Physics Constants","title":"MeasureSystems.elementarycharge","text":"elementarycharge(U::UnitSystem) = ‚àö(2planck(U)*finestructure(U)/vacuumimpedance(U))\n\nQuantized elementary charge ùò¶ of a proton or electron 2/(klitzing(U)*josephson(U)) (C).\n\njulia> elementarycharge(SI2019) # C\nùò¶ = 1.602176634e-19 [C] SI2019\n\njulia> elementarycharge(Metric) # C\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤Œ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.60217663444e-19 ¬± 1.2e-29 [C] Metric\n\njulia> elementarycharge(CODATA) # C\nRK‚Åª¬πKJ‚Åª¬π2 = 1.6021766206999998e-19 ¬± 9.9e-28 [C] CODATA\n\njulia> elementarycharge(Conventional) # C\nRK90‚Åª¬πKJ90‚Åª¬π2 = 1.602176491612271e-19 [C] Conventional\n\njulia> elementarycharge(EMU) # abC\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤Œ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Åµ·êü¬≤5‚Åµ·êü¬≤ = 1.60217663444e-20 ¬± 1.2000000000000001e-30 [g¬π·êü¬≤cm¬π·êü¬≤] EMU\n\njulia> elementarycharge(ESU) # statC\nùò©¬π·êü¬≤ùò§¬π·êü¬≤Œ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Åπ·êü¬≤5‚Åπ·êü¬≤ = 4.80320471388e-10 ¬± 3.7e-20 [g¬π·êü¬≤cm¬π‚ãÖ‚Åµs‚Åª¬π] ESU\n\njulia> elementarycharge(Planck) # sqrt(4œÄ/Œ±inv)\nŒ±¬π·êü¬≤œÑ¬π·êü¬≤2¬π·êü¬≤ = 0.302822120872 ¬± 2.3e-11 [M] Planck\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"F = eN_A = N_Asqrtfrac2halphaZ_0 = frac2N_Aalpha_LK_JR_K = N_AsqrtfrachR_K = frachK_JN_A2alpha_L","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"faraday","category":"page"},{"location":"constants.html#MeasureSystems.faraday","page":"Physics Constants","title":"MeasureSystems.faraday","text":"faraday(U::UnitSystem) = elementarycharge(U)*avogadro(U)\n\nElectric charge per mole of electrons ùîâ based on elementary charge (C‚ãÖmol‚Åª¬π).\n\njulia> faraday(SI2019) # C‚ãÖmol‚Åª¬π\nùò¶*NA = 96485.33212331001 [C*mol‚Åª¬π] SI2019\n\njulia> faraday(Metric) # C‚ãÖmol‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤R‚àû‚Åª¬πŒ±‚Åµ·êü¬≤Œº‚Çë·µ§*œÑ‚Åª¬π·êü¬≤2‚Åª¬π·êü¬≤5¬π·êü¬≤ = 96485.332183 ¬± 3.7e-5 [C*mol‚Åª¬π] Metric\n\njulia> faraday(CODATA) # C‚ãÖmol‚Åª¬π\nùò§*R‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*KJ*2‚Åª‚Åµ5‚Åª¬≥ = 96485.33297 ¬± 0.0006 [C*mol‚Åª¬π] CODATA\n\njulia> faraday(Conventional) # C‚ãÖmol‚Åª¬π\nùò§*R‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*KJ90*2‚Åª‚Åµ5‚Åª¬≥ = 96485.342448 ¬± 3.0e-5 [C*mol‚Åª¬π] Conventional\n\njulia> faraday(EMU) # abC‚ãÖmol‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤R‚àû‚Åª¬πŒ±‚Åµ·êü¬≤Œº‚Çë·µ§*œÑ‚Åª¬π·êü¬≤2‚Åª¬≥·êü¬≤5‚Åª¬π·êü¬≤ = 9648.5332183 ¬± 3.7e-6 [g¬π·êü¬≤cm¬π·êü¬≤s‚Åª¬π] EMU\n\njulia> faraday(ESU) # statC‚ãÖmol‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬≥·êü¬≤R‚àû‚Åª¬πŒ±‚Åµ·êü¬≤Œº‚Çë·µ§*œÑ‚Åª¬π·êü¬≤2¬π·êü¬≤5¬≥·êü¬≤ = 2.8925574896e14 ¬± 110000.0 [g¬π·êü¬≤cm¬≥·êü¬≤s‚Åª¬≤] ESU\n\njulia> faraday(Metric)/kilocalorie(Metric) # kcal‚ãÖ(V-g-e)‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤R‚àû‚Åª¬πŒ±‚Åµ·êü¬≤Œº‚Çë·µ§*Œ©·µ¢‚Çú*V·µ¢‚Çú‚Åª¬≤œÑ‚Åª¬π·êü¬≤2‚Åª¬π¬π·êü¬≤3‚Åª¬≤5‚Åª‚Å∑·êü¬≤43 = 23.0454706695 ¬± 8.9e-9 [kg‚Åª¬πm‚Åª¬≤s¬≤C*mol‚Åª¬π] Metric\n\njulia> faraday(Metric)/3600 # A‚ãÖh‚ãÖmol‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤R‚àû‚Åª¬πŒ±‚Åµ·êü¬≤Œº‚Çë·µ§*œÑ‚Åª¬π·êü¬≤2‚Åª‚Åπ·êü¬≤3‚Åª¬≤5‚Åª¬≥·êü¬≤ = 26.801481162 ¬± 1.0e-8 [C*mol‚Åª¬π] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Z_0 = mu_0lambda calpha_L^2 = fraclambdavarepsilon_0 c = lambdaalpha_Lsqrtfracmu_0varepsilon_0 = frac2halphae^2 = 2R_Kalpha","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"vacuumimpedance","category":"page"},{"location":"constants.html#MeasureSystems.vacuumimpedance","page":"Physics Constants","title":"MeasureSystems.vacuumimpedance","text":"vacuumimpedance(U::UnitSystem) = vacuumpermeability(U)*lightspeed(U)*rationalization(U)*lorentz(U)^2\n\nVacuum impedance of free space Z‚ÇÄ is magnitude ratio of electric to magnetic field (Œ©).\n\njulia> vacuumimpedance(Metric) # Œ©\nùò§*œÑ*2‚Åª‚Å∂5‚Åª‚Å∑ = 376.7303134617706 [kg*m¬≤s‚Åª¬πC‚Åª¬≤] Metric\n\njulia> vacuumimpedance(Conventional) # Œ©\nŒ±*RK90*2 = 376.730306964 ¬± 5.8e-8 [kg*m¬≤s‚Åª¬πC‚Åª¬≤] Conventional\n\njulia> vacuumimpedance(CODATA) # Œ©\nŒ±*RK*2 = 376.73031361 ¬± 1.0e-7 [kg*m¬≤s‚Åª¬πC‚Åª¬≤] CODATA\n\njulia> vacuumimpedance(SI2019) # Œ©\nùò©*ùò¶‚Åª¬≤Œ±*2 = 376.730313667 ¬± 5.8e-8 [kg*m¬≤s‚Åª¬πC‚Åª¬≤] SI2019\n\njulia> 120œÄ # 3e8*Œº‚ÇÄ # Œ©\n376.99111843077515\n\njulia> vacuumimpedance(EMU) # abŒ©\nùò§*œÑ*2¬≥5¬≤ = 3.767303134617706e11 [cm*s] EMU\n\njulia> vacuumimpedance(ESU) # statŒ©\nùò§‚Åª¬πœÑ*2‚Åª¬π5‚Åª¬≤ = 4.191690043903363e-10 [cm‚Åª¬πs¬≥] ESU\n\njulia> vacuumimpedance(HLU) # hlŒ©\nùò§‚Åª¬π2‚Åª¬≤5‚Åª¬≤ = 3.33564095198152e-11 [L‚Åª¬πT¬≥] LorentzHeaviside\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"G_0 = frac2e^2h = frac4alphaZ_0 = frac2R_K = frachK_J^22alpha_L^2 = frac2F^2hN_A^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"conductancequantum","category":"page"},{"location":"constants.html#MeasureSystems.conductancequantum","page":"Physics Constants","title":"MeasureSystems.conductancequantum","text":"conductancequantum(U::UnitSystem) = 2elementarycharge(U)^2/planck(U) # 2/klitzing(U)\n\nConductance quantum G‚ÇÄ is a quantized unit of electrical conductance (S).\n\njulia> conductancequantum(SI2019) # S\nùò©‚Åª¬πùò¶¬≤2 = 7.748091729863649e-5 [kg‚Åª¬πm‚Åª¬≤s*C¬≤] SI2019\n\njulia> conductancequantum(Metric) # S\nùò§‚Åª¬πŒ±*œÑ‚Åª¬π2‚Å∏5‚Å∑ = 7.7480917341e-5 ¬± 1.2e-14 [kg‚Åª¬πm‚Åª¬≤s*C¬≤] Metric\n\njulia> conductancequantum(Conventional) # S\nRK90‚Åª¬π2 = 7.74809186773062e-5 [kg‚Åª¬πm‚Åª¬≤s*C¬≤] Conventional\n\njulia> conductancequantum(CODATA) # S\nRK‚Åª¬π2 = 7.748091731e-5 ¬± 1.8e-14 [kg‚Åª¬πm‚Åª¬≤s*C¬≤] CODATA\n\njulia> conductancequantum(EMU) # abS\nùò§‚Åª¬πŒ±*œÑ‚Åª¬π2‚Åª¬π5‚Åª¬≤ = 7.7480917341e-14 ¬± 1.2e-23 [cm‚Åª¬πs‚Åª¬π] EMU\n\njulia> conductancequantum(ESU) # statS\nùò§*Œ±*œÑ‚Åª¬π2¬≥5¬≤ = 6.9636375713e7 ¬± 0.011 [cm*s‚Åª¬≥] ESU\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"R_K = frache^2 = fracZ_02alpha = frac2G_0 = frac4alpha_L^2hK_J^2 = hfracN_A^2F^2","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"klitzing","category":"page"},{"location":"constants.html#MeasureSystems.klitzing","page":"Physics Constants","title":"MeasureSystems.klitzing","text":"klitzing(U::UnitSystem) = planck(U)/elementarycharge(U)^2\n\nQuantized Hall resistance RK (Œ©).\n\njulia> klitzing(SI2019) # Œ©\nùò©*ùò¶‚Åª¬≤ = 25812.80745930451 [kg*m¬≤s‚Åª¬πC‚Åª¬≤] SI2019\n\njulia> klitzing(Metric) # Œ©\nùò§*Œ±‚Åª¬πœÑ*2‚Åª‚Å∑5‚Åª‚Å∑ = 25812.8074452 ¬± 4.0e-6 [kg*m¬≤s‚Åª¬πC‚Åª¬≤] Metric\n\njulia> klitzing(Conventional) # Œ©\nRK90 = 25812.807 [kg*m¬≤s‚Åª¬πC‚Åª¬≤] Conventional\n\njulia> klitzing(CODATA) # Œ©\nRK = 25812.8074555 ¬± 5.9e-6 [kg*m¬≤s‚Åª¬πC‚Åª¬≤] CODATA\n\njulia> klitzing(EMU) # abŒ©\nùò§*Œ±‚Åª¬πœÑ*2¬≤5¬≤ = 2.58128074452e13 ¬± 4000.0 [cm*s] EMU\n\njulia> klitzing(ESU) # statŒ©\nùò§‚Åª¬πŒ±‚Åª¬πœÑ*2‚Åª¬≤5‚Åª¬≤ = 2.87206216508e-8 ¬± 4.4e-18 [cm‚Åª¬πs¬≥] ESU\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"K_J = frac2ealpha_Lh = alpha_Lsqrtfrac8alphahZ_0 = alpha_Lsqrtfrac4hR_K = frac1Phi_0 = frac2Falpha_LhN_A","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"josephson","category":"page"},{"location":"constants.html#MeasureSystems.josephson","page":"Physics Constants","title":"MeasureSystems.josephson","text":"josephson(U::UnitSystem) = 2elementarycharge(U)*lorentz(U)/planck(U) # 1/magneticflux(U)\n\nJosephson constant KJ relating potential difference to irradiation frequency (Hz‚ãÖV‚Åª¬π).\n\njulia> josephson(SI2019) # Hz‚ãÖV‚Åª¬π\nùò©‚Åª¬πùò¶*2 = 4.8359784841698356e14 [kg‚Åª¬πm‚Åª¬≤s*C] SI2019\n\njulia> josephson(Metric) # Hz‚ãÖV‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§‚Åª¬π·êü¬≤Œ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Åπ·êü¬≤5‚Å∑·êü¬≤ = 4.83597848549e14 ¬± 37000.0 [kg‚Åª¬πm‚Åª¬≤s*C] Metric\n\njulia> josephson(Conventional) # Hz‚ãÖV‚Åª¬π\nKJ90 = 4.835979e14 [kg‚Åª¬πm‚Åª¬≤s*C] Conventional\n\njulia> josephson(CODATA) # Hz‚ãÖV‚Åª¬π\nKJ = 4.835978525e14 ¬± 3.0e6 [kg‚Åª¬πm‚Åª¬≤s*C] CODATA\n\njulia> josephson(EMU) # Hz‚ãÖabV‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§‚Åª¬π·êü¬≤Œ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Åπ·êü¬≤ = 4.83597848549e6 ¬± 0.00037 [g‚Åª¬π·êü¬≤cm‚Åª¬≥·êü¬≤] EMU\n\njulia> josephson(ESU) # Hz‚ãÖstatV‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤Œ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Åª¬≥·êü¬≤5‚Åª‚Åµ·êü¬≤ = 1.449789877e17 ¬± 1.1e7 [g‚Åª¬π·êü¬≤cm‚Åª¬π·êü¬≤s‚Åª¬π] ESU\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Phi_0 = frach2ealpha_L = frac1alpha_LsqrtfrachZ_08alpha = frac1alpha_LsqrtfrachR_K4 = frac1K_J = frachN_A2Falpha_L","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"magneticfluxquantum","category":"page"},{"location":"constants.html#MeasureSystems.magneticfluxquantum","page":"Physics Constants","title":"MeasureSystems.magneticfluxquantum","text":"magneticfluxquantum(U::UnitSystem) = planck(U)/2elementarycharge(U)/lorentz(U)\n\nMagnetic flux quantum Œ¶‚ÇÄ is 1/josephson(U) (Wb).\n\njulia> magneticfluxquantum(SI2019) # Wb\nùò©*ùò¶‚Åª¬π2‚Åª¬π = 2.0678338484619295e-15 [kg*m¬≤s‚Åª¬πC‚Åª¬π] SI2019\n\njulia> magneticfluxquantum(Metric) # Wb\nùò©¬π·êü¬≤ùò§¬π·êü¬≤Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Åπ·êü¬≤5‚Åª‚Å∑·êü¬≤ = 2.0678338479e-15 ¬± 1.5999999999999998e-25 [kg*m¬≤s‚Åª¬πC‚Åª¬π] Metric\n\njulia> magneticfluxquantum(Conventional) # Wb\nKJ90‚Åª¬π = 2.0678336278962334e-15 [kg*m¬≤s‚Åª¬πC‚Åª¬π] Conventional\n\njulia> magneticfluxquantum(EMU) # Mx\nùò©¬π·êü¬≤ùò§¬π·êü¬≤Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Å∑·êü¬≤5‚Åπ·êü¬≤ = 2.0678338479e-7 ¬± 1.6e-17 [g¬π·êü¬≤cm¬≥·êü¬≤] EMU\n\njulia> magneticfluxquantum(ESU) # statWb\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2¬≥·êü¬≤5‚Åµ·êü¬≤ = 6.897551264939999e-18 ¬± 5.3e-28 [g¬π·êü¬≤cm¬π·êü¬≤s] ESU\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"mu_B = fracehbaralpha_L2m_e = frachbaralpha_L^2m_eK_JR_K = frach^2K_J8pi m_e = fracalpha_Lhbar F2m_e N_A = fracecalpha^2alpha_L8pi R_infty","category":"page"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"magneton","category":"page"},{"location":"constants.html#MeasureSystems.magneton","page":"Physics Constants","title":"MeasureSystems.magneton","text":"magneton(U::UnitSystem) = elementarycharge(U)*planckreduced(U)*lorentz(U)/2electronmass(U)\n\nBohr magneton ŒºB natural unit for expressing magnetic moment of electron (J‚ãÖT‚Åª¬π).\n\njulia> magneton(SI2019) # J‚ãÖT‚Åª¬π\nùò§*ùò¶*R‚àû‚Åª¬πŒ±¬≤œÑ‚Åª¬π2‚Åª¬≤ = 9.274010078299999e-24 ¬± 2.8e-33 [m¬≤s‚Åª¬πC] SI2019\n\njulia> magneton(Metric) # J‚ãÖT‚Åª¬π\nùò©¬π·êü¬≤ùò§¬π·êü¬≤R‚àû‚Åª¬πŒ±‚Åµ·êü¬≤œÑ‚Åª¬≥·êü¬≤2¬≥·êü¬≤5‚Å∑·êü¬≤ = 9.274010080799999e-24 ¬± 3.5999999999999997e-33 [m¬≤s‚Åª¬πC] Metric\n\njulia> magneton(CODATA) # J‚ãÖT‚Åª¬π\nùò§*R‚àû‚Åª¬πŒ±¬≤RK‚Åª¬πKJ‚Åª¬πœÑ‚Åª¬π2‚Åª¬π = 9.274010001e-24 ¬± 5.8e-32 [m¬≤s‚Åª¬πC] CODATA\n\njulia> magneton(Conventional) # J‚ãÖT‚Åª¬π\nùò§*R‚àû‚Åª¬πŒ±¬≤RK90‚Åª¬πKJ90‚Åª¬πœÑ‚Åª¬π2‚Åª¬π = 9.2740092541e-24 ¬± 2.8e-33 [m¬≤s‚Åª¬πC] Conventional\n\njulia> magneton(EMU2019) # erg‚ãÖG‚Åª¬π\nùò§*ùò¶*R‚àû‚Åª¬πŒ±¬≤œÑ‚Åª¬π2*5¬≥ = 9.2740100783e-21 ¬± 2.8000000000000002e-30 [L¬≤T‚Åª¬πQ] EMU2019\n\njulia> magneton(ESU2019) # statA‚ãÖcm¬≤\nùò§¬≤ùò¶*R‚àû‚Åª¬πŒ±¬≤œÑ‚Åª¬π2¬≥5‚Åµ = 2.78027827689e-10 ¬± 8.5e-20 [L¬≤T‚Åª¬πQ] ESU2019\n\njulia> magneton(SI2019)/elementarycharge(SI2019) # eV‚ãÖT‚Åª¬π\nùò§*R‚àû‚Åª¬πŒ±¬≤œÑ‚Åª¬π2‚Åª¬≤ = 5.788381806e-5 ¬± 1.8e-14 [m¬≤s‚Åª¬π] SI2019\n\njulia> magneton(Hartree) # ùò§‚ãÖƒß‚ãÖm‚Çë‚Åª¬π\n2‚Åª¬π = 0.5 [Q] Hartree\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Derived-Quantities-1","page":"Physics Constants","title":"Derived Quantities","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"second\nminute\nhour\nday\nyear\ngaussianyear\nsiderealyear\nhyperfine\nhubble\ncosmological\nsolarmass\nearthmass\njupitermass\nlunarmass\nastronomicalunit\nlunardistance\nmile\nclarkemile\nnauticalmile\nparsec\nlightyear\ngallon\nlitre\nstandardgravity\nstandardtemperature\nstandardpressure\ninchmercury\ntorr\nkilocalorie\ncalorie\nmeancalorie\nthermalunit\ntonsrefrigeration\nhorsepower\nhorsepowerwatt\nhorsepowermetric\nelectricalhorsepower\nboilerhorsepower","category":"page"},{"location":"constants.html#MeasureSystems.second","page":"Physics Constants","title":"MeasureSystems.second","text":"second(U::UnitSystem) = time(ùüè,U,Metric)\n\nUnit of time defined by hyperfine transition frequency of Cs-133 atom.\n\njulia> second(Metric)\nùüè = 1.0 [s] Metric\n\njulia> second(IAU)\n2‚Åª‚Å∑3‚Åª¬≥5‚Åª¬≤ = 1.1574074074074073e-5 [D] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.minute","page":"Physics Constants","title":"MeasureSystems.minute","text":"minute(U::UnitSystem) = ùüê^2*ùüë*ùüì*second(U)\n\nUnit of time defined by 60 second intervals.\n\njulia> minute(Metric)\n2¬≤3*5 = 60.0 [s] Metric\n\njulia> minute(IAU)\n2‚Åª‚Åµ3‚Åª¬≤5‚Åª¬π = 0.0006944444444444445 [D] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.hour","page":"Physics Constants","title":"MeasureSystems.hour","text":"hour(U::UnitSystem) = ùüê^2*ùüë*ùüì*minute(U)\n\nUnit of time defined by 60 minute intervals.\n\njulia> hour(Metric)\n2‚Å¥3¬≤5¬≤ = 3600.0 [s] Metric\n\njulia> hour(IAU)\n2‚Åª¬≥3‚Åª¬π = 0.041666666666666664 [D] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.day","page":"Physics Constants","title":"MeasureSystems.day","text":"day(U::UnitSystem) = ùüê^3*ùüë*hour(U)\n\nUnit of time defined by 24 hour intervals.\n\njulia> day(Metric)\n2‚Å∑3¬≥5¬≤ = 86400.0 [s] Metric\n\njulia> day(IAU)\nùüè = 1.0 [D] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.year","page":"Physics Constants","title":"MeasureSystems.year","text":"year(U::UnitSystem) = a‚±º*day(U)\n\nUnit of time defined by Julian calendar year interval.\n\njulia> year(Metric)\na‚±º*2‚Å∑3¬≥5¬≤ = 3.15576e7 [s] Metric\n\njulia> year(IAU)\na‚±º = 365.25 [D] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.gaussianyear","page":"Physics Constants","title":"MeasureSystems.gaussianyear","text":"gaussianyear(U::UnitSystem) = (œÑ/k)*day(U)\n\nUnit of time defined by Gaussian gravitational constant.\n\njulia> gaussianyear(Metric)\nk‚Åª¬πœÑ*2‚Å∑3¬≥5¬≤ = 3.155819601539475e7 [s] Metric\n\njulia> gaussianyear(IAU)\nk‚Åª¬πœÑ = 365.25689832632816 [D] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.siderealyear","page":"Physics Constants","title":"MeasureSystems.siderealyear","text":"siderealyear(U::UnitSystem) = œÑ/k/‚àö(ùüè+earthmass(IAU)+lunarmass(IAU))*day(U)\n\nUnit of time defined by Gaussian gravitational constant and the Earth system mass.\n\njulia> siderealyear(Metric)\n3.1558148040218636e7 ¬± 9.8e-8 [s] Metric\n\njulia> siderealyear(IAU)\n365.2563430580861 ¬± 1.1e-12 [D] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.hyperfine","page":"Physics Constants","title":"MeasureSystems.hyperfine","text":"hyperfine(U::UnitSystem) = frequency(ŒîŒΩCs = 9.19263177e9,U)\n\nUnperturbed groundstate hyperfine transition frequency ŒîŒΩCs of caesium-133 atom (Hz).\n\njulia> hyperfine(Metric) # Hz\nŒîŒΩCs = 9.19263177e9 [s‚Åª¬π] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.hubble","page":"Physics Constants","title":"MeasureSystems.hubble","text":"hubble(U::UnitSystem) = time(U,Hubble)\n\nHubble parameter.\n\njulia> hubble(SI2019)\nH0*au‚Åª¬πœÑ*2‚Åª¬π‚Å∞3‚Åª‚Å¥5‚Åª‚Å∂ = 2.193e-18 ¬± 1.4e-20 [s‚Åª¬π] SI2019\n\njulia> hubble(Hubble)\nùüè = 1.0 [L‚Åª¬π] Hubble\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.cosmological","page":"Physics Constants","title":"MeasureSystems.cosmological","text":"cosmological(U::UnitSystem) = 3darkenergydensity(U)*(hubble(U)/lightspeed(U))^2\n\nCosmological constant.\n\njulia> cosmological(SI2019)\nùò§‚Åª¬≤Œ©Œõ*H0¬≤au‚Åª¬≤œÑ¬≤2‚Åª¬≤‚Å∞3‚Åª‚Å∑5‚Åª¬π¬≤ = 1.1059999999999999e-52 ¬± 1.6e-54 [m‚Åª¬≤] SI2019\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.solarmass","page":"Physics Constants","title":"MeasureSystems.solarmass","text":"solarmass(U::UnitSystem) = mass(ùò©‚Åª¬πùò§‚Åª¬πmP¬≤au¬≥k¬≤œÑ*2‚Åª¬π‚Å¥3‚Åª‚Å∂5‚Åª‚Å¥ = 1.988409e30 ¬± 4.4e25,U)\n\nSolar mass estimated from gravitational constant estimates (kg or slug).\n\njulia> solarmass(Metric) # kg\nùò©‚Åª¬πùò§‚Åª¬πmP¬≤au¬≥k¬≤œÑ*2‚Åª¬π‚Å¥3‚Åª‚Å∂5‚Åª‚Å¥ = 1.988409e30 ¬± 4.4e25 [kg] Metric\n\njulia> solarmass(British) # slug\nùò©‚Åª¬πùò§‚Åª¬πmP¬≤g‚ÇÄ‚Åª¬πau¬≥ft*lb‚Åª¬πk¬≤œÑ*2‚Åª¬π‚Å¥3‚Åª‚Å∂5‚Åª‚Å¥ = 1.362493e29 ¬± 3.0e24 [lb*ft‚Åª¬πs¬≤] British\n\njulia> solarmass(English) # lb\nùò©‚Åª¬πùò§‚Åª¬πmP¬≤au¬≥lb‚Åª¬πk¬≤œÑ*2‚Åª¬π‚Å¥3‚Åª‚Å∂5‚Åª‚Å¥ = 4.383692e30 ¬± 9.699999999999999e25 [lbm] English\n\njulia> solarmass(IAUE) # ME\nau¬≥k¬≤GME‚Åª¬π2‚Åª¬π‚Å¥3‚Åª‚Å∂5‚Åª‚Å¥ = 332946.04352 ¬± 0.00067 [ME] IAUE\n\njulia> solarmass(IAUJ) # MJ\nau¬≥k¬≤GMJ‚Åª¬π2‚Åª¬π‚Å¥3‚Åª‚Å∂5‚Åª‚Å¥ = 1047.565482 ¬± 7.4e-5 [MJ] IAUJ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.earthmass","page":"Physics Constants","title":"MeasureSystems.earthmass","text":"earthmass(U::UnitSystem) = mass(ùò©‚Åª¬πùò§‚Åª¬πmP¬≤GME*œÑ = 5.97217e24 ¬± 1.3e20,U)\n\nEarth mass estimated from gravitational constant estimates (kg or slug).\n\njulia> earthmass(Metric) # kg\nùò©‚Åª¬πùò§‚Åª¬πmP¬≤GME*œÑ = 5.97217e24 ¬± 1.3e20 [kg] Metric\n\njulia> earthmass(British) # slug\nùò©‚Åª¬πùò§‚Åª¬πmP¬≤g‚ÇÄ‚Åª¬πft*lb‚Åª¬πGME*œÑ = 4.092234e23 ¬± 9.0e18 [lb*ft‚Åª¬πs¬≤] British\n\njulia> earthmass(English) # lb\nùò©‚Åª¬πùò§‚Åª¬πmP¬≤lb‚Åª¬πGME*œÑ = 1.316637e25 ¬± 2.9e20 [lbm] English\n\njulia> earthmass(IAU) # M‚òâ\nau‚Åª¬≥k‚Åª¬≤GME*2¬π‚Å¥3‚Å∂5‚Å¥ = 3.0034896629e-6 ¬± 6.0e-15 [M‚òâ] IAU‚òâ\n\njulia> earthmass(IAUJ) # MJ\nGME*GMJ‚Åª¬π = 0.0031463521 ¬± 2.2e-10 [MJ] IAUJ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.jupitermass","page":"Physics Constants","title":"MeasureSystems.jupitermass","text":"jupitermass(U::UnitSystem) = mass(ùò©‚Åª¬πùò§‚Åª¬πmP¬≤GMJ*œÑ = 1.898124e27 ¬± 4.2e22,U)\n\nJupiter mass estimated from gravitational constant estimates (kg or slug).\n\njulia> jupitermass(Metric) # kg\nùò©‚Åª¬πùò§‚Åª¬πmP¬≤GMJ*œÑ = 1.898124e27 ¬± 4.2e22 [kg] Metric\n\njulia> jupitermass(British) # slug\nùò©‚Åª¬πùò§‚Åª¬πmP¬≤g‚ÇÄ‚Åª¬πft*lb‚Åª¬πGMJ*œÑ = 1.300628e26 ¬± 2.9e21 [lb*ft‚Åª¬πs¬≤] British\n\njulia> jupitermass(English) # lb\nùò©‚Åª¬πùò§‚Åª¬πmP¬≤lb‚Åª¬πGMJ*œÑ = 4.184647e27 ¬± 9.2e22 [lbm] English\n\njulia> jupitermass(IAU) # M‚òâ\nau‚Åª¬≥k‚Åª¬≤GMJ*2¬π‚Å¥3‚Å∂5‚Å¥ = 0.000954594264 ¬± 6.8e-11 [M‚òâ] IAU‚òâ\n\njulia> jupitermass(IAUE) # ME\nGME‚Åª¬πGMJ = 317.828383 ¬± 2.3e-5 [ME] IAUE\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.lunarmass","page":"Physics Constants","title":"MeasureSystems.lunarmass","text":"lunarmass(U::UnitSystem) = earthmass(U)/ŒºE‚òæ\n\nLunar mass estimated from ŒºE‚òæ Earth-Moon mass ratio (kg or slug).\n\njulia> lunarmass(Metric) # kg\n7.34579e22 ¬± 1.6e18 [kg] Metric\n\njulia> jupitermass(British) # slug\n5.03346e21 ¬± 1.1e17 [lb*ft‚Åª¬πs¬≤] British\n\njulia> lunarmass(English) # lb\n1.619469e23 ¬± 3.6e18 [lbm] English\n\njulia> lunarmass(IAU) # M‚òâ\n3.69430342e-8 ¬± 1.4e-15 [M‚òâ] IAU‚òâ\n\njulia> lunarmass(IAUE) # ME\n0.01230003707 ¬± 4.6e-10 [ME] IAUE\n\njulia> lunarmass(IAUJ) # MJ\n3.87002474e-5 ¬± 3.1e-12 [MJ] IAUJ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.astronomicalunit","page":"Physics Constants","title":"MeasureSystems.astronomicalunit","text":"astronomicalunit(U::UnitSystem) = length(au = 1.495978707e11 ¬± 3.0,U)\n\nStandard astronomical unit from the International Astronomical Union (m or ft).\n\njulia> astronomicalunit(Metric) # m\nau = 1.495978707e11 ¬± 3.0 [m] Metric\n\njulia> astronomicalunit(English) # ft\nau*ft‚Åª¬π = 4.908066624016e11 ¬± 9.8 [ft] English\n\njulia> astronomicalunit(Survey) # ftUS\nau*ftUS‚Åª¬π = 4.908056807883e11 ¬± 9.8 [ft] Survey\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.lunardistance","page":"Physics Constants","title":"MeasureSystems.lunardistance","text":"lunardistance(U::UnitSystem) = length(384402000 = 3.84402e8,U)\n\nStandard distance between the Earth and the Moon (m or ft).\n\njulia> lunardistance(Metric) # m\n384402000 = 3.84402e8 [m] Metric\n\njulia> lunardistance(English) # ft\nft‚Åª¬π*384402000 = 1.2611614173228345e9 [ft] English\n\njulia> lunardistance(Survey) # ftUS\nftUS‚Åª¬π*384402000 = 1.2611588950000002e9 [ft] Survey\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.mile","page":"Physics Constants","title":"MeasureSystems.mile","text":"mile(U::UnitSystem) = length(ft*2‚Åµ3*5*11 = 1609.344,U)\n\nStatute mile (m or ft).\n\njulia> mile(Metric) # m\nft*2‚Åµ3*5*11 = 1609.344 [m] Metric\n\njulia> mile(English) # ft\n2‚Åµ3*5*11 = 5280.0 [ft] English\n\njulia> mile(Survey) # ftUS\nft*ftUS‚Åª¬π2‚Åµ3*5*11 = 5279.989440000001 [ft] Survey\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.clarkemile","page":"Physics Constants","title":"MeasureSystems.clarkemile","text":"clarkemile(U::UnitSystem) = length(2‚Å¥3‚Åª¬≥5‚Åµ = 1851.8518518518517,U)\n\nHistoric nautical mile as defined by the Clarke (m or ft).\n\njulia> clarkemile(Metric) # m\nft*2‚Å∂5*19 = 1853.1840000000002 [m] Metric\n\njulia> clarkemile(English) # ft\n2‚Å∂5*19 = 6080.0 [ft] English\n\njulia> clarkemile(Survey) # ftUS\nft*ftUS‚Åª¬π2‚Å∂5*19 = 6079.987840000001 [ft] Survey\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.nauticalmile","page":"Physics Constants","title":"MeasureSystems.nauticalmile","text":"nauticalmile(U::UnitSystem) = length(2‚Å¥3‚Åª¬≥5‚Åµ = 1851.8518518518517,U)\n\nHistoric nautical mile as defined by the French (m or ft).\n\njulia> nauticalmile(Metric) # m\n2‚Å¥3‚Åª¬≥5‚Åµ = 1851.8518518518517 [m] Metric\n\njulia> nauticalmile(English) # ft\nft‚Åª¬π2‚Å¥3‚Åª¬≥5‚Åµ = 6075.6294352094865 [ft] English\n\njulia> nauticalmile(Survey) # ftUS\nftUS‚Åª¬π2‚Å¥3‚Åª¬≥5‚Åµ = 6075.617283950618 [ft] Survey\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.parsec","page":"Physics Constants","title":"MeasureSystems.parsec","text":"parsec(U::UnitSystem) = astronomicalunit(U)*ùüê^2*ùüë^4*ùüì^3/œÑ\n\nUnit of length defined at which 1 astronomicalunit subtends an angle of 1 arcsecond.\n\njulia> parsec(Metric)\nau*œÑ‚Åª¬π2‚Å∑3‚Å¥5¬≥ = 3.085677581491e16 ¬± 620000.0 [m] Metric\n\njulia> parsec(IAU)\nœÑ‚Åª¬π2‚Å∑3‚Å¥5¬≥ = 206264.80624709636 [au] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.lightyear","page":"Physics Constants","title":"MeasureSystems.lightyear","text":"lightyear(U::UnitSystem) = year(U)*lightspeed(U)\n\nUnit of length defined by distance traveled by light in 1 year unit.\n\njulia> lightyear(Metric)\nùò§*a‚±º*2‚Å∑3¬≥5¬≤ = 9.4607304725808e15 [m] Metric\n\njulia> lightyear(IAU)\nùò§*a‚±º*au‚Åª¬π2‚Å∑3¬≥5¬≤ = 63241.0770843 ¬± 1.3e-6 [au] IAU‚òâ\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.gallon","page":"Physics Constants","title":"MeasureSystems.gallon","text":"gallon(U::UnitSystem) = volume(ùüï*ùüèùüè/ùüê^2,U,English)\n\nUnit of volume derived from the US liquid gallon in cubic inches.\n\njulia> gallon(English)\n2‚Åª‚Å∂3‚Åª¬≤7*11 = 0.13368055555555552 [ft¬≥] English\n\njulia> gallon(Metric)\nft¬≥2‚Åª‚Å∂3‚Åª¬≤7*11 = 0.0037854117839999997 [m¬≥] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.litre","page":"Physics Constants","title":"MeasureSystems.litre","text":"litre(U::UnitSystem) = volume(ùüèùüé^-3,U,Metric)\n\nUnit of volume derived from 1 cubic decimetre.\n\njulia> litre(Metric)\nft¬≥2‚Åª‚Å∂3‚Åª¬≤7*11 = 0.0037854117839999997 [m¬≥] Metric\n\njulia> gallon(English)\n2‚Åª‚Å∂3‚Åª¬≤7*11 = 0.13368055555555552 [ft¬≥] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.standardgravity","page":"Physics Constants","title":"MeasureSystems.standardgravity","text":"standardgravity(U::UnitSystem) = acceleration(g‚ÇÄ = 9.80665,U)\n\nStandard gravity acceleration g‚ÇÄ at geodetic reference latitude (m‚ãÖs‚Åª¬≤ or ft‚ãÖs‚Åª¬≤).\n\njulia> standardgravity(Metric) # m‚ãÖs‚Åª¬≤\ng‚ÇÄ = 9.80665 [m*s‚Åª¬≤] Metric\n\njulia> standardgravity(English) # ft‚ãÖs‚Åª¬≤\ng‚ÇÄ*ft‚Åª¬π = 32.17404855643044 [ft*s‚Åª¬≤] English\n\njulia> standardgravity(Survey) # ftUS‚ãÖs‚Åª¬≤\ng‚ÇÄ*ftUS‚Åª¬π = 32.17398420833334 [ft*s‚Åª¬≤] Survey\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.standardtemperature","page":"Physics Constants","title":"MeasureSystems.standardtemperature","text":"temperature(U::UnitSystem) = temperature(atm = 101325.0,U)\n\nStandard temperature reference level at sea level (K or ¬∞R).\n\njulia> standardtemperature(Metric) # K\nT‚Çõ = 288.16 [K] Metric\n\njulia> standardtemperature(SI2019) # K\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πT‚Çõ*2‚Å¥5¬≥ = 288.159999901 ¬± 8.9e-8 [K] SI2019\n\njulia> standardtemperature(English) # ¬∞R\nT‚Çõ*3¬≤5‚Åª¬π = 518.6880000000001 [¬∞R] English\n\njulia> standardtemperature(English2019) # ¬∞R\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πT‚Çõ*2‚Å¥3¬≤5¬≤ = 518.68799982 ¬± 1.6e-7 [¬∞R] English2019\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.standardpressure","page":"Physics Constants","title":"MeasureSystems.standardpressure","text":"pressure(U::UnitSystem) = pressure(atm = 101325.0,U)\n\nStandard pressure reference level of one atmosphere atm (Pa or lb‚ãÖft‚Åª¬≤).\n\njulia> standardpressure(Metric) # Pa\natm = 101325.0 [kg*m‚Åª¬πs‚Åª¬≤] Metric\n\njulia> standardpressure(English) # lbm‚ãÖft‚Åª¬π‚ãÖs‚Åª¬≤\ng‚ÇÄ‚Åª¬πft¬≤lb‚Åª¬πatm = 2116.2166236739367 [lbf*ft‚Åª¬≤] English\n\njulia> standardpressure(Survey) # lbm‚ãÖftUS‚Åª¬π‚ãÖs‚Åª¬≤\ng‚ÇÄ‚Åª¬πftUS¬≤lb‚Åª¬πatm = 2116.225088565826 [lbf*ft‚Åª¬≤] Survey\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.inchmercury","page":"Physics Constants","title":"MeasureSystems.inchmercury","text":"inchmercury(U::UnitSystem) = pressure(inHg,U,Metric)\n\nUnit of pressure exerted by 1 inch of mercury at standard atmospheric conditions.\n\njuila> inchmercury(Metric)\ninHg‚Åª¬π = 3386.3890000000006 [kg*m‚Åª¬πs‚Åª¬≤] Metric\n\njulia> inchmercury(English)\ng‚ÇÄ‚Åª¬πft¬≤lb‚Åª¬πinHg‚Åª¬π = 70.72620474736304 [lbf*ft‚Åª¬≤] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.torr","page":"Physics Constants","title":"MeasureSystems.torr","text":"torr(U::UnitSystem) = pressure(atm/ùüê^3/ùüì/ùüèùüó,U,Metric)\n\nUnit of pressure exerted by 1 mm of mercury at standard atmospheric conditions.\n\njuila> torr(Metric)\natm*2‚Åª¬≥5‚Åª¬π19‚Åª¬π = 133.32236842105263 [kg*m‚Åª¬πs‚Åª¬≤] Metric\n\njulia> torr(English)\ng‚ÇÄ‚Åª¬πft¬≤lb‚Åª¬πatm*2‚Åª¬≥5‚Åª¬π19‚Åª¬π = 2.784495557465706 [lbf*ft‚Åª¬≤] English\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.kilocalorie","page":"Physics Constants","title":"MeasureSystems.kilocalorie","text":"kilocalorie(U::UnitSystem) = energy(ùüê^5*ùüì^4*ùüë^2/ùüíùüë,U,International)\n\nHeat energy required to raise 1 kg of water by 1 Kelvin (kcal).\n\njulia> kilocalorie(International)\n2‚Åµ3¬≤5‚Å¥43‚Åª¬π = 4186.0465116279065 [kg*m¬≤s‚Åª¬≤] International\n\njulia> kilocalorie(Metric)\nŒ©·µ¢‚Çú‚Åª¬πV·µ¢‚Çú¬≤2‚Åµ3¬≤5‚Å¥43‚Åª¬π = 4186.737323211056 [kg*m¬≤s‚Åª¬≤] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.calorie","page":"Physics Constants","title":"MeasureSystems.calorie","text":"calorie(U::UnitSystem) = kilocalorie(U)/ùüê^3/ùüì^3\n\nHeat energy required to raise 1 g of water by 1 Kelvin (kcal) in International scale.\n\njulia> calorie(International)\n2¬≤3¬≤5*43‚Åª¬π = 4.186046511627907 [kg*m¬≤s‚Åª¬≤] International\n\njulia> calorie(Metric)\nŒ©·µ¢‚Çú‚Åª¬πV·µ¢‚Çú¬≤2¬≤3¬≤5*43‚Åª¬π = 4.186737323211057 [kg*m¬≤s‚Åª¬≤] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.meancalorie","page":"Physics Constants","title":"MeasureSystems.meancalorie","text":"meancalorie(U::UnitSystem) = energy(ùüê^2*ùüì*ùüë^2/ùüíùüë,U,InternationalMean)\n\nHeat energy required to raise 1 g of water by 1 Kelvin (kcal) in InternationalMean.\n\njulia> meancalorie(InternationalMean)\n2¬≤3¬≤5*43‚Åª¬π = 4.186046511627907 [kg*m¬≤s‚Åª¬≤] InternationalMean\n\njulia> meancalorie(Metric)\n2¬≤3¬≤5*43‚Åª¬π*1.0001900224889804 = 4.186841954605034 [kg*m¬≤s‚Åª¬≤] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.thermalunit","page":"Physics Constants","title":"MeasureSystems.thermalunit","text":"thermalunit(U::UnitSystem) = kilocalorie(U)*ùüë^2/ùüì/lb\n\nHeat energy required to raise 1 lb of water by 1 Rankine (BTU) in International scale.\n\njulia> thermalunit(British)\ng‚ÇÄ‚Åª¬πft‚Åª¬πŒ©·µ¢‚Çú‚Åª¬πV·µ¢‚Çú¬≤2‚Åµ5‚Åµ43‚Åª¬π = 778.1576129990752 [lb*ft] British\n\njulia> thermalunit(International)\nlb*2‚Åµ5‚Åµ43‚Åª¬π = 1054.8659767441861 [kg*m¬≤s‚Åª¬≤] International\n\njulia> thermalunit(Metric)\nlb*Œ©·µ¢‚Çú‚Åª¬πV·µ¢‚Çú¬≤2‚Åµ5‚Åµ43‚Åª¬π = 1055.0400583348662 [kg*m¬≤s‚Åª¬≤] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.tonsrefrigeration","page":"Physics Constants","title":"MeasureSystems.tonsrefrigeration","text":"tonsrefrigeration(U::UnitSystem) = frequency(ùüê*ùüì/ùüë,U,Metric)*thermalunit(U)\n\nUnit of power derived from melting of 1 short ton of ice in 24 hours.\n\njulia> tonsrefrigeration(British)\ng‚ÇÄ‚Åª¬πft‚Åª¬πŒ©·µ¢‚Çú‚Åª¬πV·µ¢‚Çú¬≤2‚Å∂3‚Åª¬π5‚Å∂43‚Åª¬π = 2593.8587099969172 [lb*ft*s‚Åª¬π] British\n\njulia> tonsrefrigeration(Metric)\nlb*Œ©·µ¢‚Çú‚Åª¬πV·µ¢‚Çú¬≤2‚Å∂3‚Åª¬π5‚Å∂43‚Åª¬π = 3516.8001944495536 [kg*m¬≤s‚Åª¬≥] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.horsepower","page":"Physics Constants","title":"MeasureSystems.horsepower","text":"horsepower(U::UnitSystem) = power(ùüê*ùüì^2*ùüèùüè,U,British)\n\nUnit of power derived from raising 550 lb by 1 ft in 1  in 1 s.\n\njulia> horsepower(British)\n2*5¬≤11 = 550.0 [lb*ft*s‚Åª¬π] British\n\njulia> horsepower(Metric)\ng‚ÇÄ*ft*lb*2*5¬≤11 = 745.6998715822701 [kg*m¬≤s‚Åª¬≥] Metric\n\njulia> horsepower(MetricEngineering)\ng‚ÇÄ‚Åª¬≤ft*lb*2*5¬≤11 = 0.7906823448981257 [kgf*m*s‚Åª¬π] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.horsepowerwatt","page":"Physics Constants","title":"MeasureSystems.horsepowerwatt","text":"horsepowerwatt(U::UnitSystem) = power(ùüê^4*ùüë^3/ùüì*œÑ,U,British)\n\nUnit of power derived from Watt's exact original horse power estimate.\n\njulia> horsepowerwatt(British)\nœÑ*2‚Å¥3¬≥5‚Åª¬π = 542.8672105403163 [lb*ft*s‚Åª¬π] British\n\njulia> horsepowerwatt(Metric)\ng‚ÇÄ*ft*lb*œÑ*2‚Å¥3¬≥5‚Åª¬π = 736.0291076111621 [kg*m¬≤s‚Åª¬≥] Metric\n\njulia> horsepowerwatt(MetricEngineering)\ng‚ÇÄ‚Åª¬≤ft*lb*œÑ*2‚Å¥3¬≥5‚Åª¬π = 0.7804282163605851 [kgf*m*s‚Åª¬π] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.horsepowermetric","page":"Physics Constants","title":"MeasureSystems.horsepowermetric","text":"horsepowermetric(U::UnitSystem) = power(ùüë*ùüì^2,U,GravitationalMetric)\n\nUnit of power derived from raising 75 kp by 1 m in 1  in 1 s.\n\njulia> horsepowermetric(British)\nft‚Åª¬πlb‚Åª¬π3*5¬≤ = 542.476038840742 [lb*ft*s‚Åª¬π] British\n\njulia> horsepowermetric(Metric)\ng‚ÇÄ*3*5¬≤ = 735.49875 [kg*m¬≤s‚Åª¬≥] Metric\n\njulia> horsepowermetric(MetricEngineering)\ng‚ÇÄ‚Åª¬≤3*5¬≤ = 0.7798658662575357 [kgf*m*s‚Åª¬π] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.electricalhorsepower","page":"Physics Constants","title":"MeasureSystems.electricalhorsepower","text":"electricalhorsepower(U::UnitSystem) = power(746,U,Metric)\n\nUnit of power for electrical motors in the United States.\n\njulia> electricalhorsepower(British)\ng‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π2*373 = 550.2213633608399 [lb*ft*s‚Åª¬π] British\n\njulia> electricalhorsepower(Metric)\n2*373 = 746.0 [kg*m¬≤s‚Åª¬≥] Metric\n\njulia> electricalhorsepower(MetricEngineering)\ng‚ÇÄ‚Åª¬≥2*373 = 0.7910005778094411 [kgf*m*s‚Åª¬π] MetricEngineering\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#MeasureSystems.boilerhorsepower","page":"Physics Constants","title":"MeasureSystems.boilerhorsepower","text":"boilerhorsepower(U::UnitSystem) = frequency(1339/ùüê^4/ùüë^2,U,Metric)*thermalunit(U)\n\nUnit of power derived from evaporating 34.5 lb of boiling water in 1 hour.\n\njulia> boilerhorsepower(British)\ng‚ÇÄ‚Åª¬πft‚Åª¬πŒ©·µ¢‚Çú‚Åª¬πV·µ¢‚Çú¬≤2*3‚Åª¬≤5‚Åµ43‚Åª¬π*1339 = 7235.785026428902 [lb*ft*s‚Åª¬π] British\n\njulia> boilerhorsepower(Metric)\nlb*Œ©·µ¢‚Çú‚Åª¬πV·µ¢‚Çú¬≤2*3‚Åª¬≤5‚Åµ43‚Åª¬π*1339 = 9810.407209099902 [kg*m¬≤s‚Åª¬≥] Metric\n\n\n\n\n\n","category":"constant"},{"location":"constants.html#Constants-Index-1","page":"Physics Constants","title":"Constants Index","text":"","category":"section"},{"location":"constants.html#","page":"Physics Constants","title":"Physics Constants","text":"Pages = [\"constants.md\",\"units.md\"]","category":"page"},{"location":"index.html#Geophysics.jl-1","page":"Home","title":"Geophysics.jl","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Planetary science data for atmospheric geophysical models","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"(Image: DOI) (Image: Build Status) (Image: Build status) (Image: Coverage Status) (Image: codecov.io) (Image: Gitter)","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Provides Atmosphere models based on Air Research and Development Command ARDC and the United States (1922, 1925, 1956, 1959, 1962, 1966, 1976) Standard Atmosphere US22,US25,US56,US59,US62,US66,US76 available also in English units US22E,US25E,US56E,US59E,US62E,US66E,US76E. Provided the local absolute sea level and gravitational acceleration, the Weather can be initialized based on temperature and pressure. Presets for the Standard atmosphere are provided: Earth1922, Earth1925, Earth1956, Earth1959, Earth1962, Earth1966, Earth1976, Earth1922English, Earth1925English, Earth1956English, Earth1959English, Earth1962English, Earth1966English, Earth1976English. By default the 1959 model with metric units is used for Standard atmosphere, although a different year can be specified with environment variable STDATM and the default unit system can be specified with the GEOUNITS environment variable.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"julia> using Geophysics\n\njulia> h = 1000 # altitude, m\n1000\n\njulia> gravity(h)\n9.803565306802405\n\njulia> temperature(h)\n281.66102237169474\n\njulia> pressure(h)\n89876.28158431675\n\njulia> sonicspeed(h)\n336.4347118683662","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Values which can be obtained at geometric altitude include gravity, temperature, pressure, density, sonicspeed, conductivity, viscosity, kinematic, volume, energy, enthalpy, heatcapacity, diffusivity, prandtl, and impedance. In the future, more varieties of atmospheric models will be added for various planets along with winds aloft and turbulent gust distribution data. Weather data from internet sources may be imported in the future.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Pages = [\"units.md\",\"references.md\"]","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"This package is not limited to atmospheric data: other geophysical data features are intended to be added for oceans, temperature and pressure inside the planets, as well as electrical and magnetic properties of planets. In this package, any simple Geophysical properties of planets may be added. Other simple geophysical data about planets, can be added in a collaborative effort. Complicated models will be excluded from this package, as it is only intended to provide a minimal foundation for geophysical data and constants of various planets, more complicated models should be built separately in packages to build on Geophysics. For example, some geographic conditions can be calculated externally, and then Geophysics is used to load that data.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"This Geophysics package for the Julia language was created by github.com/chakravala for research.","category":"page"},{"location":"convert.html#Unit-Conversions-1","page":"Unit Conversions","title":"Unit Conversions","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"Pages = [\"units.md\",\"constants.md\",\"convert.md\"]","category":"page"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"Common conversion factors for physics units between UnitSystem specifications.","category":"page"},{"location":"convert.html#Kinematic-Units-1","page":"Unit Conversions","title":"Kinematic Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"MeasureSystems.A\nsolidangle\nMeasureSystems.T\nMeasureSystems.L\narea\nMeasureSystems.volume\nMeasureSystems.wavenumber\nangularwavenumber\nfuelefficiency\nMeasureSystems.frequency\nangularfrequency\nfrequencydrift\nMeasureSystems.speed\nacceleration\njerk\nsnap\ncrackle\npop\nvolumeflow","category":"page"},{"location":"convert.html#MeasureSystems.A","page":"Unit Conversions","title":"MeasureSystems.A","text":"angle = [rad], [ùüô], [ùüô]\nangle(U::UnitSystem,S::UnitSystem) = angle(U,S)\nangle(v::Real,U::UnitSystem,S::UnitSystem) = v/angle(U,S)\n\nExtent of one-dimensional angle or angle (rad), unit conversion factor.\n\njulia> angle(CGS,Metric) # rad‚ãÖrad‚Åª¬π\nùüè = 1.0 : Gauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.solidangle","page":"Unit Conversions","title":"MeasureSystems.solidangle","text":"solidangle = [rad¬≤], [ùüô], [ùüô]\nsolidangle(U::UnitSystem,S::UnitSystem) = angle(U,S)^2\nsolidangle(v::Real,U::UnitSystem,S::UnitSystem) = v/solidangle(U,S)\n\nExtent of two-dimensional angle or solidangle (rad¬≤), unit conversion factor.\n\njulia> solidangle(CGS,Metric) # rad¬≤‚ãÖrad‚Åª¬≤\nùüè = 1.0 : Gauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.T","page":"Unit Conversions","title":"MeasureSystems.T","text":"time = [s], [s], [s]\ntime(U::UnitSystem,S::UnitSystem) = length(U,S)/speed(U,S)\ntime(v::Real,U::UnitSystem,S::UnitSystem) = v/time(U,S)\n\nDimension along which events are ordered or T (s), unit conversion factor.\n\njulia> T(IAU,Metric) # s‚ãÖday‚Åª¬π\n2‚Å∑3¬≥5¬≤ = 86400.0 : IAU‚òâ -> Metric\n\njulia> T(PlanckGauss,Metric) # s‚ãÖtP‚Åª¬π\nùò©*ùò§‚Åª¬≤mP‚Åª¬πœÑ‚Åª¬π = 5.391246999999999e-44 ¬± 5.8999999999999996e-49 : PlanckGauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.L","page":"Unit Conversions","title":"MeasureSystems.L","text":"length = [m], [m], [m]\nlength(U::UnitSystem,S::UnitSystem) = planck(U,S)/mass(U,S)/speed(U,S)\nlength(v::Real,U::UnitSystem,S::UnitSystem) = v/length(U,S)\n\nExtent of one-dimensional shape or length (m), unit conversion factor.\n\njulia> L(CGS,Metric) # m‚ãÖcm‚Åª¬π\n2‚Åª¬≤5‚Åª¬≤ = 0.01 : Gauss -> Metric\n\njulia> L(IAU,Metric) # m‚ãÖau‚Åª¬π\nau = 1.495978707e11 ¬± 3.0 : IAU‚òâ -> Metric\n\njulia> L(English,Metric) # m‚ãÖft‚Åª¬π\nft = 0.3048 : English -> Metric\n\njulia> L(EnglishUS,English) # ft‚ãÖftUS‚Åª¬π\nft‚Åª¬πftUS = 1.0000020000039997 : Survey -> English\n\njulia> L(PlanckGauss,Metric) # m‚ãÖ‚ÑìP‚Åª¬π\nùò©*ùò§‚Åª¬πmP‚Åª¬πœÑ‚Åª¬π = 1.616255e-35 ¬± 1.8e-40 : PlanckGauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.area","page":"Unit Conversions","title":"MeasureSystems.area","text":"area = [m¬≤], [m¬≤], [m¬≤]\narea(U::UnitSystem,S::UnitSystem) = length(U,S)^2\narea(v::Real,U::UnitSystem,S::UnitSystem) = v/area(U,S)\n\nExtent of two-dimensional shape or area (m¬≤), unit conversion factor.\n\njulia> area(CGS,Metric) # m¬≤‚ãÖcm‚Åª¬≤\n2‚Åª‚Å¥5‚Åª‚Å¥ = 0.0001 : Gauss -> Metric\n\njulia> area(English,Metric) # m¬≤‚ãÖft‚Åª¬≤\nft¬≤ = 0.09290304 : English -> Metric\n\njulia> area(Survey,English) # ft¬≤‚ãÖftUS‚Åª¬≤\nft‚Åª¬≤ftUS¬≤ = 1.0000040000119996 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.volume","page":"Unit Conversions","title":"MeasureSystems.volume","text":"volume = [m¬≥], [m¬≥], [m¬≥]\nvolume(U::UnitSystem,S::UnitSystem) = length(U,S)^3\nvolume(v::Real,U::UnitSystem,S::UnitSystem) = v/volume(U,S)\n\nExtent of three-dimensional shape or volume (m¬≥), unit conversion factor.\n\njulia> volume(CGS,Metric) # m¬≥‚ãÖcm‚Åª¬≥\n2‚Åª‚Å∂5‚Åª‚Å∂ = 1.0e-6 : Gauss -> Metric\n\njulia> volume(English,Metric) # m¬≥‚ãÖft‚Åª¬≥\nft¬≥ = 0.028316846592000004 : English -> Metric\n\njulia> volume(Survey,English) # ft¬≥‚ãÖftUS‚Åª¬≥\nft‚Åª¬≥ftUS¬≥ = 1.0000060000239996 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.wavenumber","page":"Unit Conversions","title":"MeasureSystems.wavenumber","text":"wavenumber = [m‚Åª¬π], [m‚Åª¬π], [m‚Åª¬π]\nwavenumber(U::UnitSystem,S::UnitSystem) = 1/length(U,S)\nwavenumber(v::Real,U::UnitSystem,S::UnitSystem) = v/wavenumber(U,S)\n\nNumber of occurences per unit of space (m‚Åª¬π), unit conversion factor.\n\njulia> wavenumber(CGS,Metric) # cm‚ãÖm‚Åª¬π\n2¬≤5¬≤ = 100.0 : Gauss -> Metric\n\njulia> wavenumber(English,Metric) # ft‚ãÖm‚Åª¬π\nft‚Åª¬π = 3.280839895013123 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.angularwavenumber","page":"Unit Conversions","title":"MeasureSystems.angularwavenumber","text":"angularwavenumber = [m‚Åª¬πrad], [m‚Åª¬π], [m‚Åª¬π]\nangularwavenumber(U::UnitSystem,S::UnitSystem) = angle(U,S)/length(U,S)\nangularwavenumber(v::Real,U::UnitSystem,S::UnitSystem) = v/angularwavenumber(U,S)\n\nNumber of occurences per unit of space (m‚Åª¬π), unit conversion factor.\n\njulia> angularwavenumber(CGS,Metric) # cm‚ãÖm‚Åª¬π\n2¬≤5¬≤ = 100.0 : Gauss -> Metric\n\njulia> angularwavenumber(English,Metric) # ft‚ãÖm‚Åª¬π\nft‚Åª¬π = 3.280839895013123 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.fuelefficiency","page":"Unit Conversions","title":"MeasureSystems.fuelefficiency","text":"fuelefficiency = [m‚Åª¬≤], [m‚Åª¬≤], [m‚Åª¬≤]\nfuelefficiency(U::UnitSystem,S::UnitSystem) = 1/area(U,S)\nfuelefficiency(v::Real,U::UnitSystem,S::UnitSystem) = v/fuelefficiency(U,S)\n\nDistance per volume or fuelefficiency (m‚ãÖm‚Åª¬≥, m‚Åª¬≤), unit conversion factor.\n\njulia> fuelefficiency(CGS,Metric) # cm¬≤‚ãÖm‚Åª¬≤\n2‚Å¥5‚Å¥ = 10000.0 : Gauss -> Metric\n\njulia> fuelefficiency(English,Metric) # ft¬≤‚ãÖm‚Åª¬≤\nft‚Åª¬≤ = 10.76391041670972 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.frequency","page":"Unit Conversions","title":"MeasureSystems.frequency","text":"frequency = [s‚Åª¬π], [s‚Åª¬π], [s‚Åª¬π]\nfrequency(U::UnitSystem,S::UnitSystem) = 1/time(U,S)\nfrequency(v::Real,U::UnitSystem,S::UnitSystem) = v/frequency(U,S)\n\nNumber of occurences per unit of time (Hz or s‚Åª¬π), unit conversion factor.\n\njulia> frequency(IAU,Metric) day‚ãÖs‚Åª¬π\n2‚Åª‚Å∑3‚Åª¬≥5‚Åª¬≤ = 1.1574074074074073e-5 : IAU‚òâ -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Similitude.angularfrequency","page":"Unit Conversions","title":"Similitude.angularfrequency","text":"angularfrequency(P::Planet) = 2œÄ/period(P)\n\nRate of angularfrequency of sidereal Planet rotation (rad‚ãÖs‚Åª¬π).\n\njulia> angularfrequency(Earth) # rad‚ãÖs‚Åª¬π\n7.292115146706924e-5 [s‚Åª¬π] Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.frequencydrift","page":"Unit Conversions","title":"MeasureSystems.frequencydrift","text":"frequencydrift = [s‚Åª¬≤], [s‚Åª¬≤], [s‚Åª¬≤]\nfrequencydrift(U::UnitSystem,S::UnitSystem) = 1/time(U,S)^2\nfrequencydrift(v::Real,U::UnitSystem,S::UnitSystem) = v/frequencydrift(U,S)\n\nDrift of frequency per time or frequencydrift (Hz‚ãÖs‚Åª¬π, s‚Åª¬≤), unit conversion factor.\n\njulia> frequencydrift(IAU,Metric) day¬≤‚ãÖHz‚ãÖs‚Åª¬π\n2‚Åª¬π‚Å¥3‚Åª‚Å∂5‚Åª‚Å¥ = 1.3395919067215366e-10 : IAU‚òâ -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.speed","page":"Unit Conversions","title":"MeasureSystems.speed","text":"speed = [m*s‚Åª¬π], [m*s‚Åª¬π], [m*s‚Åª¬π]\nspeed(U::UnitSystem,S::UnitSystem) = lightspeed(S)/lightspeed(U)\nspeed(v::Real,U::UnitSystem,S::UnitSystem) = v/speed(U,S)\n\nVelocity or length per time or speed (m‚ãÖs‚Åª¬π), unit conversion factor.\n\njulia> speed(CGS,Metric) # m‚ãÖcm‚Åª¬π\n2‚Åª¬≤5‚Åª¬≤ = 0.01 : Gauss -> Metric\n\njulia> speed(IAU,Metric) # m‚ãÖday‚ãÖs‚Åª¬π‚ãÖau‚Åª¬π\nau*2‚Åª‚Å∑3‚Åª¬≥5‚Åª¬≤ = 1.731456836806e6 ¬± 3.5e-5 : IAU‚òâ -> Metric\n\njulia> speed(English,Metric) # m‚ãÖft‚Åª¬π\nft = 0.3048 : English -> Metric\n\njulia> speed(Survey,English) # ft‚ãÖftUS‚Åª¬π\nft‚Åª¬πftUS = 1.0000020000039997 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.acceleration","page":"Unit Conversions","title":"MeasureSystems.acceleration","text":"acceleration = [m*s‚Åª¬≤], [m*s‚Åª¬≤], [m*s‚Åª¬≤]\nacceleration(U::UnitSystem,S::UnitSystem) = speed(U,S)/time(U,S)\nacceleration(v::Real,U::UnitSystem,S::UnitSystem) = v/acceleration(U,S)\n\nSpecific force or speed per time or acceleration (m‚ãÖs‚Åª¬≤), unit conversion factor.\n\njulia> acceleration(CGS,Metric) # m‚ãÖs‚Åª¬π‚ãÖgal‚Åª¬π\n2‚Åª¬≤5‚Åª¬≤ = 0.01 : Gauss -> Metric\n\njulia> acceleration(IAU,Metric) # m‚ãÖday¬≤‚ãÖs‚Åª¬≤‚ãÖau‚Åª¬π\nau*2‚Åª¬π‚Å¥3‚Åª‚Å∂5‚Åª‚Å¥ = 20.04000968525 ¬± 4.0e-10 : IAU‚òâ -> Metric\n\njulia> acceleration(English,Metric) # m‚ãÖft‚Åª¬π\nft = 0.3048 : English -> Metric\n\njulia> acceleration(Survey,English) # ft‚ãÖftUS‚Åª¬π\nft‚Åª¬πftUS = 1.0000020000039997 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.jerk","page":"Unit Conversions","title":"MeasureSystems.jerk","text":"jerk = [m*s‚Åª¬≥], [m*s‚Åª¬≥], [m*s‚Åª¬≥]\njerk(U::UnitSystem,S::UnitSystem) = speed(U,S)/time(U,S)^2\njerk(v::Real,U::UnitSystem,S::UnitSystem) = v/jerk(U,S)\n\nJolt or acceleration per time or jerk (m‚ãÖs‚Åª¬≥), unit conversion factor.\n\njulia> jerk(CGS,Metric) # m‚ãÖcm‚Åª¬π\n2‚Åª¬≤5‚Åª¬≤ = 0.01 : Gauss -> Metric\n\njulia> jerk(IAU,Metric) # m‚ãÖday¬≥‚ãÖs‚Åª¬≥‚ãÖau‚Åª¬π\nau*2‚Åª¬≤¬π3‚Åª‚Åπ5‚Åª‚Å∂ = 0.0002319445565422 ¬± 4.7e-15 : IAU‚òâ -> Metric\n\njulia> jerk(English,Metric) # m‚ãÖft‚Åª¬π\nft = 0.3048 : English -> Metric\n\njulia> jerk(Survey,English) # ft‚ãÖftUS‚Åª¬π\nft‚Åª¬πftUS = 1.0000020000039997 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.snap","page":"Unit Conversions","title":"MeasureSystems.snap","text":"snap = [m*s‚Åª‚Å¥], [m*s‚Åª‚Å¥], [m*s‚Åª‚Å¥]\nsnap(U::UnitSystem,S::UnitSystem) = speed(U,S)/time(U,S)^3\nsnap(v::Real,U::UnitSystem,S::UnitSystem) = v/snap(U,S)\n\nJounce or jerk per time or snap (m‚ãÖs‚Åª‚Å¥), unit conversion factor.\n\njulia> snap(CGS,Metric) # m‚ãÖcm‚Åª¬π\n2‚Åª¬≤5‚Åª¬≤ = 0.01 : Gauss -> Metric\n\njulia> snap(IAU,Metric) # m‚ãÖday‚Å¥‚ãÖs‚Åª‚Å¥‚ãÖau‚Åª¬π\nau*2‚Åª¬≤‚Å∏3‚Åª¬π¬≤5‚Åª‚Å∏ = 2.684543478498e-9 ¬± 5.4e-20 : IAU‚òâ -> Metric\n\njulia> snap(English,Metric) # m‚ãÖft‚Åª¬π\nft = 0.3048 : English -> Metric\n\njulia> snap(Survey,English) # ft‚ãÖftUS‚Åª¬π\nft‚Åª¬πftUS = 1.0000020000039997 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.crackle","page":"Unit Conversions","title":"MeasureSystems.crackle","text":"crackle = [m*s‚Åª‚Åµ], [m*s‚Åª‚Åµ], [m*s‚Åª‚Åµ]\ncrackle(U::UnitSystem,S::UnitSystem) = speed(U,S)/time(U,S)^4\ncrackle(v::Real,U::UnitSystem,S::UnitSystem) = v/crackle(U,S)\n\nA snap per time or crackle (m‚ãÖs‚Åª‚Åµ), unit conversion factor.\n\njulia> crackle(CGS,Metric) # m‚ãÖcm‚Åª¬π\n2‚Åª¬≤5‚Åª¬≤ = 0.01 : Gauss -> Metric\n\njulia> crackle(IAU,Metric) # m‚ãÖday‚Åµ‚ãÖs‚Åª‚Åµ‚ãÖau‚Åª¬π\nau*2‚Åª¬≥‚Åµ3‚Åª¬π‚Åµ5‚Åª¬π‚Å∞ = 3.1071105075209996e-14 ¬± 6.2e-25 : IAU‚òâ -> Metric\n\njulia> crackle(English,Metric) # m‚ãÖft‚Åª¬π\nft = 0.3048 : English -> Metric\n\njulia> crackle(Survey,English) # ft‚ãÖftUS‚Åª¬π\nft‚Åª¬πftUS = 1.0000020000039997 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.pop","page":"Unit Conversions","title":"MeasureSystems.pop","text":"pop = [m*s‚Åª‚Å∂], [m*s‚Åª‚Å∂], [m*s‚Åª‚Å∂]\npop(U::UnitSystem,S::UnitSystem) = speed(U,S)/time(U,S)^5\npop(v::Real,U::UnitSystem,S::UnitSystem) = v/pop(U,S)\n\nA crackle per time or pop (m‚ãÖs‚Åª‚Å∂), unit conversion factor.\n\njulia> pop(CGS,Metric) # m‚ãÖcm‚Åª¬π\n2‚Åª¬≤5‚Åª¬≤ = 0.01 : Gauss -> Metric\n\njulia> pop(IAU,Metric) # m‚ãÖday‚Å∂‚ãÖs‚Åª‚Å∂‚ãÖau‚Åª¬π\nau*2‚Åª‚Å¥¬≤3‚Åª¬π‚Å∏5‚Åª¬π¬≤ = 3.5961927170380003e-19 ¬± 7.2e-30 : IAU‚òâ -> Metric\n\njulia> pop(English,Metric) # m‚ãÖft‚Åª¬π\nft = 0.3048 : English -> Metric\n\njulia> pop(Survey,English) # ft‚ãÖftUS‚Åª¬π\nft‚Åª¬πftUS = 1.0000020000039997 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.volumeflow","page":"Unit Conversions","title":"MeasureSystems.volumeflow","text":"volumeflow = [m¬≥s‚Åª¬π], [m¬≥s‚Åª¬π], [m¬≥s‚Åª¬π]\nvolumeflow(U::UnitSystem,S::UnitSystem) = area(U,S)*speed(U,S)\nvolumeflow(v::Real,U::UnitSystem,S::UnitSystem) = v/volumeflow(U,S)\n\nVolumetric flow rate or volumeflow (m¬≥‚ãÖs‚Åª¬π), unit conversion factor.\n\njulia> volumeflow(CGS,Metric) # m¬≥‚ãÖcm‚Åª¬≥\n2‚Åª‚Å∂5‚Åª‚Å∂ = 1.0e-6 : Gauss -> Metric\n\njulia> volumeflow(English,Metric) # m¬≥‚ãÖft‚Åª¬≥\nft¬≥ = 0.028316846592000004 : English -> Metric\n\njulia> volumeflow(Survey,English) # ft¬≥‚ãÖftUS‚Åª¬≥\nft‚Åª¬≥ftUS¬≥ = 1.0000060000239996 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Mechanical-Units-1","page":"Unit Conversions","title":"Mechanical Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"inertia\nMeasureSystems.mass\nmassflow\nlineardensity\nareadensity\nMeasureSystems.density\nMeasureSystems.specificweight\nMeasureSystems.specificvolume\nforce\ngforce\nstiffness\nMeasureSystems.pressure\ncompressibility\nMeasureSystems.viscosity\ndiffusivity\nrotationalinertia\nimpulse\nmomentum\nangularmomentum\nyank\nenergy\nMeasureSystems.specificenergy\naction\nfluence\npower\npowerdensity\nMeasureSystems.intensity\nspectralflux\nsoundexposure\nimpedance(::UnitSystem,::UnitSystem)\nMeasureSystems.specificimpedance\nadmittance\ncompliance\ninertance","category":"page"},{"location":"convert.html#MeasureSystems.inertia","page":"Unit Conversions","title":"MeasureSystems.inertia","text":"inertia = [N*m‚Åª¬πs¬≤], [kg], [N*m‚Åª¬πs¬≤]\ninertia(U::UnitSystem,S::UnitSystem) = mass(U,S)/gravity(U,S)\ninertia(v::Real,U::UnitSystem,S::UnitSystem) = v/inertia(U,S)\n\nInertal mass or matter quantity or resistance to aceleration (kg), unit conversion factor.\n\njulia> inertia(CGS,Metric) # kg‚ãÖg‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 : Gauss -> Metric\n\njulia> inertia(CODATA,Metric) # kg‚ãÖkg‚Åª¬π\nùò©*RK*KJ¬≤2‚Åª¬≤ = 1.000000017 ¬± 1.2e-8 : CODATA -> Metric\n\njulia> inertia(Conventional,Metric) # kg‚ãÖkg‚Åª¬π\nùò©*RK90*KJ90¬≤2‚Åª¬≤ = 1.000000195536555 : Conventional -> Metric\n\njulia> inertia(English,Metric) # kg‚ãÖslug‚Åª¬π\ng‚ÇÄ*ft‚Åª¬πlb = 14.593902937206364 : English -> Metric\n\njulia> inertia(IAU,Metric) # kg‚ãÖm‚äô‚Åª¬π\nùò©‚Åª¬πùò§‚Åª¬πmP¬≤au¬≥k¬≤œÑ*2‚Åª¬π‚Å¥3‚Åª‚Å∂5‚Åª‚Å¥ = 1.988409e30 ¬± 4.4e25 : IAU‚òâ -> Metric\n\njulia> inertia(PlanckGauss,Metric) # kg‚ãÖmP‚Åª¬π\nmP = 2.176434e-8 ¬± 2.4e-13 : PlanckGauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.mass","page":"Unit Conversions","title":"MeasureSystems.mass","text":"mass = [kg], [kg], [N*m‚Åª¬πs¬≤]\nmass(U::UnitSystem,S::UnitSystem) = electronmass(S)/electronmass(U)\nmass(v::Real,U::UnitSystem,S::UnitSystem) = v/mass(U,S)\n\nInertal mass or matter quantity or resistance to aceleration (kg), unit conversion factor.\n\njulia> mass(CGS,Metric) # kg‚ãÖg‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 : Gauss -> Metric\n\njulia> mass(CODATA,Metric) # kg‚ãÖkg‚Åª¬π\nùò©*RK*KJ¬≤2‚Åª¬≤ = 1.000000017 ¬± 1.2e-8 : CODATA -> Metric\n\njulia> mass(Conventional,Metric) # kg‚ãÖkg‚Åª¬π\nùò©*RK90*KJ90¬≤2‚Åª¬≤ = 1.000000195536555 : Conventional -> Metric\n\njulia> mass(English,Metric) # kg‚ãÖslug‚Åª¬π\nlb = 0.45359237 : English -> Metric\n\njulia> mass(IAU,Metric) # kg‚ãÖm‚äô‚Åª¬π\nùò©‚Åª¬πùò§‚Åª¬πmP¬≤au¬≥k¬≤œÑ*2‚Åª¬π‚Å¥3‚Åª‚Å∂5‚Åª‚Å¥ = 1.988409e30 ¬± 4.4e25 : IAU‚òâ -> Metric\n\njulia> mass(PlanckGauss,Metric) # kg‚ãÖmP‚Åª¬π\nmP = 2.176434e-8 ¬± 2.4e-13 : PlanckGauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.massflow","page":"Unit Conversions","title":"MeasureSystems.massflow","text":"massflow = [kg*s‚Åª¬π], [kg*s‚Åª¬π], [N*m‚Åª¬πs]\nmassflow(U::UnitSystem,S::UnitSystem) = mass(U,S)/time(U,S)\nmassflow(v::Real,U::UnitSystem,S::UnitSystem) = v/massflow(U,S)\n\nRate of massflow or mass per time (kg‚ãÖs‚Åª¬π), unit conversion factor.\n\njulia> massflow(CGS,Metric) # kg‚ãÖg‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 : Gauss -> Metric\n\njulia> massflow(CODATA,Metric) # kg‚ãÖkg‚Åª¬π\nùò©*RK*KJ¬≤2‚Åª¬≤ = 1.000000017 ¬± 1.2e-8 : CODATA -> Metric\n\njulia> massflow(Conventional,Metric) # kg‚ãÖkg‚Åª¬π\nùò©*RK90*KJ90¬≤2‚Åª¬≤ = 1.000000195536555 : Conventional -> Metric\n\njulia> massflow(English,Metric) # kg‚ãÖslug‚Åª¬π\nlb = 0.45359237 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.lineardensity","page":"Unit Conversions","title":"MeasureSystems.lineardensity","text":"lineardensity = [kg*m‚Åª¬π], [kg*m‚Åª¬π], [N*m‚Åª¬≤s¬≤]\nlineardensity(U::UnitSystem,S::UnitSystem) = mass(U,S)/length(U,S)\nlineardensity(v::Real,U::UnitSystem,S::UnitSystem) = v/lineardensity(U,S)\n\nAmount of lineardensity or mass per length (kg‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> lineardensity(CGS,Metric) # kg‚ãÖcm¬π‚ãÖg‚Åª¬π‚ãÖm‚Åª¬π\n2‚Åª¬π5‚Åª¬π = 0.1 : Gauss -> Metric\n\njulia> lineardensity(CGS,British) # slug‚ãÖcm¬π‚ãÖg‚Åª¬π‚ãÖft‚Åª¬π\ng‚ÇÄ‚Åª¬πft¬≤lb‚Åª¬π2‚Åª¬π5‚Åª¬π = 0.002088543423315013 : Gauss -> British\n\njulia> lineardensity(English,Metric) # kg‚ãÖft¬π‚ãÖlb‚Åª¬π‚ãÖm‚Åª¬π\nft‚Åª¬πlb = 1.4881639435695537 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.areadensity","page":"Unit Conversions","title":"MeasureSystems.areadensity","text":"areadensity = [kg*m‚Åª¬≤], [kg*m‚Åª¬≤], [N*m‚Åª¬≥s¬≤]\nareadensity(U::UnitSystem,S::UnitSystem) = mass(U,S)/area(U,S)\nareadensity(v::Real,U::UnitSystem,S::UnitSystem) = v/areadensity(U,S)\n\nSurface or areadensity or mass per area (kg‚ãÖm‚Åª¬≤), unit conversion factor.\n\njulia> areadensity(CGS,Metric) # kg‚ãÖcm¬≤‚ãÖg‚Åª¬π‚ãÖm‚Åª¬≤\n2*5 = 10.0 : Gauss -> Metric\n\njulia> areadensity(CGS,English) # lb‚ãÖcm¬≤‚ãÖg‚Åª¬π‚ãÖft‚Åª¬≤\nft¬≤lb‚Åª¬π2*5 = 2.048161436225217 : Gauss -> English\n\njulia> areadensity(English,Metric) # kg‚ãÖft¬≤‚ãÖlb‚Åª¬π‚ãÖm‚Åª¬≤\nft‚Åª¬≤lb = 4.88242763638305 : English -> Metric\n\njulia> areadensity(British,Metric) # kg‚ãÖft¬≤‚ãÖslug‚Åª¬π‚ãÖm‚Åª¬≤\ng‚ÇÄ*ft‚Åª¬≥lb = 157.08746384624618 : British -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.density","page":"Unit Conversions","title":"MeasureSystems.density","text":"density = [kg*m‚Åª¬≥], [kg*m‚Åª¬≥], [N*m‚Åª‚Å¥s¬≤]\ndensity(U::UnitSystem,S::UnitSystem) = mass(U,S)/volume(U,S)\ndensity(v::Real,U::UnitSystem,S::UnitSystem) = v/density(U,S)\n\nSpecific mass or mass per volume or density (kg‚ãÖm‚Åª¬≥), unit conversion factor.\n\njulia> density(CGS,Metric) # kg‚ãÖcm¬≥‚ãÖg‚Åª¬π‚ãÖm‚Åª¬≥\n2¬≥5¬≥ = 1000.0 : Gauss -> Metric\n\njulia> density(CGS,Brtish) # slug‚ãÖcm¬≥‚ãÖg‚Åª¬π‚ãÖft‚Åª¬≥\ng‚ÇÄ‚Åª¬πft‚Å¥lb‚Åª¬π2¬≥5¬≥ = 1.940320331979716 : Gauss -> British\n\njulia> density(English,Metric) # kg‚ãÖft¬≥‚ãÖlb‚Åª¬π‚ãÖm‚Åª¬≥\nft‚Åª¬≥lb = 16.018463373960138 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificweight","page":"Unit Conversions","title":"MeasureSystems.specificweight","text":"specificweight = [N*m‚Åª‚Å¥s¬≤], [kg*m‚Åª¬≥], [N*m‚Åª‚Å¥s¬≤]\nspecificweight(U::UnitSystem,S::UnitSystem) = pressure(U,S)/speed(U,S)^2\nspecificweight(v::Real,U::UnitSystem,S::UnitSystem) = v/specificweight(U,S)\n\nSpecific weight or force per volume or density (N‚ãÖm‚Åª¬≥), unit conversion factor.\n\njulia> density(CGS,Metric) # N‚ãÖcm¬≥‚ãÖdyn‚Åª¬π‚ãÖm‚Åª¬≥\n2¬≥5¬≥ = 1000.0 : Gauss -> Metric\n\njulia> density(CGS,Brtish) # lb‚ãÖcm¬≥‚ãÖdyn‚Åª¬π‚ãÖft‚Åª¬≥\ng‚ÇÄ‚Åª¬πft‚Å¥lb‚Åª¬π2¬≥5¬≥ = 1.940320331979716 : Gauss -> British\n\njulia> density(English,Metric) # N‚ãÖft¬≥‚ãÖlb‚Åª¬π‚ãÖm‚Åª¬≥\nft‚Åª¬≥lb = 16.018463373960138 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificvolume","page":"Unit Conversions","title":"MeasureSystems.specificvolume","text":"specificvolume = [kg‚Åª¬πm¬≥], [kg‚Åª¬πm¬≥], [N‚Åª¬πm‚Å¥s‚Åª¬≤]\nspecificvolume(U::UnitSystem,S::UnitSystem) = volume(U,S)/mass(U,S)\nspecificvolume(v::Real,U::UnitSystem,S::UnitSystem) = v/specificvolume(U,S)\n\nReciprocal density or volume per mass or specificvolume (m¬≥‚ãÖkg), unit conversion factor.\n\njulia> specificvolume(CGS,Metric) # g‚ãÖm¬≥‚ãÖkg‚Åª¬π‚ãÖcm‚Åª¬≥\n2‚Åª¬≥5‚Åª¬≥ = 0.001 : Gauss -> Metric\n\njulia> specificvolume(CGS,British) # kg‚ãÖft¬≥‚ãÖslug‚Åª¬π‚ãÖcm‚Åª¬≥\ng‚ÇÄ*ft‚Åª‚Å¥lb*2‚Åª¬≥5‚Åª¬≥ = 0.5153788183931961 : Gauss -> British\n\njulia> specificvolume(English,Metric) # lb‚ãÖm¬≥‚ãÖkg‚Åª¬π‚ãÖft‚Åª¬≥\nft¬≥lb‚Åª¬π = 0.062427960576144616 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.force","page":"Unit Conversions","title":"MeasureSystems.force","text":"force = [N], [kg*m*s‚Åª¬≤], [N]\nforce(U::UnitSystem,S::UnitSystem) = inertia(U,S)*acceleration(U,S)\nforce(v::Real,U::UnitSystem,S::UnitSystem) = v/force(U,S)\n\nWeight or force or inertia times acceleration (N, kg‚ãÖm‚ãÖs‚Åª¬≤), unit conversion factor.\n\njulia> force(CGS,Metric) # N‚ãÖdyn‚Åª¬π\n2‚Åª‚Åµ5‚Åª‚Åµ = 9.999999999999999e-6 : Gauss -> Metric\n\njulia> force(CGS,English) # lb‚ãÖdyn‚Åª¬π\ng‚ÇÄ‚Åª¬πlb‚Åª¬π2‚Åª‚Åµ5‚Åª‚Åµ = 2.2480894309971044e-6 : Gauss -> English\n\njulia> force(English,Metric) # N‚ãÖlb‚Åª¬π\ng‚ÇÄ*lb = 4.4482216152605 : English -> Metric\n\njulia> force(FPS,Metric) # pdl‚ãÖN‚Åª¬π\nft*lb = 0.13825495437600002 : FPS -> Metric\n\njulia> force(MetricEngineering,Metric) # kp‚ãÖN‚Åª¬π\ng‚ÇÄ¬≥ = 943.1092984355795 : MetricEngineering -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.gforce","page":"Unit Conversions","title":"MeasureSystems.gforce","text":"gforce = [N*kg‚Åª¬π], [m*s‚Åª¬≤], [m*s‚Åª¬≤]\ngforce(U::UnitSystem,S::UnitSystem) = acceleration(U,S)/gravity(U,S)\ngforce(v::Real,U::UnitSystem,S::UnitSystem) = v/gforce(U,S)\n\nWeight or force per mass or gforce (N/kg, m‚ãÖs‚Åª¬≤), unit conversion factor.\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.stiffness","page":"Unit Conversions","title":"MeasureSystems.stiffness","text":"stiffness = [N*m‚Åª¬π], [kg*s‚Åª¬≤], [N*m‚Åª¬π]\nstiffness(U::UnitSystem,S::UnitSystem) = force(U,S)/length(U,S)\nstiffness(v::Real,U::UnitSystem,S::UnitSystem) = v/stiffness(U,S)\n\nAmount of force per length or stiffness (N‚ãÖm‚Åª¬π, J‚ãÖm‚Åª¬≤, kg‚ãÖs‚Åª¬≤), unit conversion factor.\n\njulia> stiffness(CGS,Metric) # kg‚ãÖg‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 : Gauss -> Metric\n\njulia> stiffness(CGS,English) # lb‚ãÖg‚Åª¬π\ng‚ÇÄ‚Åª¬πft*lb‚Åª¬π2‚Åª¬≥5‚Åª¬≥ = 6.852176585679177e-5 : Gauss -> English\n\njulia> stiffness(English,Metric) # kg‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft‚Åª¬πlb = 14.593902937206364 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.pressure","page":"Unit Conversions","title":"MeasureSystems.pressure","text":"pressure = [N*m‚Åª¬≤], [kg*m‚Åª¬πs‚Åª¬≤], [N*m‚Åª¬≤]\npressure(U::UnitSystem,S::UnitSystem) = force(U,S)/area(U,S)\npressure(v::Real,U::UnitSystem,S::UnitSystem) = v/pressure(U,S)\n\nPressure or stress or force per area (Pa, N‚ãÖm‚Åª¬≤, kg‚ãÖm‚Åª¬π‚ãÖs‚Åª¬≤), unit conversion factor.\n\njulia> pressure(CGS,Metric) # Pa‚ãÖBa‚Åª¬π\n2‚Åª¬π5‚Åª¬π = 0.1 : Gauss -> Metric\n\njulia> 1/atm # Pa‚ãÖatm‚Åª¬π\natm‚Åª¬π = 9.869232667160129e-6\n\njulia> pressure(English,Metric) # Pa‚ãÖft¬≤‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft‚Åª¬≤lb = 47.88025898033583 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.compressibility","page":"Unit Conversions","title":"MeasureSystems.compressibility","text":"compressibility = [N‚Åª¬πm¬≤], [kg‚Åª¬πm*s¬≤], [N‚Åª¬πm¬≤]\ncompressibility(U::UnitSystem,S::UnitSystem) = 1/pressure(U,S)\ncompressibility(v::Real,U::UnitSystem,S::UnitSystem) = v/compressibility(U,S)\n\nRelative volume change or compressibility (Pa‚Åª¬π), unit conversion factor.\n\njulia> compressibility(CGS,Metric) # Ba‚ãÖPa‚Åª¬π\n2*5 = 10.0 : Gauss -> Metric\n\njulia> compressibility(English,Metric) # lb‚ãÖft‚Åª¬≤‚ãÖPa‚Åª¬π\ng‚ÇÄ‚Åª¬πft¬≤lb‚Åª¬π = 0.02088543423315013 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.viscosity","page":"Unit Conversions","title":"MeasureSystems.viscosity","text":"viscosity = [N*m‚Åª¬≤s], [kg*m‚Åª¬πs‚Åª¬π], [N*m‚Åª¬≤s]\nviscosity(U::UnitSystem,S::UnitSystem) = inertia(U,S)/length(U,S)/time(U,S)\nviscosity(v::Real,U::UnitSystem,S::UnitSystem) = v/viscosity(U,S)\n\nResistance to deformation or viscosity (Pa‚ãÖs, kg‚ãÖm‚Åª¬π‚ãÖs‚Åª¬π), unit conversion factor.\n\njulia> viscosity(CGS,Metric) # Pa‚ãÖBa‚Åª¬π\n2‚Åª¬π5‚Åª¬π = 0.1 : Gauss -> Metric\n\njulia> viscosity(English,Metric) # Pa‚ãÖft¬≤‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft‚Åª¬≤lb = 47.88025898033583 : English -> Metric\n\njulia> viscosity(British,Metric) # Pa‚ãÖft¬≤‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft‚Åª¬≤lb = 47.88025898033583 : British -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.diffusivity","page":"Unit Conversions","title":"MeasureSystems.diffusivity","text":"diffusivity = [m¬≤s‚Åª¬π], [m¬≤s‚Åª¬π], [m¬≤s‚Åª¬π]\ndiffusivity(U::UnitSystem,S::UnitSystem) = speed(U,S)*length(U,S)\ndiffusivity(v::Real,U::UnitSystem,S::UnitSystem) = v/diffusivity(U,S)\n\nThermal diffusivity or kinematic viscostiy (m¬≤‚ãÖs‚Åª¬π), unit conversion factor.\n\njulia> diffusivity(CGS,Metric) # m¬≤‚ãÖcm‚Åª¬≤\n2‚Åª‚Å¥5‚Åª‚Å¥ = 0.0001 : Gauss -> Metric\n\njulia> diffusivity(English,Metric) # m¬≤‚ãÖft‚Åª¬≤\nft¬≤ = 0.09290304 : English -> Metric\n\njulia> diffusivity(Survey,English) # ft¬≤‚ãÖftUS‚Åª¬≤\nft‚Åª¬≤ftUS¬≤ = 1.0000040000119996 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.rotationalinertia","page":"Unit Conversions","title":"MeasureSystems.rotationalinertia","text":"rotationalinertia = [kg*m¬≤], [kg*m¬≤], [N*m*s¬≤]\nrotationalinertia(U::UnitSystem,S::UnitSystem) = mass(U,S)*area(U,S)\nrotationalinertia(v::Real,U::UnitSystem,S::UnitSystem) = v/rotationalinertia(U,S)\n\nMoment of inertia or rotationalinertia (kg‚ãÖm¬≤), unit conversion factor.\n\njulia> rotationalinertia(CGS,Metric) # kg‚ãÖm¬≤‚ãÖg‚Åª¬π‚ãÖcm‚Åª¬≤\n2‚Åª‚Å∑5‚Åª‚Å∑ = 1.0e-7 : Gauss -> Metric\n\njulia> rotationalinertia(CGS,British) # slug‚ãÖft¬≤‚ãÖg‚Åª¬π‚ãÖcm‚Åª¬≤\ng‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π2‚Åª‚Å∑5‚Åª‚Å∑ = 7.375621492772652e-8 : Gauss -> British\n\njulia> rotationalinertia(English,Metric) # kg‚ãÖm¬≤‚ãÖlb‚Åª¬π‚ãÖft‚Åª¬≤\nft¬≤lb = 0.042140110093804806 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.impulse","page":"Unit Conversions","title":"MeasureSystems.impulse","text":"impulse = [N*s], [kg*m*s‚Åª¬π], [N*s]\nimpulse(U::UnitSystem,S::UnitSystem) = force(U,S)*time(U,S)\nimpulse(v::Real,U::UnitSystem,S::UnitSystem) = v/impulse(U,S)\n\nLinear impulse or force times time (N‚ãÖs, kg‚ãÖm‚ãÖs‚Åª¬π), unit conversion factor.\n\njulia> impulse(CGS,Metric) # N‚ãÖdyn‚Åª¬π\n2‚Åª‚Åµ5‚Åª‚Åµ = 9.999999999999999e-6 : Gauss -> Metric\n\njulia> impulse(CGS,English) # lb‚ãÖdyn‚Åª¬π\ng‚ÇÄ‚Åª¬πlb‚Åª¬π2‚Åª‚Åµ5‚Åª‚Åµ = 2.2480894309971044e-6 : Gauss -> English\n\njulia> impulse(English,Metric) # N‚ãÖlb‚Åª¬π\ng‚ÇÄ*lb = 4.4482216152605 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.momentum","page":"Unit Conversions","title":"MeasureSystems.momentum","text":"momentum = [kg*m*s‚Åª¬π], [kg*m*s‚Åª¬π], [N*s]\nmomentum(U::UnitSystem,S::UnitSystem) = mass(U,S)*speed(U,S)\nmomentum(v::Real,U::UnitSystem,S::UnitSystem) = v/momentum(U,S)\n\nLinear momentum or mass times speed (N‚ãÖs, kg‚ãÖm‚ãÖs‚Åª¬π), unit conversion factor.\n\njulia> momentum(CGS,Metric) # N‚ãÖdyn‚Åª¬π\n2‚Åª‚Åµ5‚Åª‚Åµ = 9.999999999999999e-6 : Gauss -> Metric\n\njulia> momentum(CGS,English) # lb‚ãÖdyn‚Åª¬π\nft‚Åª¬πlb‚Åª¬π2‚Åª‚Åµ5‚Åª‚Åµ = 7.233013851209893e-5 : Gauss -> English\n\njulia> momentum(British,Metric) # N‚ãÖlb‚Åª¬π\ng‚ÇÄ*lb = 4.4482216152605 : British -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.angularmomentum","page":"Unit Conversions","title":"MeasureSystems.angularmomentum","text":"angularmomentum = [N*m*s*rad], [kg*m¬≤s‚Åª¬π], [N*m*s]\nangularmomentum(U::UnitSystem,S::UnitSystem) = momentum(U,S)*lengt(U,S)*angle(U,S)\nangularmomentum(v::Real,U::UnitSystem,S::UnitSystem) = v/angularmomentum(U,S)\n\nRotational momentum or angularmomentum (N‚ãÖm‚ãÖs, kg‚ãÖm¬≤‚ãÖs‚Åª¬π), unit conversion factor.\n\njulia> momentum(CGS,Metric) # N‚ãÖm‚ãÖdyn‚Åª¬π‚ãÖcm‚Åª¬π\n2‚Åª‚Åµ5‚Åª‚Åµ = 9.999999999999999e-6 : Gauss -> Metric\n\njulia> momentum(CGS,English) # lb‚ãÖft‚ãÖdyn‚Åª¬π‚ãÖcm‚Åª¬π\nft‚Åª¬πlb‚Åª¬π2‚Åª‚Åµ5‚Åª‚Åµ = 7.233013851209893e-5 : Gauss -> English\n\njulia> momentum(British,Metric) # N‚ãÖm‚ãÖlb‚Åª¬π‚ãÖft‚Åª¬π\ng‚ÇÄ*lb = 4.4482216152605 : British -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.yank","page":"Unit Conversions","title":"MeasureSystems.yank","text":"yank = [kg*m*s‚Åª¬≥], [kg*m*s‚Åª¬≥], [N*s‚Åª¬π]\nyank(U::UnitSystem,S::UnitSystem) = mass(U,S)*jerk(U,S)\nyank(v::Real,U::UnitSystem,S::UnitSystem) = v/yank(U,S)\n\nRate of change of force or yank (N‚ãÖs‚Åª¬π, kg‚ãÖm‚ãÖs‚Åª¬≥), unit conversion factor.\n\njulia> yank(CGS,Metric) # N‚ãÖdyn‚Åª¬π\n2‚Åª‚Åµ5‚Åª‚Åµ = 9.999999999999999e-6 : Gauss -> Metric\n\njulia> yank(CGS,English) # lb‚ãÖdyn‚Åª¬π\nft‚Åª¬πlb‚Åª¬π2‚Åª‚Åµ5‚Åª‚Åµ = 7.233013851209893e-5 : Gauss -> English\n\njulia> yank(British,Metric) # N‚ãÖlb‚Åª¬π‚ãÖ\ng‚ÇÄ*lb = 4.4482216152605 : British -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.energy","page":"Unit Conversions","title":"MeasureSystems.energy","text":"energy = [N*m], [kg*m¬≤s‚Åª¬≤], [N*m]\nenergy(U::UnitSystem,S::UnitSystem) = mass(U,S)*specificenergy(U,S)\nenergy(v::Real,U::UnitSystem,S::UnitSystem) = v/energy(U,S)\n\nWork or heat or energy (J, N‚ãÖm, kg‚ãÖm¬≤‚ãÖs‚Åª¬≤), unit conversion factor.\n\njulia> energy(CGS,Metric) # J‚ãÖerg‚Åª¬π\n2‚Åª‚Å∑5‚Åª‚Å∑ = 1.0e-7 : Gauss -> Metric\n\njulia> energy(CGS,English) # ft‚ãÖlb‚ãÖerg‚Åª¬π\ng‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π2‚Åª‚Å∑5‚Åª‚Å∑ = 7.375621492772652e-8 : Gauss -> English\n\njulia> energy(English,Metric) # J‚ãÖft‚Åª¬π‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft*lb = 1.3558179483314003 : English -> Metric\n\njulia> 0.001/3600 # J‚ãÖkW‚Åª¬π‚ãÖh‚Åª¬π\n2.7777777777777776e-7\n\njulia> 1/elementarycharge(SI2019) # J‚ãÖeV‚Åª¬π\nùò¶‚Åª¬π = 6.241509074460763e18 [C‚Åª¬π] SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificenergy","page":"Unit Conversions","title":"MeasureSystems.specificenergy","text":"specificenergy = [N*kg‚Åª¬πm], [m¬≤s‚Åª¬≤], [m¬≤s‚Åª¬≤]\nspecificenergy(U::UnitSystem,S::UnitSystem) = speed(U,S)^2\nspecificenergy(v::Real,U::UnitSystem,S::UnitSystem) = v/specificenergy(U,S)\n\nMassic energy or energy per mass or specificenergy (J‚ãÖkg‚Åª¬π), unit conversion factor.\n\njulia> specificenergy(CGS,Metric) # m¬≤‚ãÖcm‚Åª¬≤\n2‚Åª‚Å¥5‚Åª‚Å¥ = 0.0001 : Gauss -> Metric\n\njulia> specificenergy(IAU,Metric) # m¬≤‚ãÖday¬≤‚ãÖs‚Åª¬≤‚ãÖau‚Åª¬≤\nau¬≤2‚Åª¬π‚Å¥3‚Åª‚Å∂5‚Åª‚Å¥ = 2.99794277772e12 ¬± 120.0 : IAU‚òâ -> Metric\n\njulia> specificenergy(English,Metric) # m¬≤‚ãÖft‚Åª¬≤\ng‚ÇÄ*ft = 2.98906692 : English -> Metric\n\njulia> specificenergy(Survey,English) # ft¬≤‚ãÖftUS‚Åª¬≤\nft‚Åª¬πftUS = 1.0000020000039997 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.action","page":"Unit Conversions","title":"MeasureSystems.action","text":"action = [N*m*s], [kg*m¬≤s‚Åª¬π], [N*m*s]\naction(U::UnitSystem,S::UnitSystem) = energy(U,S)*time(U,S)\naction(v::Real,U::UnitSystem,S::UnitSystem) = v/action(U,S)\n\nIntegrated momentum over length or action (J‚ãÖs, N‚ãÖm‚ãÖs), unit conversion factor.\n\njulia> action(CGS,Metric) # J‚ãÖerg‚Åª¬π\n2‚Åª‚Å∑5‚Åª‚Å∑ = 1.0e-7 : Gauss -> Metric\n\njulia> action(CGS,English) # ft‚ãÖlb‚ãÖerg‚Åª¬π\ng‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π2‚Åª‚Å∑5‚Åª‚Å∑ = 7.375621492772652e-8 : Gauss -> English\n\njulia> action(English,Metric) # J‚ãÖft‚Åª¬π‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft*lb = 1.3558179483314003 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.fluence","page":"Unit Conversions","title":"MeasureSystems.fluence","text":"fluence = [N*m‚Åª¬π], [kg*s‚Åª¬≤], [N*m‚Åª¬π]\nfluence(U::UnitSystem,S::UnitSystem) = energy(U,S)/area(U,S\nfluence(v::Real,U::UnitSystem,S::UnitSystem) = v/fluence(U,S)\n\nRadiant exposure or energy per area or fluence (J‚ãÖm‚Åª¬≤), unit conversion factor.\n\njulia> fluence(CGS,Metric) # kg‚ãÖg‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 : Gauss -> Metric\n\njulia> fluence(CODATA,Metric) # kg‚ãÖkg‚Åª¬π\nùò©*RK*KJ¬≤2‚Åª¬≤ = 1.000000017 ¬± 1.2e-8 : CODATA -> Metric\n\njulia> fluence(Conventional,Metric) # kg‚ãÖkg‚Åª¬π\nùò©*RK90*KJ90¬≤2‚Åª¬≤ = 1.000000195536555 : Conventional -> Metric\n\njulia> fluence(English,Metric) # kg‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft‚Åª¬πlb = 14.593902937206364 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.power","page":"Unit Conversions","title":"MeasureSystems.power","text":"power = [N*m*s‚Åª¬π], [kg*m¬≤s‚Åª¬≥], [N*m*s‚Åª¬π]\npower(U::UnitSystem,S::UnitSystem) = energy(U,S)/time(U,S))\npower(v::Real,U::UnitSystem,S::UnitSystem) = v/power(U,S)\n\nRadiant flux or power or energy per time (W, J‚ãÖs‚Åª¬π, kg‚ãÖm¬≤‚ãÖs‚Åª¬≥), unit conversion factor.\n\njulia> power(CGS,Metric) # W‚ãÖs‚ãÖerg‚Åª¬π\n2‚Åª‚Å∑5‚Åª‚Å∑ = 1.0e-7 : Gauss -> Metric\n\njulia> power(English,Metric) # W‚ãÖs‚ãÖft‚Åª¬π‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft*lb = 1.3558179483314003 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.powerdensity","page":"Unit Conversions","title":"MeasureSystems.powerdensity","text":"powerdensity = [N*m‚Åª¬≤s‚Åª¬π], [kg*m‚Åª¬πs‚Åª¬≥], [N*m‚Åª¬≤s‚Åª¬π]\npowerdensity(U::UnitSystem,S::UnitSystem) = power(U,S)/volume(U,S)\npowerdensity(v::Real,U::UnitSystem,S::UnitSystem) = v/powerdensity(U,S)\n\nSpectral irradiance (volume) or powerdensity (W‚ãÖm‚Åª¬≥), unit conversion factor.\n\njulia> powerdensity(CGS,Metric) # kg‚ãÖcm‚ãÖg‚Åª¬π‚ãÖm‚Åª¬π\n2‚Åª¬π5‚Åª¬π = 0.1 : Gauss -> Metric\n\njulia> powerdensity(CGS,English) # lb‚ãÖcm‚ãÖg‚Åª¬π‚ãÖft‚Åª¬π\ng‚ÇÄ‚Åª¬πft¬≤lb‚Åª¬π2‚Åª¬π5‚Åª¬π = 0.002088543423315013 : Gauss -> English\n\njulia> powerdensity(English,Metric) # kg‚ãÖft‚ãÖlb‚Åª¬π‚ãÖm‚Åª¬π\ng‚ÇÄ*ft‚Åª¬≤lb = 47.88025898033583 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.intensity","page":"Unit Conversions","title":"MeasureSystems.intensity","text":"intensity = [N*m‚Åª¬πs‚Åª¬π], [kg*s‚Åª¬≥], [N*m‚Åª¬πs‚Åª¬π]\nintensity(U::UnitSystem,S::UnitSystem) = power(U,S)/area(U,S)\nintensity(v::Real,U::UnitSystem,S::UnitSystem) = v/intensity(U,S)\n\nHeat flux density or irradiance or power per area (W‚ãÖm‚Åª¬≤, kg‚ãÖs‚Åª¬≥), unit conversion factor.\n\njulia> intensity(CGS,Metric) # kg‚ãÖg‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 : Gauss -> Metric\n\njulia> intensity(CGS,English) # lb‚ãÖg‚Åª¬π\ng‚ÇÄ‚Åª¬πft*lb‚Åª¬π2‚Åª¬≥5‚Åª¬≥ = 6.852176585679177e-5 : Gauss -> English\n\njulia> intensity(English,Metric) # kg‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft‚Åª¬πlb = 14.593902937206364 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.spectralflux","page":"Unit Conversions","title":"MeasureSystems.spectralflux","text":"spectralflux = [N*s‚Åª¬π], [kg*m*s‚Åª¬≥], [N*s‚Åª¬π]\nspectralflux(U::UnitSystem,S::UnitSystem) = power(U,S)/length(U,S)\nspectralflux(v::Real,U::UnitSystem,S::UnitSystem) = v/spectralflux(U,S)\n\nSpectral power or radiantflux per wave length (W‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> spectralflux(CGS,Metric) # kg‚ãÖm‚ãÖg‚Åª¬π‚ãÖcm‚Åª¬π\n2‚Åª‚Åµ5‚Åª‚Åµ = 9.999999999999999e-6 : Gauss -> Metric\n\njulia> spectralflux(CGS,English) # lb‚ãÖft‚ãÖg‚Åª¬π‚ãÖcm‚Åª¬π\ng‚ÇÄ‚Åª¬πlb‚Åª¬π2‚Åª‚Åµ5‚Åª‚Åµ = 2.2480894309971044e-6 : Gauss -> English\n\njulia> spectralflux(English,Metric) # kg‚ãÖm‚ãÖlb‚Åª¬π‚ãÖft‚Åª¬π\ng‚ÇÄ*lb = 4.4482216152605 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.soundexposure","page":"Unit Conversions","title":"MeasureSystems.soundexposure","text":"soundexposure = [N¬≤m‚Åª‚Å¥s], [kg¬≤m‚Åª¬≤s‚Åª¬≥], [N¬≤m‚Åª‚Å¥s]\nsoundexposure(U::UnitSystem,S::UnitSystem) = pressure(U,S)^2*time(U,S)\nsoundexposure(v::Real,U::UnitSystem,S::UnitSystem) = v/soundexposure(U,S)\n\nSquare of pressure by time or soundexposure (Pa¬≤‚ãÖs, N¬≤‚ãÖm‚Åª‚Å¥), unit conversion factor.\n\njulia> soundexposure(CGS,Metric) # Pa¬≤‚ãÖBa‚Åª¬≤\n2‚Åª¬≤5‚Åª¬≤ = 0.01 : Gauss -> Metric\n\njulia> soundexposure(English,Metric) # Pa¬≤‚ãÖft‚Å¥‚ãÖlb‚Åª¬≤\ng‚ÇÄ¬≤ft‚Åª‚Å¥lb¬≤ = 2292.519200024031 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.impedance-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.impedance","text":"impedance = [N*m‚Åª‚Åµs], [kg*m‚Åª‚Å¥s‚Åª¬π], [N*m‚Åª‚Åµs]\nimpedance(U::UnitSystem,S::UnitSystem) = specificimpedance(U,S)/area(U,S)\nimpedance(v::Real,U::UnitSystem,S::UnitSystem) = v/impedance(U,S)\n\nAcoustic impedance (Rayl‚ãÖm‚Åª¬≤, Pa‚ãÖs‚ãÖm‚Åª¬≥, kg‚ãÖs‚Åª¬π‚ãÖm‚Åª‚Å¥), unit conversion factor.\n\njulia> impedance(CGS,Metric) # Pa‚ãÖcm¬≥‚ãÖm‚Åª¬≥‚ãÖBa‚Åª¬π\n2‚Åµ5‚Åµ = 100000.0 : Gauss -> Metric\n\njulia> impedance(English,Metric) # Pa‚ãÖft‚Åµ‚ãÖm‚Åª¬≥‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft‚Åª‚Åµlb = 1690.8753884291211 : English -> Metric\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.specificimpedance","page":"Unit Conversions","title":"MeasureSystems.specificimpedance","text":"specificimpedance = [N*m‚Åª¬≥s], [kg*m‚Åª¬≤s‚Åª¬π], [N*m‚Åª¬≥s]\nspecificimpedance(U::UnitSystem,S::UnitSystem) = pressure(U,S)/speed(U,S)\nspecificimpedance(v::Real,U::UnitSystem,S::UnitSystem) = v/specificimpedance(U,S)\n\nCharacteristic specific acoustic impedance (Rayl, Pa‚ãÖs‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> specificimpedance(CGS,Metric) # Pa‚ãÖcm‚ãÖm‚Åª¬π‚ãÖBa‚Åª¬π\n2*5 = 10.0 : Gauss -> Metric\n\njulia> specificimpedance(English,Metric) # Pa‚ãÖft¬≥‚ãÖm‚Åª¬π‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft‚Åª¬≥lb = 157.08746384624618 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.admittance","page":"Unit Conversions","title":"MeasureSystems.admittance","text":"admittance = [N‚Åª¬πm‚Åµs‚Åª¬π], [kg‚Åª¬πm‚Å¥s], [N‚Åª¬πm‚Åµs‚Åª¬π]\nadmittance(U::UnitSystem,S::UnitSystem) = area(U,S)/specificimpedance(U,S)\nadmittance(v::Real,U::UnitSystem,S::UnitSystem) = v/admittance(U,S)\n\nAcoustic admittance (m¬≤‚ãÖRayl‚Åª¬π, m¬≥‚ãÖs‚Åª¬π‚ãÖPa‚Åª¬π, m‚Å¥‚ãÖs‚ãÖkg‚Åª¬π), unit conversion factor.\n\njulia> admittance(CGS,Metric) # Ba‚ãÖm¬≥‚ãÖcm‚Åª¬≥‚ãÖPa‚Åª¬π\n2‚Åª‚Åµ5‚Åª‚Åµ = 9.999999999999999e-6 : Gauss -> Metric\n\njulia> admittance(English,Metric) # lb‚ãÖm¬≥‚ãÖft‚Åª‚Åµ‚ãÖPa‚Åª¬π\ng‚ÇÄ‚Åª¬πft‚Åµlb‚Åª¬π = 0.0005914096371874175 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.compliance","page":"Unit Conversions","title":"MeasureSystems.compliance","text":"compliance = [kg‚Åª¬πs¬≤], [kg‚Åª¬πs¬≤], [N‚Åª¬πm]\ncompliance(U::UnitSystem,S::UnitSystem) = time(U,S)^2/mass(U,S)\ncompliance(v::Real,U::UnitSystem,S::UnitSystem) = v/compliance(U,S)\n\nAcoustic compliance is reciprocal of stiffness (m‚ãÖN‚Åª¬π, m¬≥‚ãÖPa‚Åª¬π), unit conversion factor.\n\njulia> compliance(CGS,Metric) # kg‚ãÖg‚Åª¬π\n2¬≥5¬≥ = 1000.0 : Gauss -> Metric\n\njulia> compliance(CGS,English) # slug‚ãÖg‚Åª¬π\nlb*2¬≥5¬≥ = 453.59237 : Gauss -> English\n\njulia> compliance(English,Metric) # kg‚ãÖlb‚Åª¬π\nlb‚Åª¬π = 2.2046226218487757 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.inertance","page":"Unit Conversions","title":"MeasureSystems.inertance","text":"inertance = [kg*m‚Åª‚Å¥], [kg*m‚Åª‚Å¥], [N*m‚Åª‚Åµs¬≤]\ninertance(U::UnitSystem,S::UnitSystem) = mass(U,S)/length(U,S)^4\ninertance(v::Real,U::UnitSystem,S::UnitSystem) = v/inertance(U,S)\n\nAcoustic mass or inertance (kg‚ãÖm‚Å¥, Pa‚ãÖs¬≤‚ãÖm‚Åª¬≥), unit conversion factor.\n\njulia> inertance(CGS,Metric) # kg‚ãÖcm‚Å¥‚ãÖg‚Åª¬π‚ãÖm‚Åª‚Å¥\n2‚Åµ5‚Åµ = 100000.0 : Gauss -> Metric\n\njulia> inertance(CGS,English) # slug‚ãÖcm‚Å¥‚ãÖg‚Åª¬π‚ãÖft‚Åª‚Å¥\nft‚Å¥lb‚Åª¬π2‚Åµ5‚Åµ = 1902.804238360888 : Gauss -> English\n\njulia> inertance(English,Metric) # kg‚ãÖft‚Å¥‚ãÖlb‚Åª¬π‚ãÖm‚Åª‚Å¥\nft‚Åª‚Å¥lb = 52.55401369409494 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Electromagnetic-Units-1","page":"Unit Conversions","title":"Electromagnetic Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"Warning: the following unit conversions have not yet been verified for CGS UnitSystem variants due to lack of reference information: rigidity, mobility, magneticmoment.","category":"page"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"charge(::UnitSystem,::UnitSystem)\nchargedensity\nlinearchargedensity\nexposure\nmobility\ncurrent\ncurrentdensity\nresistance\nconductance(::UnitSystem,::UnitSystem)\nresistivity\nconductivity\ncapacitance\ninductance\nreluctance\npermeance\npermittivity(::UnitSystem,::UnitSystem)\nMeasureSystems.permeability(::UnitSystem,::UnitSystem)\nsusceptibility\nspecificsusceptibility\ndemagnetizingfactor\nvectorpotential\nelectricpotential\nmagneticpotential\nelectricfield\nmagneticfield\nelectricflux\nmagneticflux(::UnitSystem,::UnitSystem)\nelectricfluxdensity\nmagneticfluxdensity\nelectricdipolemoment\nmagneticdipolemoment\nelectricpolarizability\nmagneticpolarizability\nmagneticmoment\nmagnetizability\nmagnetization\nspecificmagnetization\nrigidity\npolestrength","category":"page"},{"location":"convert.html#MeasureSystems.charge-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.charge","text":"charge = [C], [C], [C]\ncharge(U::UnitSystem,S::UnitSystem) = sqrt(action(U,S)*current(U,S)/electricpotential(U,S))\ncharge(v::Real,U::UnitSystem,S::UnitSystem) = v/charge(U,S)\n\nElectric charge quantization (C, A‚ãÖs), unit conversion factor.\n\njulia> charge(EMU,Metric) # C‚ãÖabC‚Åª¬π\n2*5 = 10.0 : EMU -> Metric\n\njulia> charge(EMU,ESU) # stC‚ãÖabC‚Åª¬π\nùò§*2¬≤5¬≤ = 2.99792458e10 : EMU -> ESU\n\njulia> charge(ESU,Metric) # C‚ãÖstC‚Åª¬π\nùò§‚Åª¬π2‚Åª¬π5‚Åª¬π = 3.3356409519815207e-10 : ESU -> Metric\n\njulia> charge(Metric,SI2019) # C‚ãÖC‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\njulia> charge(Hartree,SI2019) # C‚ãÖùò¶‚Åª¬π\nùò¶ = 1.602176634e-19 : Hartree -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.chargedensity","page":"Unit Conversions","title":"MeasureSystems.chargedensity","text":"chargedensity = [m‚Åª¬≥C], [m‚Åª¬≥C], [m‚Åª¬≥C]\nchargedensity(U::UnitSystem,S::UnitSystem) = charge(U,S)/volume(U,S)\nchargedensity(v::Real,U::UnitSystem,S::UnitSystem) = v/chargedensity(U,S)\n\nVolume chargedensity or charge per volume (C‚ãÖm‚Åª¬≥), unit conversion factor.\n\njulia> chargedensity(EMU,Metric) # C‚ãÖcm¬≥‚ãÖabC‚Åª¬π‚ãÖm‚Åª¬≥\n2‚Å∑5‚Å∑ = 1.0e7 : EMU -> Metric\n\njulia> chargedensity(ESU,Metric) # C‚ãÖcm¬≥‚ãÖstatC‚Åª¬π‚ãÖm‚Åº¬≥\nùò§‚Åª¬π2‚Åµ5‚Åµ = 0.00033356409519815205 : ESU -> Metric\n\njulia> chargedensity(Metric,SI2019) # C‚ãÖC‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.linearchargedensity","page":"Unit Conversions","title":"MeasureSystems.linearchargedensity","text":"linearchargedensity = [m‚Åª¬πC], [m‚Åª¬πC], [m‚Åª¬πC]\nlinearchargedensity(U::UnitSystem,S::UnitSystem) = charge(U,S)/length(U,S)\nlinearchargedensity(v::Real,U::UnitSystem,S::UnitSystem) = v/linearchargedensity(U,S)\n\nAmount of linearchargedensity or charge per length (C‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> linearchargedensity(EMU,Metric) # C‚ãÖcm‚ãÖabC‚Åª¬π‚ãÖm‚Åª¬π\n2¬≥5¬≥ = 1000.0 : EMU -> Metric\n\njulia> linearchargedensity(ESU,Metric) # C‚ãÖcm‚ãÖstatC‚Åª¬π‚ãÖm‚Åº¬π\nùò§‚Åª¬π2*5 = 3.3356409519815205e-8 : ESU -> Metric\n\njulia> linearchargedensity(Metric,SI2019) # C‚ãÖC‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.exposure","page":"Unit Conversions","title":"MeasureSystems.exposure","text":"exposure = [kg‚Åª¬πC], [kg‚Åª¬πC], [N‚Åª¬πm*s‚Åª¬≤C]\nexposure(U::UnitSystem,S::UnitSystem) = charge(U,S)/mass(U,S)\nexposure(v::Real,U::UnitSystem,S::UnitSystem) = v/exposure(U,S)\n\nIonizing radiation exposure or charge per mass (C‚ãÖkg‚Åª¬π), unit conversion factor.\n\njulia> exposure(EMU,Metric) # C‚ãÖg‚ãÖabC‚Åª¬π‚ãÖkg\n2‚Å¥5‚Å¥ = 10000.0 : EMU -> Metric\n\njulia> exposure(EMU,ESU) # statC‚ãÖabC‚Åª¬π\nùò§*2¬≤5¬≤ = 2.99792458e10 : EMU -> ESU\n\njulia> expsure(ESU,Metric) # C‚ãÖg‚ãÖstatC‚Åª¬π‚ãÖkg\nùò§‚Åª¬π2¬≤5¬≤ = 3.3356409519815204e-7 : ESU -> Metric\n\njulia> exposure(Metric,SI2019) # C‚ãÖC‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.mobility","page":"Unit Conversions","title":"MeasureSystems.mobility","text":"mobility = [kg‚Åª¬πs*C], [kg‚Åª¬πs*C], [N‚Åª¬πm*s‚Åª¬πC]\nmobility(U::UnitSystem,S::UnitSystem) = charge(U,S)*time(U,S)/mass(U,S)\nmobility(v::Real,U::UnitSystem,S::UnitSystem) = v/mobility(U,S)\n\nElectron mobility in solid state physics (m¬≤‚ãÖV‚Åª¬π‚ãÖs‚Åª¬π, A‚ãÖs¬≤‚ãÖkg‚Åª¬π), unit conversion factor.\n\njulia> mobility(EMU,Metric) # C‚ãÖg‚ãÖabC‚Åª¬π‚ãÖkg\n2‚Å¥5‚Å¥ = 10000.0 : EMU -> Metric\n\njulia> mobility(EMU,ESU) # statC‚ãÖabC‚Åª¬π\nùò§*2¬≤5¬≤ = 2.99792458e10 : EMU -> ESU\n\njulia> mobility(ESU,Metric) # C‚ãÖg‚ãÖstatC‚Åª¬π‚ãÖkg\nùò§‚Åª¬π2¬≤5¬≤ = 3.3356409519815204e-7 : ESU -> Metric\n\njulia> mobility(Metric,SI2019) # C‚ãÖC‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.current","page":"Unit Conversions","title":"MeasureSystems.current","text":"current = [s‚Åª¬πC], [s‚Åª¬πC], [s‚Åª¬πC]\ncurrent(U::UnitSystem,S::UnitSystem) = charge(U,S)/time(U,S)\ncurrent(v::Real,U::UnitSystem,S::UnitSystem) = v/current(U,S)\n\nFlow of electric charge per time or current (A, C‚ãÖs‚Åª¬π), unit conversion factor.\n\njulia> current(EMU,Metric) # A‚ãÖBi‚Åª¬π\n2*5 = 10.0 : EMU -> Metric\n\njulia> current(EMU,ESU) # statA‚ãÖBi‚Åª¬π\nùò§*2¬≤5¬≤ = 2.99792458e10 : EMU -> ESU\n\njulia> current(ESU,Metric) # A‚ãÖstatA‚Åª¬π\nùò§‚Åª¬π2‚Åª¬π5‚Åª¬π = 3.3356409519815207e-10 : ESU -> Metric\n\njulia> current(Metric,SI2019) # A‚ãÖA‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.currentdensity","page":"Unit Conversions","title":"MeasureSystems.currentdensity","text":"currentdensity = [m‚Åª¬≤s‚Åª¬πC], [m‚Åª¬≤s‚Åª¬πC], [m‚Åª¬≤s‚Åª¬πC]\ncurrentdensity(U::UnitSystem,S::UnitSystem) = current(U,S)/area(U,S)\ncurrentdensity(v::Real,U::UnitSystem,S::UnitSystem) = v/currentdensity(U,S)\n\nCross-section currentdensity or current per area (A‚ãÖm‚Åª¬≤), unit conversion factor.\n\njulia> currentdensity(EMU,Metric) # A‚ãÖcm¬≤‚ãÖBi‚Åª¬π‚ãÖm‚Åª¬≤\n2‚Åµ5‚Åµ = 100000.0 : EMU -> Metric\n\njulia> currentdensity(ESU,Metric) # A‚ãÖcm¬≤‚ãÖstatA‚Åª¬π‚ãÖm‚Åº¬≤\nùò§‚Åª¬π2¬≥5¬≥ = 3.3356409519815205e-6 : ESU -> Metric\n\njulia> currentdensity(Metric,SI2019) # A‚ãÖA‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.resistance","page":"Unit Conversions","title":"MeasureSystems.resistance","text":"resistance = [N*m*s*C‚Åª¬≤], [kg*m¬≤s‚Åª¬πC‚Åª¬≤], [N*m*s*C‚Åª¬≤]\nresistance(U::UnitSystem,S::UnitSystem) = electricpotential(U,S)/current(U,S)\nresistance(v::Real,U::UnitSystem,S::UnitSystem) = v/resistance(U,S)\n\nElectrical resistance or electricpotential per current (Œ©, S‚Åª¬π, V‚ãÖA‚Åª¬π), unit conversion factor.\n\njulia> resistance(EMU,Metric) # Œ©‚ãÖabŒ©‚Åª¬π\n2‚Åª‚Åπ5‚Åª‚Åπ = 1.0e-9 : EMU -> Metric\n\njulia> resistance(ESU,Metric) # Œ©‚ãÖstatŒ©‚Åª¬π\nùò§¬≤2‚Åª‚Åµ5‚Åª‚Åµ = 8.987551787368175e11 : ESU -> Metric\n\njulia> resistance(Metric,SI2019) # Œ©‚ãÖŒ©‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.00000000055 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.conductance-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.conductance","text":"conductance = [N‚Åª¬πm‚Åª¬πs‚Åª¬πC¬≤], [kg‚Åª¬πm‚Åª¬≤s*C¬≤], [N‚Åª¬πm‚Åª¬πs‚Åª¬πC¬≤]\nconductance(U::UnitSystem,S::UnitSystem) = current(U,S)/electricpotential(U,S)\nconductance(v::Real,U::UnitSystem,S::UnitSystem) = v/conductance(U,S)\n\nElectrical conductance or current per electricpotential (S, Œ©‚Åª¬π, A‚ãÖV‚Åª¬π), unit conversion factor.\n\njulia> conductance(EMU,Metric) # S‚ãÖabS‚Åª¬π\n2‚Åπ5‚Åπ = 1.0e9 : EMU -> Metric\n\njulia> conductance(ESU,Metric) # S‚ãÖstatS‚Åª¬π\nùò§‚Åª¬≤2‚Åµ5‚Åµ = 1.1126500560536185e-12 : ESU -> Metric\n\njulia> conductance(Metric,SI2019) # S‚ãÖS‚Åª¬π\nùò©‚Åª¬πùò§*ùò¶¬≤Œ±‚Åª¬πœÑ*2‚Åª‚Å∑5‚Åª‚Å∑ = 0.99999999945 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.resistivity","page":"Unit Conversions","title":"MeasureSystems.resistivity","text":"resistivity = [N*m¬≤s*C‚Åª¬≤], [kg*m¬≥s‚Åª¬πC‚Åª¬≤], [N*m¬≤s*C‚Åª¬≤]\nresistivity(U::UnitSystem,S::UnitSystem) = resistance(U,S)*length(U,S)\nresistivity(v::Real,U::UnitSystem,S::UnitSystem) = v/resistivity(U,S)\n\nElectrical resistivity or resistance by length (Œ©‚ãÖm), unit conversion factor.\n\njulia> resistance(EMU,Metric) # Œ©‚ãÖm‚ãÖabŒ©‚Åª¬π‚ãÖcm‚Åª¬π\n2‚Åª‚Åπ5‚Åª‚Åπ = 1.0e-9 : EMU -> Metric\n\njulia> resistance(ESU,Metric) # Œ©‚ãÖm‚ãÖstatŒ©‚Åª¬π‚ãÖcm‚Åª¬π\nùò§¬≤2‚Åª‚Åµ5‚Åª‚Åµ = 8.987551787368175e11 : ESU -> Metric\n\njulia> resistance(Metric,SI2019) # Œ©‚ãÖŒ©‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.00000000055 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.conductivity","page":"Unit Conversions","title":"MeasureSystems.conductivity","text":"conductivity = [N‚Åª¬πm‚Åª¬≤s‚Åª¬πC¬≤], [kg‚Åª¬πm‚Åª¬≥s*C¬≤], [N‚Åª¬πm‚Åª¬≤s‚Åª¬πC¬≤]\nconductivity(U::UnitSystem,S::UnitSystem) = conductance(U,S)/length(U,S)\nconductivity(v::Real,U::UnitSystem,S::UnitSystem) = v/conductivity(U,S)\n\nReciprocal resistivity or electrical conductivity (S‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> conductivity(EMU,Metric) # S‚ãÖcm‚ãÖabS‚Åª¬π‚ãÖm‚Åª¬π\n2¬π¬π5¬π¬π = 1.0e11 : EMU -> Metric\n\njulia> conductivity(ESU,Metric) # S‚ãÖcm‚ãÖstatS‚Åª¬π‚ãÖm‚Åº¬π\nùò§‚Åª¬≤2‚Å∑5‚Å∑ = 1.1126500560536186e-10 : ESU -> Metric\n\njulia> conductivity(Metric,SI2019) # S‚ãÖS‚Åª¬π\nùò©‚Åª¬πùò§*ùò¶¬≤Œ±‚Åª¬πœÑ*2‚Åª‚Å∑5‚Åª‚Å∑ = 0.99999999945 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.capacitance","page":"Unit Conversions","title":"MeasureSystems.capacitance","text":"capacitance = [N‚Åª¬πm‚Åª¬πC¬≤], [kg‚Åª¬πm‚Åª¬≤s¬≤C¬≤], [N‚Åª¬πm‚Åª¬πC¬≤]\ncapacitance(U::UnitSystem,S::UnitSystem) = charge(U,S)/electricpotential(U,S)\ncapacitance(v::Real,U::UnitSystem,S::UnitSystem) = v/capacitance(U,S)\n\nElectrical capactiance or charge per electricpotential (F, C‚ãÖV‚Åª¬π), unit conversion factor.\n\njulia> capacitance(EMU,Metric) # F‚ãÖabF‚Åª¬π\n2‚Åπ5‚Åπ = 1.0e9 : EMU -> Metric\n\njulia> capacitance(ESU,Metric) # F‚ãÖcm‚Åª¬π\nùò§‚Åª¬≤2‚Åµ5‚Åµ = 1.1126500560536185e-12 : ESU -> Metric\n\njulia> capactiance(Metric,SI2019) # F‚ãÖF‚Åª¬π\nùò©‚Åª¬πùò§*ùò¶¬≤Œ±‚Åª¬πœÑ*2‚Åª‚Å∑5‚Åª‚Å∑ = 0.99999999945 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.inductance","page":"Unit Conversions","title":"MeasureSystems.inductance","text":"inductance = [N*m*s¬≤C‚Åª¬≤], [kg*m¬≤C‚Åª¬≤], [N*m*s¬≤C‚Åª¬≤]\ninductance(U::UnitSystem,S::UnitSystem) = magneticflux(U,S)/current(U,S)\ninductance(v::Real,U::UnitSystem,S::UnitSystem) = v/inductance(U,S)\n\nElectro-magneticflux per current or inductance (H, Œ©‚ãÖs, Wb‚ãÖA‚Åª¬π), unit conversion factor.\n\njulia> inductance(EMU,Metric) # H‚ãÖabH‚Åª¬π\n2‚Åª‚Åπ5‚Åª‚Åπ = 1.0e-9 : EMU -> Metric\n\njulia> inductance(ESU,Metric) # H‚ãÖstatH‚Åª¬π\nùò§¬≤2‚Åª‚Åµ5‚Åª‚Åµ = 8.987551787368175e11 : ESU -> Metric\n\njulia> inductance(Metric,SI2019) # H‚ãÖH‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.00000000055 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.reluctance","page":"Unit Conversions","title":"MeasureSystems.reluctance","text":"reluctance = [N‚Åª¬πm‚Åª¬πs‚Åª¬≤C¬≤rad¬≤*‚Åª¬≤], [kg‚Åª¬πm‚Åª¬≤C¬≤], [N‚Åª¬πm‚Åª¬πs‚Åª¬≤C¬≤]\nreluctance(U::UnitSystem,S::UnitSystem) = rationalization(U,S)*lorentz(U,S)^2/inductance(U,S)\nreluctance(v::Real,U::UnitSystem,S::UnitSystem) = v/reluctance(U,S)\n\nMagnetic reluctance or magnetic resistance (H‚Åª¬π, Gb‚ãÖMx‚Åª¬π), unit conversion factor.\n\njulia> reluctance(EMU,Metric) # abH‚ãÖH‚Åª¬π\nœÑ‚Åª¬π2‚Å∏5‚Åπ = 7.957747154594767e7 : EMU -> Metric\n\njulia> reluctance(ESU,Metric) # statH‚ãÖH‚Åª¬π\nùò§‚Åª¬≤œÑ‚Åª¬π2‚Å¥5‚Åµ = 8.854187817620392e-14 : ESU -> Metric\n\njulia> reluctance(Metric,SI2019) # H‚ãÖH‚Åª¬π\nùò©‚Åª¬πùò§*ùò¶¬≤Œ±‚Åª¬πœÑ*2‚Åª‚Å∑5‚Åª‚Å∑ = 0.99999999945 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.permeance","page":"Unit Conversions","title":"MeasureSystems.permeance","text":"permeance = [N*m*s¬≤C‚Åª¬≤rad‚Åª¬≤‚Åª¬π¬≤], [kg*m¬≤C‚Åª¬≤], [N*m*s¬≤C‚Åª¬≤]\npermeance(U::UnitSystem,S::UnitSystem) = 1/reluctance(U,S)\npermeance(v::Real,U::UnitSystem,S::UnitSystem) = v/permeance(U,S)\n\nMagnetic permeance or magnetic conductance (H, Mx‚ãÖGb‚Åª¬π), unit conversion factor.\n\njulia> permeance(EMU,Metric) # abH‚ãÖH‚Åª¬π\nœÑ*2‚Åª‚Å∏5‚Åª‚Åπ = 1.2566370614359173e-8 : EMU -> Metric\n\njulia> permeance(ESU,Metric) # statH‚ãÖH‚Åª¬π\nùò§¬≤œÑ*2‚Åª‚Å¥5‚Åª‚Åµ = 1.129409066758147e13 : ESU -> Metric\n\njulia> permeance(Metric,SI2019) # H‚ãÖH‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.00000000055 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.permittivity-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.permittivity","text":"permittivity = [N‚Åª¬πm‚Åª¬≤C¬≤rad¬≤], [kg‚Åª¬πm‚Åª¬≥s¬≤C¬≤], [N‚Åª¬πm‚Åª¬≤C¬≤]\npermittivity(U::UnitSystem,S::UnitSystem) = capacitance(U,S)*rationalization(U,S)/length(U,S)\npermittivity(v::Real,U::UnitSystem,S::UnitSystem) = v/permittivity(U,S)\n\nAbsolute permittivity or capacitance per length (F‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> permittivity(EMU,Metric) # F‚ãÖcm‚ãÖabF‚Åª¬π‚ãÖm‚Åª¬π\nœÑ‚Åª¬π2¬π‚Å∞5¬π¬π = 7.957747154594768e9 : EMU -> Metric\n\njulia> permittivity(ESU,Metric) # F‚ãÖm‚Åº¬π\nùò§‚Åª¬≤œÑ‚Åª¬π2‚Å∂5‚Å∑ = 8.85418781762039e-12 : ESU -> Metric\n\njulia> permittivity(Metric,SI2019) # F‚ãÖF‚Åª¬π\nùò©‚Åª¬πùò§*ùò¶¬≤Œ±‚Åª¬πœÑ*2‚Åª‚Å∑5‚Åª‚Å∑ = 0.99999999945 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.permeability-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.permeability","text":"permeability = [N*s¬≤C‚Åª¬≤rad‚Åª¬≤‚Åª¬π¬≤], [kg*m*C‚Åª¬≤], [N*s¬≤C‚Åª¬≤]\npermeability(U::UnitSystem,S::UnitSystem) = permeability(S)/permeability(U)\npermeability(v::Real,U::UnitSystem,S::UnitSystem) = v/permeability(U,S)\n\nMagnetic permeability or inductance per length (H‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> permeability(EMU,Metric) # H‚ãÖcm‚ãÖabH‚Åª¬π‚ãÖm‚Åª¬π\nœÑ*2‚Åª‚Å∂5‚Åª‚Å∑ = 1.2566370614359173e-6 : EMU -> Metric\n\njulia> permeability(ESU,Metric) # H‚ãÖcm‚ãÖstatH‚Åª¬π‚ãÖm‚Åº¬π\nùò§¬≤œÑ*2‚Åª¬≤5‚Åª¬≥ = 1.129409066758147e15 : ESU -> Metric\n\njulia> permeability(Metric,SI2019) # H‚ãÖH‚Åª¬π\nùò©*ùò§‚Åª¬πùò¶‚Åª¬≤Œ±*œÑ‚Åª¬π2‚Å∑5‚Å∑ = 1.00000000055 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.susceptibility","page":"Unit Conversions","title":"MeasureSystems.susceptibility","text":"susceptibility = [rad‚Åª¬≤‚Åª¬π], [ùüô], [ùüô]\nsusceptibility(U::UnitSystem,S::UnitSystem) = 1/rationalization(U,S)\nsusceptibility(v::Real,U::UnitSystem,S::UnitSystem) = v/susceptibility(U,S)\n\nMagnetic/electric volume susceptibility (dimensionless), unit conversion factor.\n\njulia> susceptibility(EMU,Metric)\nœÑ*2 = 12.566370614359172 : EMU -> Metric\n\njulia> susceptibility(ESU,Metric)\nœÑ*2 = 12.566370614359172 : ESU -> Metric\n\njulia> susceptibility(Metric,SI2019)\nùüè = 1.0 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificsusceptibility","page":"Unit Conversions","title":"MeasureSystems.specificsusceptibility","text":"specificsusceptibility = [kg‚Åª¬πm¬≥rad‚Åª¬≤‚Åª¬π], [kg‚Åª¬πm¬≥], [N‚Åª¬πm‚Å¥s‚Åª¬≤]\nspecificsusceptibility(U::UnitSystem,S::UnitSystem) = susceptibility(U,S)/density(U,S)\nspecificsusceptibility(v::Real,U::UnitSystem,S::UnitSystem) = v/specificsusceptibility(U,S)\n\nMagnetic/electric mass specific susceptibility (m¬≥‚ãÖkg‚Åª¬π), unit conversion factor.\n\njulia> specificsusceptibility(EMU,Metric) # m¬≥‚ãÖg‚ãÖkg‚Åª¬π‚ãÖcm‚Åª¬≥\nœÑ*2‚Åª¬≤5‚Åª¬≥ = 0.012566370614359173 : EMU -> Metric\n\njulia> specificsusceptibility(ESU,Metric) # m¬≥‚ãÖg‚ãÖkg‚Åª¬π‚ãÖcm‚Åª¬≥\nœÑ*2‚Åª¬≤5‚Åª¬≥ = 0.012566370614359173 : ESU -> Metric\n\njulia> specificsusceptibility(Metric,SI2019) # m¬≥‚ãÖkg‚ãÖkg‚Åª¬π‚ãÖm‚Åª¬≥\nùüè = 1.0 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.demagnetizingfactor","page":"Unit Conversions","title":"MeasureSystems.demagnetizingfactor","text":"demagnetizingfactor = [rad¬≤], [ùüô], [ùüô]\ndemagnetizingfactor(U::UnitSystem,S::UnitSystem) = 1/susceptibility(U,S)\ndemagnetizingfactor(v::Real,U::UnitSystem,S::UnitSystem) = v/demagnetizingfactor(U,S)\n\nQuantitiy of demagnetizingfactor (dimensionless), unit conversion factor.\n\njulia> demagnetizingfactor(EMU,Metric)\nœÑ‚Åª¬π2‚Åª¬π = 0.07957747154594767 : EMU -> Metric\n\njulia> demagnetizingfactor(ESU,Metric)\nœÑ‚Åª¬π2‚Åª¬π = 0.07957747154594767 : ESU -> Metric\n\njulia> demagnetizingfactor(Metric,SI2019)\nùüè = 1.0 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.vectorpotential","page":"Unit Conversions","title":"MeasureSystems.vectorpotential","text":"vectorpotential = [N*s*C‚Åª¬π], [kg*m*s‚Åª¬πC‚Åª¬π], [N*s*C‚Åª¬π]\nvectorpotential(U::UnitSystem,S::UnitSystem) = magneticflux(U,S)/length(U,S)\nvectorpotential(v::Real,U::UnitSystem,S::UnitSystem) = v/vectorpotential(U,S)\n\nMagnetic vectorpotential (Wb‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> vectorpotential(EMU,Metric) # Wb‚ãÖcm‚ãÖMx‚Åª¬π‚ãÖm‚Åª¬π\n2‚Åª‚Å∂5‚Åª‚Å∂ = 1.0e-6 : EMU -> Metric\n\njulia> vectorpotential(ESU,Metric) # Wb‚ãÖcm‚ãÖstatWb‚Åª¬π‚ãÖm‚Åª¬π\nùò§*2‚Åª‚Å¥5‚Åª‚Å¥ = 29979.2458 : ESU -> Metric\n\njulia> vectorpotential(Metric,SI2019) # Wb‚ãÖWb‚Åª¬π\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤ùò¶‚Åª¬πŒ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.000000000273 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.electricpotential","page":"Unit Conversions","title":"MeasureSystems.electricpotential","text":"electricpotential = [N*m*C‚Åª¬π], [kg*m¬≤s‚Åª¬≤C‚Åª¬π], [N*m*C‚Åª¬π]\nelectricpotential(U::UnitSystem,S::UnitSystem) = energy(U,S)/charge(U,S)\nelectricpotential(v::Real,U::UnitSystem,S::UnitSystem) = v/electricpotential(U,S)\n\nVoltage or electricpotential or energy per charge (V, J‚ãÖC‚Åª¬π), unit conversion factor.\n\njulia> electricpotential(EMU,Metric) # V‚ãÖabV‚Åª¬π\n2‚Åª‚Å∏5‚Åª‚Å∏ = 1.0e-8 : EMU -> Metric\n\njulia> electricpotential(EMU,ESU) # statV‚ãÖabV‚Åª¬π\nùò§‚Åª¬π2‚Åª¬≤5‚Åª¬≤ = 3.33564095198152e-11 : EMU -> ESU\n\njulia> electricpotential(ESU,Metric) # V‚ãÖstatV‚Åª¬π\nùò§*2‚Åª‚Å∂5‚Åª‚Å∂ = 299.792458 : ESU -> Metric\n\njulia> electricpotential(Metric,SI2019) # V‚ãÖV‚Åª¬π\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤ùò¶‚Åª¬πŒ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.000000000273 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticpotential","page":"Unit Conversions","title":"MeasureSystems.magneticpotential","text":"magneticpotential = [s‚Åª¬πC*rad¬≤*‚Åª¬π], [s‚Åª¬πC], [s‚Åª¬πC]\nmagneticpotential(U::UnitSystem,S::UnitSystem) = magneticflux(U,S)*reluctance(U,S)\nmagneticpotential(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticpotential(U,S)\n\nMagnetomotive force or magneticpotential (A, Gb), unit conversion factor.\n\njulia> magneticpotential(EMU,Metric) # A‚ãÖGb‚Åª¬π\nœÑ‚Åª¬π5 = 0.7957747154594768 : EMU -> Metric\n\njulia> magneticpotential(Metric,SI2019) # A‚ãÖA‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.electricfield","page":"Unit Conversions","title":"MeasureSystems.electricfield","text":"electricfield = [N*C‚Åª¬π], [kg*m*s‚Åª¬≤C‚Åª¬π], [N*C‚Åª¬π]\nelectricfield(U::UnitSystem,S::UnitSystem) = electricpotential(U,S)/length(U,S)\nelectricfield(v::Real,U::UnitSystem,S::UnitSystem) = v/electricfield(U,S)\n\nThe electricpotential per length or electricfield (V‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> electricfield(EMU,Metric) # V‚ãÖcm‚ãÖabV‚Åª¬π‚ãÖm‚Åª¬π\n2‚Åª‚Å∂5‚Åª‚Å∂ = 1.0e-6 : EMU -> Metric\n\njulia> electricfield(EMU,ESU) # statV‚ãÖabV‚Åª¬π\nùò§‚Åª¬π2‚Åª¬≤5‚Åª¬≤ = 3.33564095198152e-11 : EMU -> ESU\n\njulia> electricfield(ESU,Metric) # V‚ãÖcm‚ãÖstatV‚Åª¬π‚ãÖm‚Åª¬π\nùò§*2‚Åª‚Å¥5‚Åª‚Å¥ = 29979.2458 : ESU -> Metric\n\njulia> electricfield(Metric,SI2019) # V‚ãÖV‚Åª¬π\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤ùò¶‚Åª¬πŒ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.000000000273 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticfield","page":"Unit Conversions","title":"MeasureSystems.magneticfield","text":"magneticfield = [m‚Åª¬πs‚Åª¬πC*rad¬≤*‚Åª¬π], [m‚Åª¬πs‚Åª¬πC], [m‚Åª¬πs‚Åª¬πC]\nmagneticfield(U::UnitSystem,S::UnitSystem) = current(U,S)*rationalization(U,S)*lorentz(U,S)/length(U,S)\nmagneticfield(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticfield(U,S)\n\nMagnetization or magneticfield or current per length (A‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> magneticfield(EMU,Metric) # A‚ãÖm‚Åª¬π‚ãÖOe‚Åª¬π\nœÑ‚Åª¬π2¬≤5¬≥ = 79.57747154594767 : EMU -> Metric\n\njulia> magneticfield(ESU,Metric) # A‚ãÖcm‚ãÖm‚Åª¬π‚ãÖstatA‚Åª¬π\nùò§‚Åª¬πœÑ‚Åª¬π5 = 2.6544187294380726e-9 : ESU -> Metric\n\njulia> magneticfield(Metric,SI2019) # A‚ãÖA‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.electricflux","page":"Unit Conversions","title":"MeasureSystems.electricflux","text":"electricflux = [N*m¬≤C‚Åª¬π], [kg*m¬≥s‚Åª¬≤C‚Åª¬π], [N*m¬≤C‚Åª¬π]\nelectricflux(U::UnitSystem,S::UnitSystem) = electricpotential(U,S)*length(U,S)\nelectricflux(v::Real,U::UnitSystem,S::UnitSystem) = v/electricflux(U,S)\n\nAmount of electricflux or electricpotential by length (V‚ãÖm), unit conversion factor.\n\njulia> electricflux(EMU,Metric) # V‚ãÖm‚ãÖabV‚Åª¬π‚ãÖcm‚Åª¬π\n2‚Åª¬π‚Å∞5‚Åª¬π‚Å∞ = 1.0e-10 : EMU -> Metric\n\njulia> electricflux(EMU,ESU) # statV‚ãÖabV‚Åª¬π\nùò§‚Åª¬π2‚Åª¬≤5‚Åª¬≤ = 3.33564095198152e-11 : EMU -> ESU\n\njulia> electricflux(ESU,Metric) # V‚ãÖm‚ãÖstatV‚Åª¬π‚ãÖcm‚Åª¬π\nùò§*2‚Åª‚Å∏5‚Åª‚Å∏ = 2.9979245800000003 : ESU -> Metric\n\njulia> electricflux(Metric,SI2019) # V‚ãÖV‚Åª¬π\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤ùò¶‚Åª¬πŒ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.000000000273 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticflux-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.magneticflux","text":"magneticflux = [N*m*s*C‚Åª¬π], [kg*m¬≤s‚Åª¬πC‚Åª¬π], [N*m*s*C‚Åª¬π]\nmagneticflux(U::UnitSystem,S::UnitSystem) = energy(U,S)/lorentz(U,S)/current(U,S)\nmagneticflux(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticflux(U,S)\n\nSurface magneticflux or energy per current (Wb, J‚ãÖA‚Åª¬π, V‚ãÖs), unit conversion factor.\n\njulia> magneticflux(EMU,Metric) # Wb‚ãÖMx‚Åª¬π\n2‚Åª‚Å∏5‚Åª‚Å∏ = 1.0e-8 : EMU -> Metric\n\njulia> magneticflux(ESU,Metric) # Wb‚ãÖstatWb‚Åª¬π\nùò§*2‚Åª‚Å∂5‚Åª‚Å∂ = 299.792458 : ESU -> Metric\n\njulia> magneticflux(Metric,SI2019) # Wb‚ãÖWb‚Åª¬π\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤ùò¶‚Åª¬πŒ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.000000000273 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.electricfluxdensity","page":"Unit Conversions","title":"MeasureSystems.electricfluxdensity","text":"electricfluxdensity = [m‚Åª¬≤C*rad¬≤], [m‚Åª¬≤C], [m‚Åª¬≤C]\nelectricfluxdensity(U::UnitSystem,S::UnitSystem) = charge(U,S)*rationalization(U,S)/area(U,S)\nelectricfluxdensity(v::Real,U::UnitSystem,S::UnitSystem) = v/electricfluxdensity(U,S)\n\nElectric field displacement or surface electricfluxdensity (C‚ãÖm‚Åª¬≤), unit conversion factor.\n\njulia> electricfluxdensity(EMU,Metric) # C‚ãÖcm¬≤‚ãÖabC‚Åª¬π‚ãÖm‚Åª¬≤\nœÑ‚Åª¬π2‚Å¥5‚Åµ = 7957.747154594767 : EMU -> Metric\n\njulia> electricfluxdensity(ESU,Metric) # C‚ãÖcm¬≤‚ãÖstatC‚Åª¬π‚ãÖm‚Åº¬≤\nùò§‚Åª¬πœÑ‚Åª¬π2¬≤5¬≥ = 2.6544187294380724e-7 : ESU -> Metric\n\njulia> electricfluxdensity(Metric,SI2019) # C‚ãÖC‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticfluxdensity","page":"Unit Conversions","title":"MeasureSystems.magneticfluxdensity","text":"magneticfluxdensity = [N*m‚Åª¬πs*C‚Åª¬π], [kg*s‚Åª¬πC‚Åª¬π], [N*m‚Åª¬πs*C‚Åª¬π]\nmagneticfluxdensity(U::UnitSystem,S::UnitSystem) = magneticflux(U,S)/area(U,S)\nmagneticfluxdensity(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticfluxdensity(U,S)\n\nMagnetic induction or surface magneticfluxdensity (T, Wb‚ãÖm‚Åª¬≤), unit conversion factor.\n\njulia> magneticfluxdensity(EMU,Metric) # T‚ãÖG‚Åª¬π\n2‚Åª‚Å¥5‚Åª‚Å¥ = 0.0001 : EMU -> Metric\n\njulia> magneticfluxdensity(EMU,ESU) # statT‚ãÖG‚Åª¬π\nùò§‚Åª¬π2‚Åª¬≤5‚Åª¬≤ = 3.33564095198152e-11 : EMU -> ESU\n\njulia> magneticfluxdensity(Metric,SI2019) # T‚ãÖT‚Åª¬π\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤ùò¶‚Åª¬πŒ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.000000000273 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.electricdipolemoment","page":"Unit Conversions","title":"MeasureSystems.electricdipolemoment","text":"electricdipolemoment = [m*C], [m*C], [m*C]\nelectricdipolemoment(U::UnitSystem,S::UnitSystem) = charge(U,S)*length(U,S)\nelectricdipolemoment(v::Real,U::UnitSystem,S::UnitSystem) = v/electricdipolemoment(U,S)\n\nElectric dipole moment or electricdipolemoment (C‚ãÖm), unit conversion factor.\n\njulia> electricdipolemoment(EMU,Metric) # C‚ãÖm‚ãÖabC‚Åª¬π‚ãÖcm‚Åª¬π\n2‚Åª¬π5‚Åª¬π = 0.1 : EMU -> Metric\n\njulia> electricdipolemoment(ESU,Metric) # C‚ãÖm‚ãÖstatC‚Åª¬π‚ãÖcm‚Åº¬π\nùò§‚Åª¬π2‚Åª¬≥5‚Åª¬≥ = 3.3356409519815203e-12 : ESU -> Metric\n\njulia> electricdipolemoment(Metric,SI2019) # C‚ãÖC‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticdipolemoment","page":"Unit Conversions","title":"MeasureSystems.magneticdipolemoment","text":"magneticdipolemoment = [m¬≤s‚Åª¬πC*‚Åª¬π], [m¬≤s‚Åª¬πC], [m¬≤s‚Åª¬πC]\nmagneticdipolemoment(U::UnitSystem,S::UnitSystem) = current(U,S)*lorentz(U,S)/area(U,S)\nmagneticdipolemoment(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticdipolemoment(U,S)\n\nMagnetic dipole moment or magneticdipolemoment (J‚ãÖT‚Åª¬π, A‚ãÖm¬≤), unit conversion factor.\n\njulia> magneticdipolemoment(EMU,Metric) # J‚ãÖG‚ãÖT‚Åª¬π‚ãÖerg‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 : EMU -> Metric\n\njulia> magneticdipolemoment(ESU,Metric) # J‚ãÖstatT‚ãÖT‚Åª¬π‚ãÖerg‚Åº¬π\nùò§‚Åª¬π2‚Åª‚Åµ5‚Åª‚Åµ = 3.3356409519815204e-14 : ESU -> Metric\n\njulia> magneticdipolemoment(Metric,SI2019) # A‚ãÖA‚Åª¬π‚ãÖ\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.electricpolarizability","page":"Unit Conversions","title":"MeasureSystems.electricpolarizability","text":"electricpolarizability = [N‚Åª¬πm*C¬≤], [kg‚Åª¬πs¬≤C¬≤], [N‚Åª¬πm*C¬≤]\nelectricpolarizability(U::UnitSystem,S::UnitSystem) = electricdipolemoment(U,S)/electricfield(U,S)\nelectricpolarizability(v::Real,U::UnitSystem,S::UnitSystem) = v/electricpolarizability(U,S)\n\nPolarizability or electricdipolemoment per electricfield (C‚ãÖm¬≤‚ãÖV‚Åª¬π), unit conversion factor.\n\njulia> electricpolarizability(EMU,Metric) # C‚ãÖm¬≤‚ãÖabV‚ãÖabC‚Åª¬π‚ãÖcm‚Åª¬≤‚ãÖV‚Åª¬π\n2‚Åµ5‚Åµ = 100000.0 : EMU -> Metric\n\njulia> electricpolarizability(ESU,Metric) # C‚ãÖm¬≤‚ãÖstatV‚ãÖstatC‚Åª¬π‚ãÖcm‚Åº¬≤‚ãÖV‚Åª¬π\nùò§‚Åª¬≤2*5 = 1.1126500560536184e-16 : ESU -> Metric\n\njulia> electricpolarizability(Metric,Gauss) # D‚ãÖcm¬≤‚ãÖV‚Åª¬π‚ãÖC‚Åª¬π‚ãÖm‚Åª¬≤‚ãÖabV‚Åª¬π\nùò§¬≤2‚Åª¬π5‚Åª¬π = 8.987551787368176e15 : Metric -> Gauss\n\njulia> electricpolarizability(Metric,SI2019) # C‚ãÖV‚ãÖC‚Åª¬π‚ãÖV‚Åª¬π\nùò©‚Åª¬πùò§*ùò¶¬≤Œ±‚Åª¬πœÑ*2‚Åª‚Å∑5‚Åª‚Å∑ = 0.99999999945 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticpolarizability","page":"Unit Conversions","title":"MeasureSystems.magneticpolarizability","text":"magneticpolarizability = [m¬≥rad‚Åª¬≤‚Åª¬π], [m¬≥], [m¬≥]\nmagneticpolarizability(U::UnitSystem,S::UnitSystem) = magneticdipolemoment(U,S)/magneticfield(U,S)\nmagneticpolarizability(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticpolarizability(U,S)\n\nPolarizability or magneticdipolemoment per magneticfield (m¬≥), unit conversion factor.\n\njulia> electricpolarizability(EMU,Metric) # m¬≥‚ãÖcm‚Åª¬≥\n2‚Åµ5‚Åµ = 100000.0 : EMU -> Metric\n\njulia> electricpolarizability(ESU,Metric) # m¬≥‚ãÖcm‚Åº¬≥\nùò§‚Åª¬≤2*5 = 1.1126500560536184e-16 : ESU -> Metric\n\njulia> electricpolarizability(Metric,Gauss) # cm¬≥‚ãÖm‚Åª¬≥\nùò§¬≤2‚Åª¬π5‚Åª¬π = 8.987551787368176e15 : Metric -> Gauss\n\njulia> electricpolarizability(Metric,SI2019)\nùò©‚Åª¬πùò§*ùò¶¬≤Œ±‚Åª¬πœÑ*2‚Åª‚Å∑5‚Åª‚Å∑ = 0.99999999945 ¬± 1.5e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magneticmoment","page":"Unit Conversions","title":"MeasureSystems.magneticmoment","text":"magneticmoment = [N*m¬≤s*C‚Åª¬π], [kg*m¬≥s‚Åª¬πC‚Åª¬π], [N*m¬≤s*C‚Åª¬π]\nmagneticmoment(U::UnitSystem,S::UnitSystem) = magneticflux(U,S)*length(U,S)\nmagneticmoment(v::Real,U::UnitSystem,S::UnitSystem) = v/magneticmoment(U,S)\n\nAmount of magneticmoment or magneticflux by length (Wb‚ãÖm), unit conversion factor.\n\njulia> magneticmoment(EMU,Metric) # Wb‚ãÖm‚ãÖMx‚Åª¬π‚ãÖcm‚Åª¬π\n2‚Åª¬π‚Å∞5‚Åª¬π‚Å∞ = 1.0e-10 : EMU -> Metric\n\njulia> magneticmoment(ESU,Metric) # Wb‚ãÖm‚ãÖstatWb‚Åª¬π‚ãÖcm‚Åª¬π\nùò§*2‚Åª‚Å∏5‚Åª‚Å∏ = 2.9979245800000003 : ESU -> Metric\n\njulia> magneticmoment(Metric,SI2019) # Wb‚ãÖWb‚Åª¬π\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤ùò¶‚Åª¬πŒ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.000000000273 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magnetizability","page":"Unit Conversions","title":"MeasureSystems.magnetizability","text":"magnetizability = [m¬≥], [m¬≥], [m¬≥]\nmagnetizability(U::UnitSystem,S::UnitSystem) = magneticmoment(U,S)/magneticfluxdensity(U,S)\nmagnetizability(v::Real,U::UnitSystem,S::UnitSystem) = v/magnetizability(U,S)\n\nQuantity of magneticmoment per magneticfluxdensity (m‚Åª¬π), unit conversion factor.\n\njulia> magnetizability(EMU,Metric) # cm‚ãÖm‚Åª¬π\n2‚Åª‚Å∂5‚Åª‚Å∂ = 1.0e-6 : EMU -> Metric\n\njulia> magnetizability(ESU,Metric) # cm‚ãÖm‚Åª¬π\n2‚Åª‚Å∂5‚Åª‚Å∂ = 1.0e-6 : ESU -> Metric\n\njulia> magnetizability(Metric,SI2019) # m‚ãÖm‚Åª¬π\nùüè = 1.0 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.magnetization","page":"Unit Conversions","title":"MeasureSystems.magnetization","text":"magnetization = [N*m‚Åª¬πs*C‚Åª¬π], [kg*s‚Åª¬πC‚Åª¬π], [N*m‚Åª¬πs*C‚Åª¬π]\nmagnetization(U::UnitSystem,S::UnitSystem) = magneticmoment(U,S)/volume(U,S)\nmagnetization(v::Real,U::UnitSystem,S::UnitSystem) = v/magnetization(U,S)\n\nAmount of magneticmoment per volume (Wb‚ãÖm‚Åª¬≤), unit conversion factor.\n\njulia> magnetization(EMU,Metric) # Wb‚ãÖcm¬≤‚ãÖMx‚Åª¬π‚ãÖm‚Åª¬≤\n2‚Åª‚Å¥5‚Åª‚Å¥ = 0.0001 : EMU -> Metric\n\njulia> magnetization(ESU,Metric) # Wb‚ãÖcm¬≤‚ãÖstatWb‚Åª¬π‚ãÖm‚Åª¬≤\nùò§*2‚Åª¬≤5‚Åª¬≤ = 2.99792458e6 : ESU -> Metric\n\njulia> magnetization(Metric,SI2019) # Wb‚ãÖWb‚Åª¬π\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤ùò¶‚Åª¬πŒ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.000000000273 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificmagnetization","page":"Unit Conversions","title":"MeasureSystems.specificmagnetization","text":"specificmagnetization = [N‚Åª¬πkg*m‚Åª¬≤s‚Åª¬πC*‚Åª¬π], [m‚Åª¬≥s*C], [m‚Åª¬≥s*C]\nspecificmagnetization(U::UnitSystem,S::UnitSystem) = magneticmoment(U,S)/mass(U,S)\nspecificmagnetization(v::Real,U::UnitSystem,S::UnitSystem) = v/specificmagnetization(U,S)\n\nAmount of magneticmoment per mass (Wb‚ãÖm‚ãÖkg‚Åª¬π), unit conversion factor.\n\njulia> specificmagnetization(EMU,Metric) # Wb‚ãÖm‚ãÖg‚ãÖMx‚Åª¬π‚ãÖcm‚Åª¬π‚ãÖkg‚Åª¬π\n2‚Å∑5‚Å∑ = 1.0e7 : EMU -> Metric\n\njulia> specificmagnetization(ESU,Metric) # Wb‚ãÖm‚ãÖg‚ãÖstatWb‚Åª¬π‚ãÖcm‚Åª¬π‚ãÖkg‚Åª¬π\nùò§‚Åª¬π2‚Åµ5‚Åµ = 0.00033356409519815205 : ESU -> Metric\n\njulia> specificmagnetization(Metric,SI2019) # Wb‚ãÖWb‚Åª¬π\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.rigidity","page":"Unit Conversions","title":"MeasureSystems.rigidity","text":"rigidity = [N*s*C‚Åª¬π], [kg*m*s‚Åª¬πC‚Åª¬π], [N*s*C‚Åª¬π]\nrigidity(U::UnitSystem,S::UnitSystem) = magneticfluxdensity(U,S)*length(U,S)\nrigidity(v::Real,U::UnitSystem,S::UnitSystem) = v/rigidity(U,S)\n\nElectromagnetic rigidity (T‚ãÖm), unit conversion factor.\n\njulia> rigidity(EMU,Metric) # T‚ãÖm‚ãÖG‚Åª¬π‚ãÖcm‚Åª¬π\n2‚Åª‚Å∂5‚Åª‚Å∂ = 1.0e-6 : EMU -> Metric\n\njulia> rigidity(EMU,ESU) # statT‚ãÖG‚Åª¬π\nùò§‚Åª¬π2‚Åª¬≤5‚Åª¬≤ = 3.33564095198152e-11 : EMU -> ESU\n\njulia> rigidity(Metric,SI2019) # T‚ãÖT‚Åª¬π\nùò©¬π·êü¬≤ùò§‚Åª¬π·êü¬≤ùò¶‚Åª¬πŒ±¬π·êü¬≤œÑ‚Åª¬π·êü¬≤2‚Å∑·êü¬≤5‚Å∑·êü¬≤ = 1.000000000273 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.polestrength","page":"Unit Conversions","title":"MeasureSystems.polestrength","text":"polestrength = [m*s‚Åª¬πC*‚Åª¬π], [m*s‚Åª¬πC], [m*s‚Åª¬πC]\npolestrength(U::UnitSystem,S::UnitSystem) = magneticdipolemoment(U,S)/length(U,S)\npolestrength(v::Real,U::UnitSystem,S::UnitSystem) = v/polestrength(U,S)\n\nMagnetic polestrength is analogous to charge (A‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> polestrength(EMU,Metric) # A‚ãÖm‚Åª¬π‚ãÖpole‚Åª¬π\n2‚Åª¬π5‚Åª¬π = 0.1 : EMU -> Metric\n\njulia> polestrength(Metric,SI2019) # A‚ãÖA‚Åª¬π‚ãÖ\nùò©‚Åª¬π·êü¬≤ùò§¬π·êü¬≤ùò¶*Œ±‚Åª¬π·êü¬≤œÑ¬π·êü¬≤2‚Åª‚Å∑·êü¬≤5‚Åª‚Å∑·êü¬≤ = 0.999999999727 ¬± 7.7e-11 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Thermodynamic-Units-1","page":"Unit Conversions","title":"Thermodynamic Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"MeasureSystems.temperature\nentropy\nspecificentropy\nvolumeheatcapacity\nMeasureSystems.thermalconductivity\nthermalconductance\nthermalresistance\nthermalexpansion\nlapserate","category":"page"},{"location":"convert.html#MeasureSystems.temperature","page":"Unit Conversions","title":"MeasureSystems.temperature","text":"temperature = [K], [K], [K]\ntemperature(U::UnitSystem,S::UnitSystem) = mass(U,S)*speed(U,S)^2/boltzmann(U,S)\ntemperature(v::Real,U::UnitSystem,S::UnitSystem) = v/temperature(U,S)\n\nMeasurement scale for thermodynamic energy or temperature (K), unit conversion factor.\n\njulia> temperature(Metric,SI2019) # K‚ãÖK‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 : Metric -> SI2019\n\njulia> temperature(English,SI2019) # K‚ãÖ¬∞R‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥3‚Åª¬≤5‚Å¥ = 0.55555555536 ¬± 1.7e-10 : English -> SI2019\n\njulia> temperature(English,Metric) # K‚ãÖ¬∞R‚Åª¬π\n3‚Åª¬≤5 = 0.5555555555555556 : English -> Metric\n\njulia> temperature(PlanckGauss,Metric) # K‚ãÖTP‚Åª¬π\nkB‚Åª¬πùò©‚Åª¬πùò§¬≥mP*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª‚Å¥5‚Åª¬≥ = 1.416784e32 ¬± 1.6e27 : PlanckGauss -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.entropy","page":"Unit Conversions","title":"MeasureSystems.entropy","text":"entropy = [N*m*K‚Åª¬π], [kg*m¬≤s‚Åª¬≤K‚Åª¬π], [N*m*K‚Åª¬π]\nentropy(U::UnitSystem,S::UnitSystem) = energy(U,S)/temperature(U,S)\nentropy(v::Real,U::UnitSystem,S::UnitSystem) = v/entropy(U,S)\n\nHeat capacity or energy per temperature or entropy (J‚ãÖK‚Åª¬π), unit conversion factor.\n\njulia> entropy(Metric,SI2019) # K‚ãÖK‚Åª¬π\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª‚Å¥5‚Åª¬≥ = 1.00000000034 ¬± 3.1e-10 : Metric -> SI2019\n\njulia> entropy(CGS,Metric) # J‚ãÖerg‚Åª¬π\n2‚Åª‚Å∑5‚Åª‚Å∑ = 1.0e-7 : Gauss -> Metric\n\njulia> entropy(English,SI2019) # J‚ãÖ¬∞R‚ãÖK‚Åª¬π‚ãÖft‚Åª¬π‚ãÖlb‚Åª¬π\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*g‚ÇÄ*ft*lb*2‚Åª‚Å¥3¬≤5‚Åª‚Å¥ = 2.44047230784 ¬± 7.5e-10 : English -> SI2019\n\njulia> entropy(Survey,English) # ftUS¬≤‚ãÖ¬∞R‚ãÖ¬∞ft‚Åª¬≤‚ãÖ¬∞R‚Åª¬π\nft‚Åª¬πftUS = 1.0000020000039997 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificentropy","page":"Unit Conversions","title":"MeasureSystems.specificentropy","text":"specificentropy = [N*kg‚Åª¬πm*K‚Åª¬π], [m¬≤s‚Åª¬≤K‚Åª¬π], [m¬≤s‚Åª¬≤K‚Åª¬π]\nspecificentropy(U::UnitSystem,S::UnitSystem) = specificenergy(U,S)/temperature(U,S)\nspecificentropy(v::Real,U::UnitSystem,S::UnitSystem) = v/specificentropy(U,S)\n\nSpecific heat capacity or specificentropy (J‚ãÖK‚Åª¬π‚ãÖkg‚Åª¬π), unit conversion factor.\n\njulia> specificentropy(Metric,SI2019) # m¬≤‚ãÖK‚ãÖK‚Åª¬π‚ãÖcm‚Åª¬≤\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª‚Å¥5‚Åª¬≥ = 1.00000000034 ¬± 3.1e-10 : Metric -> SI2019\n\njulia> specificentropy(CGS,Metric) # m¬≤‚ãÖcm‚Åª¬≤\n2‚Åª‚Å¥5‚Åª‚Å¥ = 0.0001 : Gauss -> Metric\n\njulia> specificentropy(English,Metric) # m¬≤‚ãÖ¬∞R‚ãÖK‚Åª¬π‚ãÖft‚Åª¬≤\ng‚ÇÄ*ft*3¬≤5‚Åª¬π = 5.380320456 : English -> Metric\n\njulia> specificentropy(Survey,English) # ft¬≤‚ãÖ¬∞R‚ãÖftUS‚Åª¬≤‚ãÖ¬∞R‚Åª¬π\nft‚Åª¬πftUS = 1.0000020000039997 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.volumeheatcapacity","page":"Unit Conversions","title":"MeasureSystems.volumeheatcapacity","text":"volumeheatcapacity = [N*m‚Åª¬≤K‚Åª¬π], [kg*m‚Åª¬πs‚Åª¬≤K‚Åª¬π], [N*m‚Åª¬≤K‚Åª¬π]\nvolumeheatcapacity(U::UnitSystem,S::UnitSystem) = entropy(U,S)/volume(U,S)\nvolumeheatcapacity(v::Real,U::UnitSystem,S::UnitSystem) = v/volumeheatcapacity(U,S)\n\nThe entropy per volume or volumeheatcapacity (J‚ãÖK‚Åª¬π‚ãÖm‚Åª¬≥), unit conversion factor.\n\njulia> volumeheatcapacity(Metric,SI2019) # K‚ãÖK‚Åª¬π\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª‚Å¥5‚Åª¬≥ = 1.00000000034 ¬± 3.1e-10 : Metric -> SI2019\n\njulia> volumeheatcapacity(CGS,Metric) # J‚ãÖcm¬≥‚ãÖerg‚Åª¬π‚ãÖm‚Åª¬≥\n2‚Åª¬π5‚Åª¬π = 0.1 : Gauss -> Metric\n\njulia> volumeheatcapacity(English,SI2019) # J‚ãÖft¬≤‚ãÖ¬∞R‚ãÖK‚Åª¬π‚ãÖlb‚Åª¬π‚ãÖm‚Åª¬≥\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*g‚ÇÄ*ft‚Åª¬≤lb*2‚Åª‚Å¥3¬≤5‚Åª‚Å¥ = 86.184466194 ¬± 2.7e-8 : English -> SI2019\n\njulia> volumeheatcapacity(Survey,English) # ftUS‚Åµ¬∞R‚ãÖ¬∞ft‚Åª‚Åµ‚ãÖ¬∞R‚Åª¬π\nft¬≤ftUS‚Åª¬≤ = 0.9999960000040001 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.thermalconductivity","page":"Unit Conversions","title":"MeasureSystems.thermalconductivity","text":"thermalconductivity = [N*s‚Åª¬πK‚Åª¬π], [kg*m*s‚Åª¬≥K‚Åª¬π], [N*s‚Åª¬πK‚Åª¬π]\nthermalconductivity(U::UnitSystem,S::UnitSystem) = force(U,S)/time(U,S)/temperature(U,S)\nthermalconductivity(v::Real,U::UnitSystem,S::UnitSystem) = v/thermalconductivity(U,S)\n\nHeat conductivity or thermalconductivity (W‚ãÖm‚Åª¬π‚ãÖK‚Åª¬π), unit conversion factor.\n\njulia> thermalconductivity(Metric,SI2019) # K‚ãÖK‚Åª¬π\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª‚Å¥5‚Åª¬≥ = 1.00000000034 ¬± 3.1e-10 : Metric -> SI2019\n\njulia> thermalconductivity(CGS,Metric) # N‚ãÖdyn‚Åª¬π\n2‚Åª‚Åµ5‚Åª‚Åµ = 9.999999999999999e-6 : Gauss -> Metric\n\njulia> thermalconductivity(English,Metric) # N‚ãÖ¬∞R‚ãÖK‚Åª¬π‚ãÖft‚Åª¬π‚ãÖlb‚Åª¬π\ng‚ÇÄ*lb*3¬≤5‚Åª¬π = 8.0067989074689 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.thermalconductance","page":"Unit Conversions","title":"MeasureSystems.thermalconductance","text":"thermalconductance = [N*m*s‚Åª¬πK‚Åª¬π], [kg*m¬≤s‚Åª¬≥K‚Åª¬π], [N*m*s‚Åª¬πK‚Åª¬π]\nthermalconductance(U::UnitSystem,S::UnitSystem) = thermalconductivity(U,S)*length(U,S)\nthermalconductance(v::Real,U::UnitSystem,S::UnitSystem) = v/thermalconductance(U,S)\n\nReciprocal of thermalresistance (W‚ãÖK‚Åª¬π), unit conversion factor.\n\njulia> thermalconductance(Metric,SI2019) # K‚ãÖK‚Åª¬π\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª‚Å¥5‚Åª¬≥ = 1.00000000034 ¬± 3.1e-10 : Metric -> SI2019\n\njulia> thermalconductance(CGS,Metric) # W‚ãÖs‚ãÖerg‚Åª¬π\n2‚Åª‚Å∑5‚Åª‚Å∑ = 1.0e-7 : Gauss -> Metric\n\njulia> thermalconductance(English,Metric) # J‚ãÖ¬∞R‚ãÖK‚Åª¬π‚ãÖft‚Åª¬π‚ãÖlb‚Åª¬π\ng‚ÇÄ*ft*lb*3¬≤5‚Åª¬π = 2.440472306996521 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.thermalresistance","page":"Unit Conversions","title":"MeasureSystems.thermalresistance","text":"thermalresistance = [N‚Åª¬πm‚Åª¬πs*K], [kg‚Åª¬πm‚Åª¬≤s¬≥K], [N‚Åª¬πm‚Åª¬πs*K]\nthermalresistance(U::UnitSystem,S::UnitSystem) = 1/thermalconductivity(U,S)/length(U,S)\nthermalresistance(v::Real,U::UnitSystem,S::UnitSystem) = v/thermalresistance(U,S)\n\nResistance to heat flow or thermalresistance (K‚ãÖW‚Åª¬π), unit conversion factor.\n\njulia> thermalresistance(Metric,SI2019) # K‚ãÖK‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 : Metric -> SI2019\n\njulia> thermalresistance(CGS,Metric) # erg‚ãÖs‚Åª¬π‚ãÖW‚Åª¬π\n2‚Å∑5‚Å∑ = 1.0e7 : Gauss -> Metric\n\njulia> thermalresistance(English,Metric) # ft‚ãÖlb‚ãÖK‚ãÖ¬∞R‚Åª¬π‚ãÖJ‚Åª¬π\ng‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π3‚Åª¬≤5 = 0.40975674959848074 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.thermalexpansion","page":"Unit Conversions","title":"MeasureSystems.thermalexpansion","text":"thermalexpansion = [K‚Åª¬π], [K‚Åª¬π], [K‚Åª¬π]\nthermalexpansion(U::UnitSystem,S::UnitSystem) = 1/temperature(U,S)\nthermalexpansion(v::Real,U::UnitSystem,S::UnitSystem) = v/thermalexpansion(U,S)\n\nMeasurement scale for coefficient of thermalexpansion (K‚Åª¬π), unit conversion factor.\n\njulia> thermalexpansion(Metric,SI2019) # K‚ãÖK‚Åª¬π\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª‚Å¥5‚Åª¬≥ = 1.00000000034 ¬± 3.1e-10 : Metric -> SI2019\n\njulia> thermalexpansion(English,SI2019) # ¬∞R‚ãÖK‚Åª¬π\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª‚Å¥3¬≤5‚Åª‚Å¥ = 1.80000000062 ¬± 5.5e-10 : English -> SI2019\n\njulia> thermalexpansion(English,Metric) # ¬∞R‚ãÖK‚Åª¬π\n3¬≤5‚Åª¬π = 1.8 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.lapserate","page":"Unit Conversions","title":"MeasureSystems.lapserate","text":"lapserate = [m‚Åª¬πK], [m‚Åª¬πK], [m‚Åª¬πK]\nlapserate(U::UnitSystem,S::UnitSystem) = temperature(U,S)/length(U,S)\nlapserate(v::Real,U::UnitSystem,S::UnitSystem) = v/lapserate(U,S)\n\nTemperature gradient over length or lapserate (K‚ãÖm‚Åª¬π), unit conversion factor.\n\njulia> lapserate(Metric,SI2019) # K‚ãÖK‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 : Metric -> SI2019\n\njulia> lapserate(English,SI2019) # K‚ãÖft‚ãÖ¬∞R‚Åª¬π‚ãÖm‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πft‚Åª¬π2‚Å¥3‚Åª¬≤5‚Å¥ = 1.82268882994 ¬± 5.6e-10 : English -> SI2019\n\njulia> lapserate(English,Metric) # K‚ãÖft‚ãÖ¬∞R‚Åª¬π‚ãÖm‚Åª¬π\nft‚Åª¬π3‚Åª¬≤5 = 1.8226888305628461 : English -> Metric\n\njulia> lapserate(EnglishUS,English) # ¬∞R‚ãÖftUS‚ãÖ¬∞R‚Åª¬π‚ãÖft‚Åª¬π\nft*ftUS‚Åª¬π = 0.9999980000000002 : Survey -> English\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Molar-Units-1","page":"Unit Conversions","title":"Molar Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"MeasureSystems.molarmass(::UnitSystem,::UnitSystem)\nmolality\nmole\nmolarity\nmolarvolume\nmolarentropy\nmolarenergy\nmolarconductivity\nmolarsusceptibility\ncatalysis\nspecificity","category":"page"},{"location":"convert.html#MeasureSystems.molarmass-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.molarmass","text":"molarmass = [kg*mol‚Åª¬π], [kg*mol‚Åª¬π], [N*m‚Åª¬πs¬≤mol‚Åª¬π]\nmolarmass(U::UnitSystem,S::UnitSystem) = molarmass(S)/molarmass(U)\nmolarmass(v::Real,U::UnitSystem,S::UnitSystem) = v/molarmass(U,S)\n\nMolar mass or mass per mole (kg‚ãÖmol‚Åª¬π), unit conversion factor.\n\njulia> molarmass(CGS,Metric) # mol‚ãÖmol‚Åª¬π\n2‚Åª¬≥5‚Åª¬≥ = 0.001 : Gauss -> Metric\n\njulia> molarmass(Metric,SI2019) # mol‚ãÖmol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"method"},{"location":"convert.html#MeasureSystems.molality","page":"Unit Conversions","title":"MeasureSystems.molality","text":"molality = [kg‚Åª¬πmol], [kg‚Åª¬πmol], [N‚Åª¬πm*s‚Åª¬≤mol]\nmolality(U::UnitSystem,S::UnitSystem) = molarmass(U)/molarmass(S)\nmolality(v::Real,U::UnitSystem,S::UnitSystem) = v/molality(U,S)\n\nMolality or mole per mass (mol‚ãÖkg‚Åª¬π), unit conversion factor.\n\njulia> molality(CGS,Metric) # mol‚ãÖmol‚Åª¬π\n2¬≥5¬≥ = 1000.0 : Gauss -> Metric\n\njulia> molality(Metric,SI2019) # mol‚ãÖmol‚Åª¬π\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*2‚Åª‚Å¥5‚Åª¬≥ = 1.00000000034 ¬± 3.1e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.mole","page":"Unit Conversions","title":"MeasureSystems.mole","text":"mole = [mol], [mol], [mol]\nmole(U::UnitSystem,S::UnitSystem) = mass(U,S)*molality(U,S)\nmole(v::Real,U::UnitSystem,S::UnitSystem) = v/mole(U,S)\n\nAmount of molecular substance or mole (mol), unit conversion factor.\n\njulia> mole(SI2019,Metric) # mol‚ãÖmol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 : SI2019 -> Metric\n\njulia> mole(British,SI2019) # mol‚ãÖslug-mol‚Åª¬π\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*lb*2‚Åª¬π = 453.59237016 ¬± 1.4e-7 : English -> SI2019\n\njulia> mole(English,SI2019) # mol‚ãÖlb-mol‚Åª¬π\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*lb*2‚Åª¬π = 453.59237016 ¬± 1.4e-7 : English -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarity","page":"Unit Conversions","title":"MeasureSystems.molarity","text":"molarity = [m‚Åª¬≥mol], [m‚Åª¬≥mol], [m‚Åª¬≥mol]\nmolarity(U::UnitSystem,S::UnitSystem) = mole(U,S)/volume(U,S)\nmolarity(v::Real,U::UnitSystem,S::UnitSystem) = v/molarity(U,S)\n\nMolar concentration or mole per volume or molarity (mol‚ãÖm‚Åª¬≥), unit conversion factor.\n\njulia> molarity(CGS,Metric) # cm¬≥‚ãÖm‚Åª¬≥\n2‚Å∂5‚Å∂ = 1.0e6 : Gauss -> Metric\n\njulia> molarity(English,SI2019) # ft¬≥‚ãÖm‚Åª¬≥\nùò©‚Åª¬πùò§*NA‚Åª¬πR‚àû‚Åª¬πŒ±¬≤Œº‚Çë·µ§*ft‚Åª¬≥lb*2‚Åª¬π = 16018.4633795 ¬± 4.9e-6 : English -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarvolume","page":"Unit Conversions","title":"MeasureSystems.molarvolume","text":"molarvolume = [m¬≥mol‚Åª¬π], [m¬≥mol‚Åª¬π], [m¬≥mol‚Åª¬π]\nmolarvolume(U::UnitSystem,S::UnitSystem) = volume(U,S)/mole(U,S)\nmolarvolume(v::Real,U::UnitSystem,S::UnitSystem) = v/molarvolume(U,S)\n\nOccupied volume per mole or molarvolume (m¬≥‚ãÖmol‚Åª¬π), unit conversion factor.\n\njulia> molarvolume(CGS,Metric) # m¬≥‚ãÖcm‚Åª¬≥\n2‚Åª‚Å∂5‚Åª‚Å∂ = 1.0e-6 : Gauss -> Metric\n\njulia> molarvolume(English,SI2019) # m¬≥‚ãÖft‚Åª¬≥\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πft¬≥lb‚Åª¬π2 = 6.2427960555e-5 ¬± 1.9e-14 : English -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarentropy","page":"Unit Conversions","title":"MeasureSystems.molarentropy","text":"molarentropy = [N*m*K‚Åª¬πmol‚Åª¬π], [kg*m¬≤s‚Åª¬≤K‚Åª¬πmol‚Åª¬π], [N*m*K‚Åª¬πmol‚Åª¬π]\nmolarentropy(U::UnitSystem,S::UnitSystem) = entropy(U,S)/mole(U,S)\nmolarentropy(v::Real,U::UnitSystem,S::UnitSystem) = v/molarentropy(U,S)\n\nMolar heat capacity or entropy per mole (J‚ãÖK‚Åª¬π‚ãÖmol‚Åª¬π), unit conversion factor.\n\njulia> molarentropy(CGS,Metric) # J‚ãÖerg‚Åª¬π\n2‚Åª‚Å∑5‚Åª‚Å∑ = 1.0e-7 : Gauss -> Metric\n\njulia> molarentropy(English,SI2019) # J‚ãÖ¬∞R‚ãÖlb-mol‚ãÖft‚Åª¬π‚ãÖlb‚Åª¬π‚ãÖK‚Åª¬π‚ãÖmol‚Åª¬π\ng‚ÇÄ*ft*2‚Åª¬≥3¬≤5‚Åª‚Å¥ = 0.005380320456000001 : English -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarenergy","page":"Unit Conversions","title":"MeasureSystems.molarenergy","text":"molarenergy = [N*m*mol‚Åª¬π], [kg*m¬≤s‚Åª¬≤mol‚Åª¬π], [N*m*mol‚Åª¬π]\nmolarenergy(U::UnitSystem,S::UnitSystem) = energy(U,S)/mole(U,S)\nmolarenergy(v::Real,U::UnitSystem,S::UnitSystem) = v/molarenergy(U,S)\n\nGibbs free energy per mole or molarenergy (J‚ãÖmol‚Åª¬π), unit conversion factor.\n\njulia> molarenergy(CGS,Metric) # J‚ãÖerg‚Åª¬π\n2‚Åª‚Å∑5‚Åª‚Å∑ = 1.0e-7 : Gauss -> Metric\n\njulia> molarenergy(English,SI2019) # J‚ãÖslug-mol‚ãÖft‚Åª¬π‚ãÖlb‚Åª¬π‚ãÖmol‚Åª¬π\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬πg‚ÇÄ*ft*2 = 0.00298906691897 ¬± 9.2e-13 : English -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarconductivity","page":"Unit Conversions","title":"MeasureSystems.molarconductivity","text":"molarconductivity = [N‚Åª¬πs‚Åª¬πC¬≤mol‚Åª¬π], [kg‚Åª¬πm‚Åª¬πs*C¬≤mol‚Åª¬π], [N‚Åª¬πs‚Åª¬πC¬≤mol‚Åª¬π]\nmolarconductivity(U::UnitSystem,S::UnitSystem) = conductivity(U,S)*area(U,S)/mole(U,S)\nmolarconductivity(v::Real,U::UnitSystem,S::UnitSystem) = v/molarconductivity(U,S)\n\nConductivity per molarvolume or molarconductivity (S‚ãÖm¬≤‚ãÖmol‚Åª¬π), unit conversion factor.\n\njulia> molarconductivity(EMU,Metric) # S‚ãÖm¬≤‚ãÖabŒ©‚ãÖcm‚Åª¬≤\n2‚Å∑5‚Å∑ = 1.0e7 : EMU -> Metric\n\njulia> molarconductivity(ESU,Metric) # S‚ãÖm¬≤‚ãÖstatŒ©‚ãÖcm‚Åª¬≤\nùò§‚Åª¬≤2¬≥5¬≥ = 1.1126500560536185e-14 : ESU -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.molarsusceptibility","page":"Unit Conversions","title":"MeasureSystems.molarsusceptibility","text":"molarsusceptibility = [m¬≥mol‚Åª¬πrad‚Åª¬≤‚Åª¬π], [m¬≥mol‚Åª¬π], [m¬≥mol‚Åª¬π]\nmolarsusceptibility(U::UnitSystem,S::UnitSystem) = specificsusceptibility(U,S)*molarmass(U,S)\nmolarsusceptibility(v::Real,U::UnitSystem,S::UnitSystem) = v/molarsusceptibility(U,S)\n\nMagnetic/electric molar mass susceptibility (m¬≥‚ãÖmol‚Åª¬π), unit conversion factor.\n\njulia> molarsusceptibility(CGS,Metric) # m¬≥‚ãÖcm‚Åª¬≥\nœÑ*2‚Åª‚Åµ5‚Åª‚Å∂ = 1.2566370614359172e-5 : Gauss -> Metric\n\njulia> molarsusceptibility(Metric,SI2019) # m¬≥‚ãÖmol‚ãÖmol‚Åª¬π‚ãÖcm‚Åª¬≥\nùò©*ùò§‚Åª¬πNA*R‚àû*Œ±‚Åª¬≤Œº‚Çë·µ§‚Åª¬π2‚Å¥5¬≥ = 0.99999999966 ¬± 3.1e-10 : Metric -> SI2019\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.catalysis","page":"Unit Conversions","title":"MeasureSystems.catalysis","text":"catalysis = [s‚Åª¬πmol], [s‚Åª¬πmol], [s‚Åª¬πmol]\ncatalysis(U::UnitSystem,S::UnitSystem) = mole(U,S)/time(U,S)\ncatalysis(v::Real,U::UnitSystem,S::UnitSystem) = v/catalysis(U,S)\n\nCatalytic activity or mole per time or catalysis (kat, mol‚ãÖs‚Åª¬π), unit conversion factor.\n\njulia> catalysis(English,Metric) # kat‚ãÖs‚ãÖlb-mol‚Åª¬π\nlb*2¬≥5¬≥ = 453.59237 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.specificity","page":"Unit Conversions","title":"MeasureSystems.specificity","text":"specificity = [m¬≥s‚Åª¬πmol‚Åª¬π], [m¬≥s‚Åª¬πmol‚Åª¬π], [m¬≥s‚Åª¬πmol‚Åª¬π]\nspecificity(U::UnitSystem,S::UnitSystem) = volume(U,S)/mole(U,S)/time(U,S)\nspecificity(v::Real,U::UnitSystem,S::UnitSystem) = v/specificity(U,S)\n\nCatalytic efficiency or volume per mole per time (m¬≥‚ãÖmol‚Åª¬π‚ãÖs‚Åª¬π), unit conversion factor.\n\njulia> specificity(CGS,Metric) # m¬≥‚ãÖcm‚Åª¬≥\n2‚Åª‚Å∂5‚Åª‚Å∂ = 1.0e-6 : Gauss -> Metric\n\njulia> specificity(English,Metric) # m¬≥‚ãÖlb-mol‚ãÖmol‚Åª¬π‚ãÖft‚Åª¬≥\nft¬≥lb‚Åª¬π2‚Åª¬≥5‚Åª¬≥ = 6.242796057614462e-5 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#Photometric-Units-1","page":"Unit Conversions","title":"Photometric Units","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"luminousflux\nluminance\nluminousenergy\nluminousexposure\nMeasureSystems.luminousefficacy(::UnitSystem,::UnitSystem)","category":"page"},{"location":"convert.html#MeasureSystems.luminousflux","page":"Unit Conversions","title":"MeasureSystems.luminousflux","text":"luminousflux = [lm*rad‚Åª¬π], [lm], [lm]\nluminousflux(U::UnitSystem,S::UnitSystem) = luminousefficacy(U,S)*planck(U,S)/time(U,S)^2\nluminousflux(v::Real,U::UnitSystem,S::UnitSystem) = v/luminousflux(U,S)\n\nPerceived power of light or luminousflux (lm, cd‚ãÖsr), unit conversion factor.\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.luminance","page":"Unit Conversions","title":"MeasureSystems.luminance","text":"luminance = [m‚Åª¬≤lm*rad‚Åª¬π], [m‚Åª¬≤lm], [m‚Åª¬≤lm]\nluminance(U::UnitSystem,S::UnitSystem) = luminousflux(U,S)/area(U,S)\nluminance(v::Real,U::UnitSystem,S::UnitSystem) = v/luminance(U,S)\n\nLuminous intensity per area or luminance (lx, lm‚ãÖm‚Åª¬≤, cd‚ãÖm‚Åª¬≤‚ãÖsr), unit conversion factor.\n\njulia> luminance(CGS,Metric) # lx‚ãÖph‚Åª¬π\n2‚Å¥5‚Å¥ = 10000.0 : Gauss -> Metric\n\njulia> luminance(IAU,Metric) # lx‚ãÖau¬≤‚ãÖlm‚Åª¬π\nau‚Åª¬≤ = 4.4683704995199996e-23 ¬± 1.7999999999999998e-33 : IAU‚òâ -> Metric\n\njulia> luminance(English,Metric) # ft¬≤‚ãÖm‚Åª¬≤\nft‚Åª¬≤ = 10.76391041670972 : English -> Metric\n\njulia> 1/10.76 # lx‚ãÖfc‚Åª¬π\n0.0929368029739777\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.luminousenergy","page":"Unit Conversions","title":"MeasureSystems.luminousenergy","text":"luminousenergy = [s*lm*rad‚Åª¬π], [s*lm], [s*lm]\nluminousenergy(U::UnitSystem,S::UnitSystem) = luminousflux(U,S)*time(U,S)\nluminousenergy(v::Real,U::UnitSystem,S::UnitSystem) = v/luminousenergy(U,S)\n\nPerceived quantity of light or luminousenergy (lm‚ãÖs, cd‚ãÖs‚ãÖsr), unit conversion factor.\n\njulia> luminousenergy(IAU,Metric) # s‚ãÖday‚Åª¬π\n2‚Å∑3¬≥5¬≤ = 86400.0 : IAU‚òâ -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.luminousexposure","page":"Unit Conversions","title":"MeasureSystems.luminousexposure","text":"luminousexposure = [m‚Åª¬≤s*lm*rad‚Åª¬π], [m‚Åª¬≤s*lm], [m‚Åª¬≤s*lm]\nluminousexposure(U::UnitSystem,S::UnitSystem) = luminance(U,S)*time(U,S)\nluminousexposure(v::Real,U::UnitSystem,S::UnitSystem) = v/luminousexposure(U,S)\n\nIntegrated luminance along time (lx‚ãÖs, lm‚ãÖs‚ãÖm‚Åª¬≤, cd‚ãÖs‚ãÖm‚Åª¬≤‚ãÖsr), unit conversion factor.\n\njulia> luminousexposure(CGS,Metric) # lx‚ãÖph‚Åª¬π\n2‚Å¥5‚Å¥ = 10000.0 : Gauss -> Metric\n\njulia> luminousexposure(IAU,Metric) # s‚ãÖau¬≤‚ãÖday‚Åª¬π‚ãÖm‚Åª¬≤\nau‚Åª¬≤2‚Å∑3¬≥5¬≤ = 3.86067211159e-18 ¬± 1.4999999999999998e-28 : IAU‚òâ -> Metric\n\njulia> luminousexposure(English,Metric) # ft¬≤‚ãÖm‚Åª¬≤\nft‚Åª¬≤ = 10.76391041670972 : English -> Metric\n\n\n\n\n\n","category":"constant"},{"location":"convert.html#MeasureSystems.luminousefficacy-Tuple{UnitSystem, UnitSystem}","page":"Unit Conversions","title":"MeasureSystems.luminousefficacy","text":"luminousefficacy = [N‚Åª¬πm‚Åª¬πs*lm], [kg‚Åª¬πm‚Åª¬≤s¬≥lm], [N‚Åª¬πm‚Åª¬πs*lm]\nluminousefficacy(U::UnitSystem,S::UnitSystem) = luminousefficacy(S)/luminousefficacy(U)\nluminousefficacy(v::Real,U::UnitSystem,S::UnitSystem) = v/luminousefficacy(U,S)\n\nRatio of luminousflux to power or luminousefficacy (lm‚ãÖW‚Åª¬π), unit conversion factor.\n\njulia> luminousefficacy(CGS,Metric) # erg‚ãÖs‚Åª¬π‚ãÖW‚Åª¬π\n2‚Å∑5‚Å∑ = 1.0e7 : Gauss -> Metric\n\njulia> luminousefficacy(English,Metric) # ft‚ãÖlb‚ãÖs‚Åª¬π‚ãÖW‚Åª¬π\ng‚ÇÄ‚Åª¬πft‚Åª¬πlb‚Åª¬π = 0.7375621492772653 : English -> Metric\n\n\n\n\n\n","category":"method"},{"location":"convert.html#Conversion-Index-1","page":"Unit Conversions","title":"Conversion Index","text":"","category":"section"},{"location":"convert.html#","page":"Unit Conversions","title":"Unit Conversions","text":"Pages = [\"convert.md\",\"units.md\"]","category":"page"}]
}
